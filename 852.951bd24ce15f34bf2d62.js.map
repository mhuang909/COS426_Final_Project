{"version":3,"file":"852.951bd24ce15f34bf2d62.js","mappings":"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","sources":["webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/events/FederatedEvent.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/ismobilejs/esm/isMobile.js","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/utils/browser/isMobile.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/accessibility/AccessibilitySystem.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/accessibility/init.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/accessibility/accessibilityTarget.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/events/EventTicker.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/events/FederatedMouseEvent.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/events/FederatedPointerEvent.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/events/FederatedWheelEvent.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/events/EventBoundary.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/events/EventSystem.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/events/FederatedEventTarget.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/events/init.mjs"],"sourcesContent":["import { Point } from '../maths/point/Point.mjs';\n\n\"use strict\";\nclass FederatedEvent {\n  /**\n   * @param manager - The event boundary which manages this event. Propagation can only occur\n   *  within the boundary's jurisdiction.\n   */\n  constructor(manager) {\n    /** Flags whether this event bubbles. This will take effect only if it is set before propagation. */\n    this.bubbles = true;\n    /** @deprecated since 7.0.0 */\n    this.cancelBubble = true;\n    /**\n     * Flags whether this event can be canceled using {@link FederatedEvent.preventDefault}. This is always\n     * false (for now).\n     */\n    this.cancelable = false;\n    /**\n     * Flag added for compatibility with DOM {@code Event}. It is not used in the Federated Events\n     * API.\n     * @see https://dom.spec.whatwg.org/#dom-event-composed\n     */\n    this.composed = false;\n    /** Flags whether the default response of the user agent was prevent through this event. */\n    this.defaultPrevented = false;\n    /**\n     * The propagation phase.\n     * @default {@link FederatedEvent.NONE}\n     */\n    this.eventPhase = FederatedEvent.prototype.NONE;\n    /** Flags whether propagation was stopped. */\n    this.propagationStopped = false;\n    /** Flags whether propagation was immediately stopped. */\n    this.propagationImmediatelyStopped = false;\n    /** The coordinates of the event relative to the nearest DOM layer. This is a non-standard property. */\n    this.layer = new Point();\n    /** The coordinates of the event relative to the DOM document. This is a non-standard property. */\n    this.page = new Point();\n    this.NONE = 0;\n    this.CAPTURING_PHASE = 1;\n    this.AT_TARGET = 2;\n    this.BUBBLING_PHASE = 3;\n    this.manager = manager;\n  }\n  /** @readonly */\n  get layerX() {\n    return this.layer.x;\n  }\n  /** @readonly */\n  get layerY() {\n    return this.layer.y;\n  }\n  /** @readonly */\n  get pageX() {\n    return this.page.x;\n  }\n  /** @readonly */\n  get pageY() {\n    return this.page.y;\n  }\n  /**\n   * Fallback for the deprecated @code{InteractionEvent.data}.\n   * @deprecated since 7.0.0\n   */\n  get data() {\n    return this;\n  }\n  /** The propagation path for this event. Alias for {@link EventBoundary.propagationPath}. */\n  composedPath() {\n    if (this.manager && (!this.path || this.path[this.path.length - 1] !== this.target)) {\n      this.path = this.target ? this.manager.propagationPath(this.target) : [];\n    }\n    return this.path;\n  }\n  /**\n   * Unimplemented method included for implementing the DOM interface {@code Event}. It will throw an {@code Error}.\n   * @deprecated\n   * @param _type\n   * @param _bubbles\n   * @param _cancelable\n   */\n  initEvent(_type, _bubbles, _cancelable) {\n    throw new Error(\"initEvent() is a legacy DOM API. It is not implemented in the Federated Events API.\");\n  }\n  /**\n   * Unimplemented method included for implementing the DOM interface {@code UIEvent}. It will throw an {@code Error}.\n   * @deprecated\n   * @param _typeArg\n   * @param _bubblesArg\n   * @param _cancelableArg\n   * @param _viewArg\n   * @param _detailArg\n   */\n  initUIEvent(_typeArg, _bubblesArg, _cancelableArg, _viewArg, _detailArg) {\n    throw new Error(\"initUIEvent() is a legacy DOM API. It is not implemented in the Federated Events API.\");\n  }\n  /** Prevent default behavior of PixiJS and the user agent. */\n  preventDefault() {\n    if (this.nativeEvent instanceof Event && this.nativeEvent.cancelable) {\n      this.nativeEvent.preventDefault();\n    }\n    this.defaultPrevented = true;\n  }\n  /**\n   * Stop this event from propagating to any addition listeners, including on the\n   * {@link FederatedEventTarget.currentTarget currentTarget} and also the following\n   * event targets on the propagation path.\n   */\n  stopImmediatePropagation() {\n    this.propagationImmediatelyStopped = true;\n  }\n  /**\n   * Stop this event from propagating to the next {@link FederatedEventTarget}. The rest of the listeners\n   * on the {@link FederatedEventTarget.currentTarget currentTarget} will still be notified.\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\nexport { FederatedEvent };\n//# sourceMappingURL=FederatedEvent.mjs.map\n","var appleIphone = /iPhone/i;\nvar appleIpod = /iPod/i;\nvar appleTablet = /iPad/i;\nvar appleUniversal = /\\biOS-universal(?:.+)Mac\\b/i;\nvar androidPhone = /\\bAndroid(?:.+)Mobile\\b/i;\nvar androidTablet = /Android/i;\nvar amazonPhone = /(?:SD4930UR|\\bSilk(?:.+)Mobile\\b)/i;\nvar amazonTablet = /Silk/i;\nvar windowsPhone = /Windows Phone/i;\nvar windowsTablet = /\\bWindows(?:.+)ARM\\b/i;\nvar otherBlackBerry = /BlackBerry/i;\nvar otherBlackBerry10 = /BB10/i;\nvar otherOpera = /Opera Mini/i;\nvar otherChrome = /\\b(CriOS|Chrome)(?:.+)Mobile/i;\nvar otherFirefox = /Mobile(?:.+)Firefox\\b/i;\nvar isAppleTabletOnIos13 = function (navigator) {\n    return (typeof navigator !== 'undefined' &&\n        navigator.platform === 'MacIntel' &&\n        typeof navigator.maxTouchPoints === 'number' &&\n        navigator.maxTouchPoints > 1 &&\n        typeof MSStream === 'undefined');\n};\nfunction createMatch(userAgent) {\n    return function (regex) { return regex.test(userAgent); };\n}\nexport default function isMobile(param) {\n    var nav = {\n        userAgent: '',\n        platform: '',\n        maxTouchPoints: 0\n    };\n    if (!param && typeof navigator !== 'undefined') {\n        nav = {\n            userAgent: navigator.userAgent,\n            platform: navigator.platform,\n            maxTouchPoints: navigator.maxTouchPoints || 0\n        };\n    }\n    else if (typeof param === 'string') {\n        nav.userAgent = param;\n    }\n    else if (param && param.userAgent) {\n        nav = {\n            userAgent: param.userAgent,\n            platform: param.platform,\n            maxTouchPoints: param.maxTouchPoints || 0\n        };\n    }\n    var userAgent = nav.userAgent;\n    var tmp = userAgent.split('[FBAN');\n    if (typeof tmp[1] !== 'undefined') {\n        userAgent = tmp[0];\n    }\n    tmp = userAgent.split('Twitter');\n    if (typeof tmp[1] !== 'undefined') {\n        userAgent = tmp[0];\n    }\n    var match = createMatch(userAgent);\n    var result = {\n        apple: {\n            phone: match(appleIphone) && !match(windowsPhone),\n            ipod: match(appleIpod),\n            tablet: !match(appleIphone) &&\n                (match(appleTablet) || isAppleTabletOnIos13(nav)) &&\n                !match(windowsPhone),\n            universal: match(appleUniversal),\n            device: (match(appleIphone) ||\n                match(appleIpod) ||\n                match(appleTablet) ||\n                match(appleUniversal) ||\n                isAppleTabletOnIos13(nav)) &&\n                !match(windowsPhone)\n        },\n        amazon: {\n            phone: match(amazonPhone),\n            tablet: !match(amazonPhone) && match(amazonTablet),\n            device: match(amazonPhone) || match(amazonTablet)\n        },\n        android: {\n            phone: (!match(windowsPhone) && match(amazonPhone)) ||\n                (!match(windowsPhone) && match(androidPhone)),\n            tablet: !match(windowsPhone) &&\n                !match(amazonPhone) &&\n                !match(androidPhone) &&\n                (match(amazonTablet) || match(androidTablet)),\n            device: (!match(windowsPhone) &&\n                (match(amazonPhone) ||\n                    match(amazonTablet) ||\n                    match(androidPhone) ||\n                    match(androidTablet))) ||\n                match(/\\bokhttp\\b/i)\n        },\n        windows: {\n            phone: match(windowsPhone),\n            tablet: match(windowsTablet),\n            device: match(windowsPhone) || match(windowsTablet)\n        },\n        other: {\n            blackberry: match(otherBlackBerry),\n            blackberry10: match(otherBlackBerry10),\n            opera: match(otherOpera),\n            firefox: match(otherFirefox),\n            chrome: match(otherChrome),\n            device: match(otherBlackBerry) ||\n                match(otherBlackBerry10) ||\n                match(otherOpera) ||\n                match(otherFirefox) ||\n                match(otherChrome)\n        },\n        any: false,\n        phone: false,\n        tablet: false\n    };\n    result.any =\n        result.apple.device ||\n            result.android.device ||\n            result.windows.device ||\n            result.other.device;\n    result.phone =\n        result.apple.phone || result.android.phone || result.windows.phone;\n    result.tablet =\n        result.apple.tablet || result.android.tablet || result.windows.tablet;\n    return result;\n}\n//# sourceMappingURL=isMobile.js.map","import isMobileJs from 'ismobilejs';\n\n\"use strict\";\nconst isMobileCall = isMobileJs.default ?? isMobileJs;\nconst isMobile = isMobileCall(globalThis.navigator);\n\nexport { isMobile };\n//# sourceMappingURL=isMobile.mjs.map\n","import { FederatedEvent } from '../events/FederatedEvent.mjs';\nimport { ExtensionType } from '../extensions/Extensions.mjs';\nimport { isMobile } from '../utils/browser/isMobile.mjs';\nimport { removeItems } from '../utils/data/removeItems.mjs';\n\n\"use strict\";\nconst KEY_CODE_TAB = 9;\nconst DIV_TOUCH_SIZE = 100;\nconst DIV_TOUCH_POS_X = 0;\nconst DIV_TOUCH_POS_Y = 0;\nconst DIV_TOUCH_ZINDEX = 2;\nconst DIV_HOOK_SIZE = 1;\nconst DIV_HOOK_POS_X = -1e3;\nconst DIV_HOOK_POS_Y = -1e3;\nconst DIV_HOOK_ZINDEX = 2;\nclass AccessibilitySystem {\n  // 2fps\n  // eslint-disable-next-line jsdoc/require-param\n  /**\n   * @param {WebGLRenderer|WebGPURenderer} renderer - A reference to the current renderer\n   */\n  constructor(renderer, _mobileInfo = isMobile) {\n    this._mobileInfo = _mobileInfo;\n    /** Setting this to true will visually show the divs. */\n    this.debug = false;\n    /** Internal variable, see isActive getter. */\n    this._isActive = false;\n    /** Internal variable, see isMobileAccessibility getter. */\n    this._isMobileAccessibility = false;\n    /** A simple pool for storing divs. */\n    this._pool = [];\n    /** This is a tick used to check if an object is no longer being rendered. */\n    this._renderId = 0;\n    /** The array of currently active accessible items. */\n    this._children = [];\n    /** Count to throttle div updates on android devices. */\n    this._androidUpdateCount = 0;\n    /**  The frequency to update the div elements. */\n    this._androidUpdateFrequency = 500;\n    this._hookDiv = null;\n    if (_mobileInfo.tablet || _mobileInfo.phone) {\n      this._createTouchHook();\n    }\n    const div = document.createElement(\"div\");\n    div.style.width = `${DIV_TOUCH_SIZE}px`;\n    div.style.height = `${DIV_TOUCH_SIZE}px`;\n    div.style.position = \"absolute\";\n    div.style.top = `${DIV_TOUCH_POS_X}px`;\n    div.style.left = `${DIV_TOUCH_POS_Y}px`;\n    div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n    this._div = div;\n    this._renderer = renderer;\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onMouseMove = this._onMouseMove.bind(this);\n    globalThis.addEventListener(\"keydown\", this._onKeyDown, false);\n  }\n  /**\n   * Value of `true` if accessibility is currently active and accessibility layers are showing.\n   * @member {boolean}\n   * @readonly\n   */\n  get isActive() {\n    return this._isActive;\n  }\n  /**\n   * Value of `true` if accessibility is enabled for touch devices.\n   * @member {boolean}\n   * @readonly\n   */\n  get isMobileAccessibility() {\n    return this._isMobileAccessibility;\n  }\n  get hookDiv() {\n    return this._hookDiv;\n  }\n  /**\n   * Creates the touch hooks.\n   * @private\n   */\n  _createTouchHook() {\n    const hookDiv = document.createElement(\"button\");\n    hookDiv.style.width = `${DIV_HOOK_SIZE}px`;\n    hookDiv.style.height = `${DIV_HOOK_SIZE}px`;\n    hookDiv.style.position = \"absolute\";\n    hookDiv.style.top = `${DIV_HOOK_POS_X}px`;\n    hookDiv.style.left = `${DIV_HOOK_POS_Y}px`;\n    hookDiv.style.zIndex = DIV_HOOK_ZINDEX.toString();\n    hookDiv.style.backgroundColor = \"#FF0000\";\n    hookDiv.title = \"select to enable accessibility for this content\";\n    hookDiv.addEventListener(\"focus\", () => {\n      this._isMobileAccessibility = true;\n      this._activate();\n      this._destroyTouchHook();\n    });\n    document.body.appendChild(hookDiv);\n    this._hookDiv = hookDiv;\n  }\n  /**\n   * Destroys the touch hooks.\n   * @private\n   */\n  _destroyTouchHook() {\n    if (!this._hookDiv) {\n      return;\n    }\n    document.body.removeChild(this._hookDiv);\n    this._hookDiv = null;\n  }\n  /**\n   * Activating will cause the Accessibility layer to be shown.\n   * This is called when a user presses the tab key.\n   * @private\n   */\n  _activate() {\n    if (this._isActive) {\n      return;\n    }\n    this._isActive = true;\n    globalThis.document.addEventListener(\"mousemove\", this._onMouseMove, true);\n    globalThis.removeEventListener(\"keydown\", this._onKeyDown, false);\n    this._renderer.runners.postrender.add(this);\n    this._renderer.view.canvas.parentNode?.appendChild(this._div);\n  }\n  /**\n   * Deactivating will cause the Accessibility layer to be hidden.\n   * This is called when a user moves the mouse.\n   * @private\n   */\n  _deactivate() {\n    if (!this._isActive || this._isMobileAccessibility) {\n      return;\n    }\n    this._isActive = false;\n    globalThis.document.removeEventListener(\"mousemove\", this._onMouseMove, true);\n    globalThis.addEventListener(\"keydown\", this._onKeyDown, false);\n    this._renderer.runners.postrender.remove(this);\n    this._div.parentNode?.removeChild(this._div);\n  }\n  /**\n   * This recursive function will run through the scene graph and add any new accessible objects to the DOM layer.\n   * @private\n   * @param {Container} container - The Container to check.\n   */\n  _updateAccessibleObjects(container) {\n    if (!container.visible || !container.accessibleChildren) {\n      return;\n    }\n    if (container.accessible && container.isInteractive()) {\n      if (!container._accessibleActive) {\n        this._addChild(container);\n      }\n      container._renderId = this._renderId;\n    }\n    const children = container.children;\n    if (children) {\n      for (let i = 0; i < children.length; i++) {\n        this._updateAccessibleObjects(children[i]);\n      }\n    }\n  }\n  /**\n   * Runner init called, view is available at this point.\n   * @ignore\n   */\n  init(options) {\n    this.debug = options?.debug ?? this.debug;\n    this._renderer.runners.postrender.remove(this);\n  }\n  /**\n   * Runner postrender was called, ensure that all divs are mapped correctly to their Containers.\n   * Only fires while active.\n   * @ignore\n   */\n  postrender() {\n    const now = performance.now();\n    if (this._mobileInfo.android.device && now < this._androidUpdateCount) {\n      return;\n    }\n    this._androidUpdateCount = now + this._androidUpdateFrequency;\n    if (!this._renderer.renderingToScreen || !this._renderer.view.canvas) {\n      return;\n    }\n    if (this._renderer.lastObjectRendered) {\n      this._updateAccessibleObjects(this._renderer.lastObjectRendered);\n    }\n    const { x, y, width, height } = this._renderer.view.canvas.getBoundingClientRect();\n    const { width: viewWidth, height: viewHeight, resolution } = this._renderer;\n    const sx = width / viewWidth * resolution;\n    const sy = height / viewHeight * resolution;\n    let div = this._div;\n    div.style.left = `${x}px`;\n    div.style.top = `${y}px`;\n    div.style.width = `${viewWidth}px`;\n    div.style.height = `${viewHeight}px`;\n    for (let i = 0; i < this._children.length; i++) {\n      const child = this._children[i];\n      if (child._renderId !== this._renderId) {\n        child._accessibleActive = false;\n        removeItems(this._children, i, 1);\n        this._div.removeChild(child._accessibleDiv);\n        this._pool.push(child._accessibleDiv);\n        child._accessibleDiv = null;\n        i--;\n      } else {\n        div = child._accessibleDiv;\n        let hitArea = child.hitArea;\n        const wt = child.worldTransform;\n        if (child.hitArea) {\n          div.style.left = `${(wt.tx + hitArea.x * wt.a) * sx}px`;\n          div.style.top = `${(wt.ty + hitArea.y * wt.d) * sy}px`;\n          div.style.width = `${hitArea.width * wt.a * sx}px`;\n          div.style.height = `${hitArea.height * wt.d * sy}px`;\n        } else {\n          hitArea = child.getBounds().rectangle;\n          this._capHitArea(hitArea);\n          div.style.left = `${hitArea.x * sx}px`;\n          div.style.top = `${hitArea.y * sy}px`;\n          div.style.width = `${hitArea.width * sx}px`;\n          div.style.height = `${hitArea.height * sy}px`;\n          if (div.title !== child.accessibleTitle && child.accessibleTitle !== null) {\n            div.title = child.accessibleTitle || \"\";\n          }\n          if (div.getAttribute(\"aria-label\") !== child.accessibleHint && child.accessibleHint !== null) {\n            div.setAttribute(\"aria-label\", child.accessibleHint || \"\");\n          }\n        }\n        if (child.accessibleTitle !== div.title || child.tabIndex !== div.tabIndex) {\n          div.title = child.accessibleTitle || \"\";\n          div.tabIndex = child.tabIndex;\n          if (this.debug) {\n            this._updateDebugHTML(div);\n          }\n        }\n      }\n    }\n    this._renderId++;\n  }\n  /**\n   * private function that will visually add the information to the\n   * accessibility div\n   * @param {HTMLElement} div -\n   */\n  _updateDebugHTML(div) {\n    div.innerHTML = `type: ${div.type}</br> title : ${div.title}</br> tabIndex: ${div.tabIndex}`;\n  }\n  /**\n   * Adjust the hit area based on the bounds of a display object\n   * @param {Rectangle} hitArea - Bounds of the child\n   */\n  _capHitArea(hitArea) {\n    if (hitArea.x < 0) {\n      hitArea.width += hitArea.x;\n      hitArea.x = 0;\n    }\n    if (hitArea.y < 0) {\n      hitArea.height += hitArea.y;\n      hitArea.y = 0;\n    }\n    const { width: viewWidth, height: viewHeight } = this._renderer;\n    if (hitArea.x + hitArea.width > viewWidth) {\n      hitArea.width = viewWidth - hitArea.x;\n    }\n    if (hitArea.y + hitArea.height > viewHeight) {\n      hitArea.height = viewHeight - hitArea.y;\n    }\n  }\n  /**\n   * Adds a Container to the accessibility manager\n   * @private\n   * @param {Container} container - The child to make accessible.\n   */\n  _addChild(container) {\n    let div = this._pool.pop();\n    if (!div) {\n      div = document.createElement(\"button\");\n      div.style.width = `${DIV_TOUCH_SIZE}px`;\n      div.style.height = `${DIV_TOUCH_SIZE}px`;\n      div.style.backgroundColor = this.debug ? \"rgba(255,255,255,0.5)\" : \"transparent\";\n      div.style.position = \"absolute\";\n      div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n      div.style.borderStyle = \"none\";\n      if (navigator.userAgent.toLowerCase().includes(\"chrome\")) {\n        div.setAttribute(\"aria-live\", \"off\");\n      } else {\n        div.setAttribute(\"aria-live\", \"polite\");\n      }\n      if (navigator.userAgent.match(/rv:.*Gecko\\//)) {\n        div.setAttribute(\"aria-relevant\", \"additions\");\n      } else {\n        div.setAttribute(\"aria-relevant\", \"text\");\n      }\n      div.addEventListener(\"click\", this._onClick.bind(this));\n      div.addEventListener(\"focus\", this._onFocus.bind(this));\n      div.addEventListener(\"focusout\", this._onFocusOut.bind(this));\n    }\n    div.style.pointerEvents = container.accessiblePointerEvents;\n    div.type = container.accessibleType;\n    if (container.accessibleTitle && container.accessibleTitle !== null) {\n      div.title = container.accessibleTitle;\n    } else if (!container.accessibleHint || container.accessibleHint === null) {\n      div.title = `container ${container.tabIndex}`;\n    }\n    if (container.accessibleHint && container.accessibleHint !== null) {\n      div.setAttribute(\"aria-label\", container.accessibleHint);\n    }\n    if (this.debug) {\n      this._updateDebugHTML(div);\n    }\n    container._accessibleActive = true;\n    container._accessibleDiv = div;\n    div.container = container;\n    this._children.push(container);\n    this._div.appendChild(container._accessibleDiv);\n    container._accessibleDiv.tabIndex = container.tabIndex;\n  }\n  /**\n   * Dispatch events with the EventSystem.\n   * @param e\n   * @param type\n   * @private\n   */\n  _dispatchEvent(e, type) {\n    const { container: target } = e.target;\n    const boundary = this._renderer.events.rootBoundary;\n    const event = Object.assign(new FederatedEvent(boundary), { target });\n    boundary.rootTarget = this._renderer.lastObjectRendered;\n    type.forEach((type2) => boundary.dispatchEvent(event, type2));\n  }\n  /**\n   * Maps the div button press to pixi's EventSystem (click)\n   * @private\n   * @param {MouseEvent} e - The click event.\n   */\n  _onClick(e) {\n    this._dispatchEvent(e, [\"click\", \"pointertap\", \"tap\"]);\n  }\n  /**\n   * Maps the div focus events to pixi's EventSystem (mouseover)\n   * @private\n   * @param {FocusEvent} e - The focus event.\n   */\n  _onFocus(e) {\n    if (!e.target.getAttribute(\"aria-live\")) {\n      e.target.setAttribute(\"aria-live\", \"assertive\");\n    }\n    this._dispatchEvent(e, [\"mouseover\"]);\n  }\n  /**\n   * Maps the div focus events to pixi's EventSystem (mouseout)\n   * @private\n   * @param {FocusEvent} e - The focusout event.\n   */\n  _onFocusOut(e) {\n    if (!e.target.getAttribute(\"aria-live\")) {\n      e.target.setAttribute(\"aria-live\", \"polite\");\n    }\n    this._dispatchEvent(e, [\"mouseout\"]);\n  }\n  /**\n   * Is called when a key is pressed\n   * @private\n   * @param {KeyboardEvent} e - The keydown event.\n   */\n  _onKeyDown(e) {\n    if (e.keyCode !== KEY_CODE_TAB) {\n      return;\n    }\n    this._activate();\n  }\n  /**\n   * Is called when the mouse moves across the renderer element\n   * @private\n   * @param {MouseEvent} e - The mouse event.\n   */\n  _onMouseMove(e) {\n    if (e.movementX === 0 && e.movementY === 0) {\n      return;\n    }\n    this._deactivate();\n  }\n  /** Destroys the accessibility manager */\n  destroy() {\n    this._destroyTouchHook();\n    this._div = null;\n    globalThis.document.removeEventListener(\"mousemove\", this._onMouseMove, true);\n    globalThis.removeEventListener(\"keydown\", this._onKeyDown);\n    this._pool = null;\n    this._children = null;\n    this._renderer = null;\n  }\n}\n/** @ignore */\nAccessibilitySystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem\n  ],\n  name: \"accessibility\"\n};\n\nexport { AccessibilitySystem };\n//# sourceMappingURL=AccessibilitySystem.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { Container } from '../scene/container/Container.mjs';\nimport { AccessibilitySystem } from './AccessibilitySystem.mjs';\nimport { accessibilityTarget } from './accessibilityTarget.mjs';\n\n\"use strict\";\nextensions.add(AccessibilitySystem);\nContainer.mixin(accessibilityTarget);\n//# sourceMappingURL=init.mjs.map\n","\"use strict\";\nconst accessibilityTarget = {\n  /**\n   * Flag for if the object is accessible. If true AccessibilityManager will overlay a\n   * shadow div with attributes set\n   * @member {boolean}\n   * @memberof scene.Container#\n   */\n  accessible: false,\n  /**\n   * Sets the title attribute of the shadow div\n   * If accessibleTitle AND accessibleHint has not been this will default to 'container [tabIndex]'\n   * @member {string}\n   * @memberof scene.Container#\n   */\n  accessibleTitle: null,\n  /**\n   * Sets the aria-label attribute of the shadow div\n   * @member {string}\n   * @memberof scene.Container#\n   */\n  accessibleHint: null,\n  /**\n   * @member {number}\n   * @memberof scene.Container#\n   * @todo Needs docs.\n   */\n  tabIndex: 0,\n  /**\n   * @member {boolean}\n   * @memberof scene.Container#\n   * @private\n   */\n  _accessibleActive: false,\n  /**\n   * @memberof scene.Container#\n   * @private\n   */\n  _accessibleDiv: null,\n  /**\n   * Specify the type of div the accessible layer is. Screen readers treat the element differently\n   * depending on this type. Defaults to button.\n   * @member {string}\n   * @memberof scene.Container#\n   * @default 'button'\n   */\n  accessibleType: \"button\",\n  /**\n   * Specify the pointer-events the accessible div will use\n   * Defaults to auto.\n   * @type {PointerEvents}\n   * @memberof scene.Container#\n   * @default 'auto'\n   */\n  accessiblePointerEvents: \"auto\",\n  /**\n   * Setting to false will prevent any children inside this container to\n   * be accessible. Defaults to true.\n   * @member {boolean}\n   * @memberof scene.Container#\n   * @default true\n   */\n  accessibleChildren: true,\n  /**\n   * @member {number}\n   * @memberof scene.Container#\n   * @private\n   */\n  _renderId: -1\n};\n\nexport { accessibilityTarget };\n//# sourceMappingURL=accessibilityTarget.mjs.map\n","import { UPDATE_PRIORITY } from '../ticker/const.mjs';\nimport { Ticker } from '../ticker/Ticker.mjs';\n\n\"use strict\";\nclass EventsTickerClass {\n  constructor() {\n    /** The frequency that fake events will be fired. */\n    this.interactionFrequency = 10;\n    this._deltaTime = 0;\n    this._didMove = false;\n    this._tickerAdded = false;\n    this._pauseUpdate = true;\n  }\n  /**\n   * Initializes the event ticker.\n   * @param events - The event system.\n   */\n  init(events) {\n    this.removeTickerListener();\n    this.events = events;\n    this.interactionFrequency = 10;\n    this._deltaTime = 0;\n    this._didMove = false;\n    this._tickerAdded = false;\n    this._pauseUpdate = true;\n  }\n  /** Whether to pause the update checks or not. */\n  get pauseUpdate() {\n    return this._pauseUpdate;\n  }\n  set pauseUpdate(paused) {\n    this._pauseUpdate = paused;\n  }\n  /** Adds the ticker listener. */\n  addTickerListener() {\n    if (this._tickerAdded || !this.domElement) {\n      return;\n    }\n    Ticker.system.add(this._tickerUpdate, this, UPDATE_PRIORITY.INTERACTION);\n    this._tickerAdded = true;\n  }\n  /** Removes the ticker listener. */\n  removeTickerListener() {\n    if (!this._tickerAdded) {\n      return;\n    }\n    Ticker.system.remove(this._tickerUpdate, this);\n    this._tickerAdded = false;\n  }\n  /** Sets flag to not fire extra events when the user has already moved there mouse */\n  pointerMoved() {\n    this._didMove = true;\n  }\n  /** Updates the state of interactive objects. */\n  _update() {\n    if (!this.domElement || this._pauseUpdate) {\n      return;\n    }\n    if (this._didMove) {\n      this._didMove = false;\n      return;\n    }\n    const rootPointerEvent = this.events[\"_rootPointerEvent\"];\n    if (this.events.supportsTouchEvents && rootPointerEvent.pointerType === \"touch\") {\n      return;\n    }\n    globalThis.document.dispatchEvent(new PointerEvent(\"pointermove\", {\n      clientX: rootPointerEvent.clientX,\n      clientY: rootPointerEvent.clientY,\n      pointerType: rootPointerEvent.pointerType,\n      pointerId: rootPointerEvent.pointerId\n    }));\n  }\n  /**\n   * Updates the state of interactive objects if at least {@link interactionFrequency}\n   * milliseconds have passed since the last invocation.\n   *\n   * Invoked by a throttled ticker update from {@link Ticker.system}.\n   * @param ticker - The throttled ticker.\n   */\n  _tickerUpdate(ticker) {\n    this._deltaTime += ticker.deltaTime;\n    if (this._deltaTime < this.interactionFrequency) {\n      return;\n    }\n    this._deltaTime = 0;\n    this._update();\n  }\n}\nconst EventsTicker = new EventsTickerClass();\n\nexport { EventsTicker };\n//# sourceMappingURL=EventTicker.mjs.map\n","import { Point } from '../maths/point/Point.mjs';\nimport { FederatedEvent } from './FederatedEvent.mjs';\n\n\"use strict\";\nclass FederatedMouseEvent extends FederatedEvent {\n  constructor() {\n    super(...arguments);\n    /** The coordinates of the mouse event relative to the canvas. */\n    this.client = new Point();\n    /** The movement in this pointer relative to the last `mousemove` event. */\n    this.movement = new Point();\n    /** The offset of the pointer coordinates w.r.t. target Container in world space. This is not supported at the moment. */\n    this.offset = new Point();\n    /** The pointer coordinates in world space. */\n    this.global = new Point();\n    /**\n     * The pointer coordinates in the renderer's {@link Renderer.screen screen}. This has slightly\n     * different semantics than native PointerEvent screenX/screenY.\n     */\n    this.screen = new Point();\n  }\n  /** @readonly */\n  get clientX() {\n    return this.client.x;\n  }\n  /** @readonly */\n  get clientY() {\n    return this.client.y;\n  }\n  /**\n   * Alias for {@link FederatedMouseEvent.clientX this.clientX}.\n   * @readonly\n   */\n  get x() {\n    return this.clientX;\n  }\n  /**\n   * Alias for {@link FederatedMouseEvent.clientY this.clientY}.\n   * @readonly\n   */\n  get y() {\n    return this.clientY;\n  }\n  /** @readonly */\n  get movementX() {\n    return this.movement.x;\n  }\n  /** @readonly */\n  get movementY() {\n    return this.movement.y;\n  }\n  /** @readonly */\n  get offsetX() {\n    return this.offset.x;\n  }\n  /** @readonly */\n  get offsetY() {\n    return this.offset.y;\n  }\n  /** @readonly */\n  get globalX() {\n    return this.global.x;\n  }\n  /** @readonly */\n  get globalY() {\n    return this.global.y;\n  }\n  /**\n   * The pointer coordinates in the renderer's screen. Alias for {@code screen.x}.\n   * @readonly\n   */\n  get screenX() {\n    return this.screen.x;\n  }\n  /**\n   * The pointer coordinates in the renderer's screen. Alias for {@code screen.y}.\n   * @readonly\n   */\n  get screenY() {\n    return this.screen.y;\n  }\n  /**\n   * This will return the local coordinates of the specified container for this InteractionData\n   * @param {Container} container - The Container that you would like the local\n   *  coords off\n   * @param {PointData} point - A Point object in which to store the value, optional (otherwise\n   *  will create a new point)\n   * @param {PointData} globalPos - A Point object containing your custom global coords, optional\n   *  (otherwise will use the current global coords)\n   * @returns - A point containing the coordinates of the InteractionData position relative\n   *  to the Container\n   */\n  getLocalPosition(container, point, globalPos) {\n    return container.worldTransform.applyInverse(globalPos || this.global, point);\n  }\n  /**\n   * Whether the modifier key was pressed when this event natively occurred.\n   * @param key - The modifier key.\n   */\n  getModifierState(key) {\n    return \"getModifierState\" in this.nativeEvent && this.nativeEvent.getModifierState(key);\n  }\n  /**\n   * Not supported.\n   * @param _typeArg\n   * @param _canBubbleArg\n   * @param _cancelableArg\n   * @param _viewArg\n   * @param _detailArg\n   * @param _screenXArg\n   * @param _screenYArg\n   * @param _clientXArg\n   * @param _clientYArg\n   * @param _ctrlKeyArg\n   * @param _altKeyArg\n   * @param _shiftKeyArg\n   * @param _metaKeyArg\n   * @param _buttonArg\n   * @param _relatedTargetArg\n   * @deprecated since 7.0.0\n   */\n  // eslint-disable-next-line max-params\n  initMouseEvent(_typeArg, _canBubbleArg, _cancelableArg, _viewArg, _detailArg, _screenXArg, _screenYArg, _clientXArg, _clientYArg, _ctrlKeyArg, _altKeyArg, _shiftKeyArg, _metaKeyArg, _buttonArg, _relatedTargetArg) {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n\nexport { FederatedMouseEvent };\n//# sourceMappingURL=FederatedMouseEvent.mjs.map\n","import { FederatedMouseEvent } from './FederatedMouseEvent.mjs';\n\n\"use strict\";\nclass FederatedPointerEvent extends FederatedMouseEvent {\n  constructor() {\n    super(...arguments);\n    /**\n     * The width of the pointer's contact along the x-axis, measured in CSS pixels.\n     * radiusX of TouchEvents will be represented by this value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/width\n     */\n    this.width = 0;\n    /**\n     * The height of the pointer's contact along the y-axis, measured in CSS pixels.\n     * radiusY of TouchEvents will be represented by this value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/height\n     */\n    this.height = 0;\n    /**\n     * Indicates whether or not the pointer device that created the event is the primary pointer.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/isPrimary\n     */\n    this.isPrimary = false;\n  }\n  // Only included for completeness for now\n  getCoalescedEvents() {\n    if (this.type === \"pointermove\" || this.type === \"mousemove\" || this.type === \"touchmove\") {\n      return [this];\n    }\n    return [];\n  }\n  // Only included for completeness for now\n  getPredictedEvents() {\n    throw new Error(\"getPredictedEvents is not supported!\");\n  }\n}\n\nexport { FederatedPointerEvent };\n//# sourceMappingURL=FederatedPointerEvent.mjs.map\n","import { FederatedMouseEvent } from './FederatedMouseEvent.mjs';\n\n\"use strict\";\nclass FederatedWheelEvent extends FederatedMouseEvent {\n  constructor() {\n    super(...arguments);\n    /** Units specified in pixels. */\n    this.DOM_DELTA_PIXEL = 0;\n    /** Units specified in lines. */\n    this.DOM_DELTA_LINE = 1;\n    /** Units specified in pages. */\n    this.DOM_DELTA_PAGE = 2;\n  }\n}\n/** Units specified in pixels. */\nFederatedWheelEvent.DOM_DELTA_PIXEL = 0;\n/** Units specified in lines. */\nFederatedWheelEvent.DOM_DELTA_LINE = 1;\n/** Units specified in pages. */\nFederatedWheelEvent.DOM_DELTA_PAGE = 2;\n\nexport { FederatedWheelEvent };\n//# sourceMappingURL=FederatedWheelEvent.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { Point } from '../maths/point/Point.mjs';\nimport { warn } from '../utils/logging/warn.mjs';\nimport { EventsTicker } from './EventTicker.mjs';\nimport { FederatedMouseEvent } from './FederatedMouseEvent.mjs';\nimport { FederatedPointerEvent } from './FederatedPointerEvent.mjs';\nimport { FederatedWheelEvent } from './FederatedWheelEvent.mjs';\n\n\"use strict\";\nconst PROPAGATION_LIMIT = 2048;\nconst tempHitLocation = new Point();\nconst tempLocalMapping = new Point();\nclass EventBoundary {\n  /**\n   * @param rootTarget - The holder of the event boundary.\n   */\n  constructor(rootTarget) {\n    /**\n     * Emits events after they were dispatched into the scene graph.\n     *\n     * This can be used for global events listening, regardless of the scene graph being used. It should\n     * not be used by interactive libraries for normal use.\n     *\n     * Special events that do not bubble all the way to the root target are not emitted from here,\n     * e.g. pointerenter, pointerleave, click.\n     */\n    this.dispatch = new EventEmitter();\n    /**\n     * This flag would emit `pointermove`, `touchmove`, and `mousemove` events on all Containers.\n     *\n     * The `moveOnAll` semantics mirror those of earlier versions of PixiJS. This was disabled in favor of\n     * the Pointer Event API's approach.\n     */\n    this.moveOnAll = false;\n    /** Enables the global move events. `globalpointermove`, `globaltouchmove`, and `globalmousemove` */\n    this.enableGlobalMoveEvents = true;\n    /**\n     * State object for mapping methods.\n     * @see EventBoundary#trackingData\n     */\n    this.mappingState = {\n      trackingData: {}\n    };\n    /**\n     * The event pool maps event constructors to an free pool of instances of those specific events.\n     * @see EventBoundary#allocateEvent\n     * @see EventBoundary#freeEvent\n     */\n    this.eventPool = /* @__PURE__ */ new Map();\n    /** Every interactive element gathered from the scene. Only used in `pointermove` */\n    this._allInteractiveElements = [];\n    /** Every element that passed the hit test. Only used in `pointermove` */\n    this._hitElements = [];\n    /** Whether or not to collect all the interactive elements from the scene. Enabled in `pointermove` */\n    this._isPointerMoveEvent = false;\n    this.rootTarget = rootTarget;\n    this.hitPruneFn = this.hitPruneFn.bind(this);\n    this.hitTestFn = this.hitTestFn.bind(this);\n    this.mapPointerDown = this.mapPointerDown.bind(this);\n    this.mapPointerMove = this.mapPointerMove.bind(this);\n    this.mapPointerOut = this.mapPointerOut.bind(this);\n    this.mapPointerOver = this.mapPointerOver.bind(this);\n    this.mapPointerUp = this.mapPointerUp.bind(this);\n    this.mapPointerUpOutside = this.mapPointerUpOutside.bind(this);\n    this.mapWheel = this.mapWheel.bind(this);\n    this.mappingTable = {};\n    this.addEventMapping(\"pointerdown\", this.mapPointerDown);\n    this.addEventMapping(\"pointermove\", this.mapPointerMove);\n    this.addEventMapping(\"pointerout\", this.mapPointerOut);\n    this.addEventMapping(\"pointerleave\", this.mapPointerOut);\n    this.addEventMapping(\"pointerover\", this.mapPointerOver);\n    this.addEventMapping(\"pointerup\", this.mapPointerUp);\n    this.addEventMapping(\"pointerupoutside\", this.mapPointerUpOutside);\n    this.addEventMapping(\"wheel\", this.mapWheel);\n  }\n  /**\n   * Adds an event mapping for the event `type` handled by `fn`.\n   *\n   * Event mappings can be used to implement additional or custom events. They take an event\n   * coming from the upstream scene (or directly from the {@link EventSystem}) and dispatch new downstream events\n   * generally trickling down and bubbling up to {@link EventBoundary.rootTarget this.rootTarget}.\n   *\n   * To modify the semantics of existing events, the built-in mapping methods of EventBoundary should be overridden\n   * instead.\n   * @param type - The type of upstream event to map.\n   * @param fn - The mapping method. The context of this function must be bound manually, if desired.\n   */\n  addEventMapping(type, fn) {\n    if (!this.mappingTable[type]) {\n      this.mappingTable[type] = [];\n    }\n    this.mappingTable[type].push({\n      fn,\n      priority: 0\n    });\n    this.mappingTable[type].sort((a, b) => a.priority - b.priority);\n  }\n  /**\n   * Dispatches the given event\n   * @param e - The event to dispatch.\n   * @param type - The type of event to dispatch. Defaults to `e.type`.\n   */\n  dispatchEvent(e, type) {\n    e.propagationStopped = false;\n    e.propagationImmediatelyStopped = false;\n    this.propagate(e, type);\n    this.dispatch.emit(type || e.type, e);\n  }\n  /**\n   * Maps the given upstream event through the event boundary and propagates it downstream.\n   * @param e - The event to map.\n   */\n  mapEvent(e) {\n    if (!this.rootTarget) {\n      return;\n    }\n    const mappers = this.mappingTable[e.type];\n    if (mappers) {\n      for (let i = 0, j = mappers.length; i < j; i++) {\n        mappers[i].fn(e);\n      }\n    } else {\n      warn(`[EventBoundary]: Event mapping not defined for ${e.type}`);\n    }\n  }\n  /**\n   * Finds the Container that is the target of a event at the given coordinates.\n   *\n   * The passed (x,y) coordinates are in the world space above this event boundary.\n   * @param x - The x coordinate of the event.\n   * @param y - The y coordinate of the event.\n   */\n  hitTest(x, y) {\n    EventsTicker.pauseUpdate = true;\n    const useMove = this._isPointerMoveEvent && this.enableGlobalMoveEvents;\n    const fn = useMove ? \"hitTestMoveRecursive\" : \"hitTestRecursive\";\n    const invertedPath = this[fn](\n      this.rootTarget,\n      this.rootTarget.eventMode,\n      tempHitLocation.set(x, y),\n      this.hitTestFn,\n      this.hitPruneFn\n    );\n    return invertedPath && invertedPath[0];\n  }\n  /**\n   * Propagate the passed event from from {@link EventBoundary.rootTarget this.rootTarget} to its\n   * target {@code e.target}.\n   * @param e - The event to propagate.\n   * @param type - The type of event to propagate. Defaults to `e.type`.\n   */\n  propagate(e, type) {\n    if (!e.target) {\n      return;\n    }\n    const composedPath = e.composedPath();\n    e.eventPhase = e.CAPTURING_PHASE;\n    for (let i = 0, j = composedPath.length - 1; i < j; i++) {\n      e.currentTarget = composedPath[i];\n      this.notifyTarget(e, type);\n      if (e.propagationStopped || e.propagationImmediatelyStopped)\n        return;\n    }\n    e.eventPhase = e.AT_TARGET;\n    e.currentTarget = e.target;\n    this.notifyTarget(e, type);\n    if (e.propagationStopped || e.propagationImmediatelyStopped)\n      return;\n    e.eventPhase = e.BUBBLING_PHASE;\n    for (let i = composedPath.length - 2; i >= 0; i--) {\n      e.currentTarget = composedPath[i];\n      this.notifyTarget(e, type);\n      if (e.propagationStopped || e.propagationImmediatelyStopped)\n        return;\n    }\n  }\n  /**\n   * Emits the event {@code e} to all interactive containers. The event is propagated in the bubbling phase always.\n   *\n   * This is used in the `globalpointermove` event.\n   * @param e - The emitted event.\n   * @param type - The listeners to notify.\n   * @param targets - The targets to notify.\n   */\n  all(e, type, targets = this._allInteractiveElements) {\n    if (targets.length === 0)\n      return;\n    e.eventPhase = e.BUBBLING_PHASE;\n    const events = Array.isArray(type) ? type : [type];\n    for (let i = targets.length - 1; i >= 0; i--) {\n      events.forEach((event) => {\n        e.currentTarget = targets[i];\n        this.notifyTarget(e, event);\n      });\n    }\n  }\n  /**\n   * Finds the propagation path from {@link EventBoundary.rootTarget rootTarget} to the passed\n   * {@code target}. The last element in the path is {@code target}.\n   * @param target - The target to find the propagation path to.\n   */\n  propagationPath(target) {\n    const propagationPath = [target];\n    for (let i = 0; i < PROPAGATION_LIMIT && (target !== this.rootTarget && target.parent); i++) {\n      if (!target.parent) {\n        throw new Error(\"Cannot find propagation path to disconnected target\");\n      }\n      propagationPath.push(target.parent);\n      target = target.parent;\n    }\n    propagationPath.reverse();\n    return propagationPath;\n  }\n  hitTestMoveRecursive(currentTarget, eventMode, location, testFn, pruneFn, ignore = false) {\n    let shouldReturn = false;\n    if (this._interactivePrune(currentTarget))\n      return null;\n    if (currentTarget.eventMode === \"dynamic\" || eventMode === \"dynamic\") {\n      EventsTicker.pauseUpdate = false;\n    }\n    if (currentTarget.interactiveChildren && currentTarget.children) {\n      const children = currentTarget.children;\n      for (let i = children.length - 1; i >= 0; i--) {\n        const child = children[i];\n        const nestedHit = this.hitTestMoveRecursive(\n          child,\n          this._isInteractive(eventMode) ? eventMode : child.eventMode,\n          location,\n          testFn,\n          pruneFn,\n          ignore || pruneFn(currentTarget, location)\n        );\n        if (nestedHit) {\n          if (nestedHit.length > 0 && !nestedHit[nestedHit.length - 1].parent) {\n            continue;\n          }\n          const isInteractive = currentTarget.isInteractive();\n          if (nestedHit.length > 0 || isInteractive) {\n            if (isInteractive)\n              this._allInteractiveElements.push(currentTarget);\n            nestedHit.push(currentTarget);\n          }\n          if (this._hitElements.length === 0)\n            this._hitElements = nestedHit;\n          shouldReturn = true;\n        }\n      }\n    }\n    const isInteractiveMode = this._isInteractive(eventMode);\n    const isInteractiveTarget = currentTarget.isInteractive();\n    if (isInteractiveTarget && isInteractiveTarget)\n      this._allInteractiveElements.push(currentTarget);\n    if (ignore || this._hitElements.length > 0)\n      return null;\n    if (shouldReturn)\n      return this._hitElements;\n    if (isInteractiveMode && (!pruneFn(currentTarget, location) && testFn(currentTarget, location))) {\n      return isInteractiveTarget ? [currentTarget] : [];\n    }\n    return null;\n  }\n  /**\n   * Recursive implementation for {@link EventBoundary.hitTest hitTest}.\n   * @param currentTarget - The Container that is to be hit tested.\n   * @param eventMode - The event mode for the `currentTarget` or one of its parents.\n   * @param location - The location that is being tested for overlap.\n   * @param testFn - Callback that determines whether the target passes hit testing. This callback\n   *  can assume that `pruneFn` failed to prune the container.\n   * @param pruneFn - Callback that determiness whether the target and all of its children\n   *  cannot pass the hit test. It is used as a preliminary optimization to prune entire subtrees\n   *  of the scene graph.\n   * @returns An array holding the hit testing target and all its ancestors in order. The first element\n   *  is the target itself and the last is {@link EventBoundary.rootTarget rootTarget}. This is the opposite\n   *  order w.r.t. the propagation path. If no hit testing target is found, null is returned.\n   */\n  hitTestRecursive(currentTarget, eventMode, location, testFn, pruneFn) {\n    if (this._interactivePrune(currentTarget) || pruneFn(currentTarget, location)) {\n      return null;\n    }\n    if (currentTarget.eventMode === \"dynamic\" || eventMode === \"dynamic\") {\n      EventsTicker.pauseUpdate = false;\n    }\n    if (currentTarget.interactiveChildren && currentTarget.children) {\n      const children = currentTarget.children;\n      const relativeLocation = location;\n      for (let i = children.length - 1; i >= 0; i--) {\n        const child = children[i];\n        const nestedHit = this.hitTestRecursive(\n          child,\n          this._isInteractive(eventMode) ? eventMode : child.eventMode,\n          relativeLocation,\n          testFn,\n          pruneFn\n        );\n        if (nestedHit) {\n          if (nestedHit.length > 0 && !nestedHit[nestedHit.length - 1].parent) {\n            continue;\n          }\n          const isInteractive = currentTarget.isInteractive();\n          if (nestedHit.length > 0 || isInteractive)\n            nestedHit.push(currentTarget);\n          return nestedHit;\n        }\n      }\n    }\n    const isInteractiveMode = this._isInteractive(eventMode);\n    const isInteractiveTarget = currentTarget.isInteractive();\n    if (isInteractiveMode && testFn(currentTarget, location)) {\n      return isInteractiveTarget ? [currentTarget] : [];\n    }\n    return null;\n  }\n  _isInteractive(int) {\n    return int === \"static\" || int === \"dynamic\";\n  }\n  _interactivePrune(container) {\n    if (!container || !container.visible || !container.renderable || !container.measurable) {\n      return true;\n    }\n    if (container.eventMode === \"none\") {\n      return true;\n    }\n    if (container.eventMode === \"passive\" && !container.interactiveChildren) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Checks whether the container or any of its children cannot pass the hit test at all.\n   *\n   * {@link EventBoundary}'s implementation uses the {@link Container.hitArea hitArea}\n   * and {@link Container._maskEffect} for pruning.\n   * @param container - The container to prune.\n   * @param location - The location to test for overlap.\n   */\n  hitPruneFn(container, location) {\n    if (container.hitArea) {\n      container.worldTransform.applyInverse(location, tempLocalMapping);\n      if (!container.hitArea.contains(tempLocalMapping.x, tempLocalMapping.y)) {\n        return true;\n      }\n    }\n    if (container.effects && container.effects.length) {\n      for (let i = 0; i < container.effects.length; i++) {\n        const effect = container.effects[i];\n        if (effect.containsPoint) {\n          const effectContainsPoint = effect.containsPoint(location, this.hitTestFn);\n          if (!effectContainsPoint) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n  /**\n   * Checks whether the container passes hit testing for the given location.\n   * @param container - The container to test.\n   * @param location - The location to test for overlap.\n   * @returns - Whether `container` passes hit testing for `location`.\n   */\n  hitTestFn(container, location) {\n    if (container.hitArea) {\n      return true;\n    }\n    if (container?.containsPoint) {\n      container.worldTransform.applyInverse(location, tempLocalMapping);\n      return container.containsPoint(tempLocalMapping);\n    }\n    return false;\n  }\n  /**\n   * Notify all the listeners to the event's `currentTarget`.\n   *\n   * If the `currentTarget` contains the property `on<type>`, then it is called here,\n   * simulating the behavior from version 6.x and prior.\n   * @param e - The event passed to the target.\n   * @param type - The type of event to notify. Defaults to `e.type`.\n   */\n  notifyTarget(e, type) {\n    if (!e.currentTarget.isInteractive()) {\n      return;\n    }\n    type ?? (type = e.type);\n    const handlerKey = `on${type}`;\n    e.currentTarget[handlerKey]?.(e);\n    const key = e.eventPhase === e.CAPTURING_PHASE || e.eventPhase === e.AT_TARGET ? `${type}capture` : type;\n    this._notifyListeners(e, key);\n    if (e.eventPhase === e.AT_TARGET) {\n      this._notifyListeners(e, type);\n    }\n  }\n  /**\n   * Maps the upstream `pointerdown` events to a downstream `pointerdown` event.\n   *\n   * `touchstart`, `rightdown`, `mousedown` events are also dispatched for specific pointer types.\n   * @param from - The upstream `pointerdown` event.\n   */\n  mapPointerDown(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const e = this.createPointerEvent(from);\n    this.dispatchEvent(e, \"pointerdown\");\n    if (e.pointerType === \"touch\") {\n      this.dispatchEvent(e, \"touchstart\");\n    } else if (e.pointerType === \"mouse\" || e.pointerType === \"pen\") {\n      const isRightButton = e.button === 2;\n      this.dispatchEvent(e, isRightButton ? \"rightdown\" : \"mousedown\");\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    trackingData.pressTargetsByButton[from.button] = e.composedPath();\n    this.freeEvent(e);\n  }\n  /**\n   * Maps the upstream `pointermove` to downstream `pointerout`, `pointerover`, and `pointermove` events, in that order.\n   *\n   * The tracking data for the specific pointer has an updated `overTarget`. `mouseout`, `mouseover`,\n   * `mousemove`, and `touchmove` events are fired as well for specific pointer types.\n   * @param from - The upstream `pointermove` event.\n   */\n  mapPointerMove(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    this._allInteractiveElements.length = 0;\n    this._hitElements.length = 0;\n    this._isPointerMoveEvent = true;\n    const e = this.createPointerEvent(from);\n    this._isPointerMoveEvent = false;\n    const isMouse = e.pointerType === \"mouse\" || e.pointerType === \"pen\";\n    const trackingData = this.trackingData(from.pointerId);\n    const outTarget = this.findMountedTarget(trackingData.overTargets);\n    if (trackingData.overTargets?.length > 0 && outTarget !== e.target) {\n      const outType = from.type === \"mousemove\" ? \"mouseout\" : \"pointerout\";\n      const outEvent = this.createPointerEvent(from, outType, outTarget);\n      this.dispatchEvent(outEvent, \"pointerout\");\n      if (isMouse)\n        this.dispatchEvent(outEvent, \"mouseout\");\n      if (!e.composedPath().includes(outTarget)) {\n        const leaveEvent = this.createPointerEvent(from, \"pointerleave\", outTarget);\n        leaveEvent.eventPhase = leaveEvent.AT_TARGET;\n        while (leaveEvent.target && !e.composedPath().includes(leaveEvent.target)) {\n          leaveEvent.currentTarget = leaveEvent.target;\n          this.notifyTarget(leaveEvent);\n          if (isMouse)\n            this.notifyTarget(leaveEvent, \"mouseleave\");\n          leaveEvent.target = leaveEvent.target.parent;\n        }\n        this.freeEvent(leaveEvent);\n      }\n      this.freeEvent(outEvent);\n    }\n    if (outTarget !== e.target) {\n      const overType = from.type === \"mousemove\" ? \"mouseover\" : \"pointerover\";\n      const overEvent = this.clonePointerEvent(e, overType);\n      this.dispatchEvent(overEvent, \"pointerover\");\n      if (isMouse)\n        this.dispatchEvent(overEvent, \"mouseover\");\n      let overTargetAncestor = outTarget?.parent;\n      while (overTargetAncestor && overTargetAncestor !== this.rootTarget.parent) {\n        if (overTargetAncestor === e.target)\n          break;\n        overTargetAncestor = overTargetAncestor.parent;\n      }\n      const didPointerEnter = !overTargetAncestor || overTargetAncestor === this.rootTarget.parent;\n      if (didPointerEnter) {\n        const enterEvent = this.clonePointerEvent(e, \"pointerenter\");\n        enterEvent.eventPhase = enterEvent.AT_TARGET;\n        while (enterEvent.target && enterEvent.target !== outTarget && enterEvent.target !== this.rootTarget.parent) {\n          enterEvent.currentTarget = enterEvent.target;\n          this.notifyTarget(enterEvent);\n          if (isMouse)\n            this.notifyTarget(enterEvent, \"mouseenter\");\n          enterEvent.target = enterEvent.target.parent;\n        }\n        this.freeEvent(enterEvent);\n      }\n      this.freeEvent(overEvent);\n    }\n    const allMethods = [];\n    const allowGlobalPointerEvents = this.enableGlobalMoveEvents ?? true;\n    this.moveOnAll ? allMethods.push(\"pointermove\") : this.dispatchEvent(e, \"pointermove\");\n    allowGlobalPointerEvents && allMethods.push(\"globalpointermove\");\n    if (e.pointerType === \"touch\") {\n      this.moveOnAll ? allMethods.splice(1, 0, \"touchmove\") : this.dispatchEvent(e, \"touchmove\");\n      allowGlobalPointerEvents && allMethods.push(\"globaltouchmove\");\n    }\n    if (isMouse) {\n      this.moveOnAll ? allMethods.splice(1, 0, \"mousemove\") : this.dispatchEvent(e, \"mousemove\");\n      allowGlobalPointerEvents && allMethods.push(\"globalmousemove\");\n      this.cursor = e.target?.cursor;\n    }\n    if (allMethods.length > 0) {\n      this.all(e, allMethods);\n    }\n    this._allInteractiveElements.length = 0;\n    this._hitElements.length = 0;\n    trackingData.overTargets = e.composedPath();\n    this.freeEvent(e);\n  }\n  /**\n   * Maps the upstream `pointerover` to downstream `pointerover` and `pointerenter` events, in that order.\n   *\n   * The tracking data for the specific pointer gets a new `overTarget`.\n   * @param from - The upstream `pointerover` event.\n   */\n  mapPointerOver(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    const e = this.createPointerEvent(from);\n    const isMouse = e.pointerType === \"mouse\" || e.pointerType === \"pen\";\n    this.dispatchEvent(e, \"pointerover\");\n    if (isMouse)\n      this.dispatchEvent(e, \"mouseover\");\n    if (e.pointerType === \"mouse\")\n      this.cursor = e.target?.cursor;\n    const enterEvent = this.clonePointerEvent(e, \"pointerenter\");\n    enterEvent.eventPhase = enterEvent.AT_TARGET;\n    while (enterEvent.target && enterEvent.target !== this.rootTarget.parent) {\n      enterEvent.currentTarget = enterEvent.target;\n      this.notifyTarget(enterEvent);\n      if (isMouse)\n        this.notifyTarget(enterEvent, \"mouseenter\");\n      enterEvent.target = enterEvent.target.parent;\n    }\n    trackingData.overTargets = e.composedPath();\n    this.freeEvent(e);\n    this.freeEvent(enterEvent);\n  }\n  /**\n   * Maps the upstream `pointerout` to downstream `pointerout`, `pointerleave` events, in that order.\n   *\n   * The tracking data for the specific pointer is cleared of a `overTarget`.\n   * @param from - The upstream `pointerout` event.\n   */\n  mapPointerOut(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    if (trackingData.overTargets) {\n      const isMouse = from.pointerType === \"mouse\" || from.pointerType === \"pen\";\n      const outTarget = this.findMountedTarget(trackingData.overTargets);\n      const outEvent = this.createPointerEvent(from, \"pointerout\", outTarget);\n      this.dispatchEvent(outEvent);\n      if (isMouse)\n        this.dispatchEvent(outEvent, \"mouseout\");\n      const leaveEvent = this.createPointerEvent(from, \"pointerleave\", outTarget);\n      leaveEvent.eventPhase = leaveEvent.AT_TARGET;\n      while (leaveEvent.target && leaveEvent.target !== this.rootTarget.parent) {\n        leaveEvent.currentTarget = leaveEvent.target;\n        this.notifyTarget(leaveEvent);\n        if (isMouse)\n          this.notifyTarget(leaveEvent, \"mouseleave\");\n        leaveEvent.target = leaveEvent.target.parent;\n      }\n      trackingData.overTargets = null;\n      this.freeEvent(outEvent);\n      this.freeEvent(leaveEvent);\n    }\n    this.cursor = null;\n  }\n  /**\n   * Maps the upstream `pointerup` event to downstream `pointerup`, `pointerupoutside`,\n   * and `click`/`rightclick`/`pointertap` events, in that order.\n   *\n   * The `pointerupoutside` event bubbles from the original `pointerdown` target to the most specific\n   * ancestor of the `pointerdown` and `pointerup` targets, which is also the `click` event's target. `touchend`,\n   * `rightup`, `mouseup`, `touchendoutside`, `rightupoutside`, `mouseupoutside`, and `tap` are fired as well for\n   * specific pointer types.\n   * @param from - The upstream `pointerup` event.\n   */\n  mapPointerUp(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const now = performance.now();\n    const e = this.createPointerEvent(from);\n    this.dispatchEvent(e, \"pointerup\");\n    if (e.pointerType === \"touch\") {\n      this.dispatchEvent(e, \"touchend\");\n    } else if (e.pointerType === \"mouse\" || e.pointerType === \"pen\") {\n      const isRightButton = e.button === 2;\n      this.dispatchEvent(e, isRightButton ? \"rightup\" : \"mouseup\");\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    const pressTarget = this.findMountedTarget(trackingData.pressTargetsByButton[from.button]);\n    let clickTarget = pressTarget;\n    if (pressTarget && !e.composedPath().includes(pressTarget)) {\n      let currentTarget = pressTarget;\n      while (currentTarget && !e.composedPath().includes(currentTarget)) {\n        e.currentTarget = currentTarget;\n        this.notifyTarget(e, \"pointerupoutside\");\n        if (e.pointerType === \"touch\") {\n          this.notifyTarget(e, \"touchendoutside\");\n        } else if (e.pointerType === \"mouse\" || e.pointerType === \"pen\") {\n          const isRightButton = e.button === 2;\n          this.notifyTarget(e, isRightButton ? \"rightupoutside\" : \"mouseupoutside\");\n        }\n        currentTarget = currentTarget.parent;\n      }\n      delete trackingData.pressTargetsByButton[from.button];\n      clickTarget = currentTarget;\n    }\n    if (clickTarget) {\n      const clickEvent = this.clonePointerEvent(e, \"click\");\n      clickEvent.target = clickTarget;\n      clickEvent.path = null;\n      if (!trackingData.clicksByButton[from.button]) {\n        trackingData.clicksByButton[from.button] = {\n          clickCount: 0,\n          target: clickEvent.target,\n          timeStamp: now\n        };\n      }\n      const clickHistory = trackingData.clicksByButton[from.button];\n      if (clickHistory.target === clickEvent.target && now - clickHistory.timeStamp < 200) {\n        ++clickHistory.clickCount;\n      } else {\n        clickHistory.clickCount = 1;\n      }\n      clickHistory.target = clickEvent.target;\n      clickHistory.timeStamp = now;\n      clickEvent.detail = clickHistory.clickCount;\n      if (clickEvent.pointerType === \"mouse\") {\n        const isRightButton = clickEvent.button === 2;\n        this.dispatchEvent(clickEvent, isRightButton ? \"rightclick\" : \"click\");\n      } else if (clickEvent.pointerType === \"touch\") {\n        this.dispatchEvent(clickEvent, \"tap\");\n      }\n      this.dispatchEvent(clickEvent, \"pointertap\");\n      this.freeEvent(clickEvent);\n    }\n    this.freeEvent(e);\n  }\n  /**\n   * Maps the upstream `pointerupoutside` event to a downstream `pointerupoutside` event, bubbling from the original\n   * `pointerdown` target to `rootTarget`.\n   *\n   * (The most specific ancestor of the `pointerdown` event and the `pointerup` event must the\n   * `{@link EventBoundary}'s root because the `pointerup` event occurred outside of the boundary.)\n   *\n   * `touchendoutside`, `mouseupoutside`, and `rightupoutside` events are fired as well for specific pointer\n   * types. The tracking data for the specific pointer is cleared of a `pressTarget`.\n   * @param from - The upstream `pointerupoutside` event.\n   */\n  mapPointerUpOutside(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    const pressTarget = this.findMountedTarget(trackingData.pressTargetsByButton[from.button]);\n    const e = this.createPointerEvent(from);\n    if (pressTarget) {\n      let currentTarget = pressTarget;\n      while (currentTarget) {\n        e.currentTarget = currentTarget;\n        this.notifyTarget(e, \"pointerupoutside\");\n        if (e.pointerType === \"touch\") {\n          this.notifyTarget(e, \"touchendoutside\");\n        } else if (e.pointerType === \"mouse\" || e.pointerType === \"pen\") {\n          this.notifyTarget(e, e.button === 2 ? \"rightupoutside\" : \"mouseupoutside\");\n        }\n        currentTarget = currentTarget.parent;\n      }\n      delete trackingData.pressTargetsByButton[from.button];\n    }\n    this.freeEvent(e);\n  }\n  /**\n   * Maps the upstream `wheel` event to a downstream `wheel` event.\n   * @param from - The upstream `wheel` event.\n   */\n  mapWheel(from) {\n    if (!(from instanceof FederatedWheelEvent)) {\n      warn(\"EventBoundary cannot map a non-wheel event as a wheel event\");\n      return;\n    }\n    const wheelEvent = this.createWheelEvent(from);\n    this.dispatchEvent(wheelEvent);\n    this.freeEvent(wheelEvent);\n  }\n  /**\n   * Finds the most specific event-target in the given propagation path that is still mounted in the scene graph.\n   *\n   * This is used to find the correct `pointerup` and `pointerout` target in the case that the original `pointerdown`\n   * or `pointerover` target was unmounted from the scene graph.\n   * @param propagationPath - The propagation path was valid in the past.\n   * @returns - The most specific event-target still mounted at the same location in the scene graph.\n   */\n  findMountedTarget(propagationPath) {\n    if (!propagationPath) {\n      return null;\n    }\n    let currentTarget = propagationPath[0];\n    for (let i = 1; i < propagationPath.length; i++) {\n      if (propagationPath[i].parent === currentTarget) {\n        currentTarget = propagationPath[i];\n      } else {\n        break;\n      }\n    }\n    return currentTarget;\n  }\n  /**\n   * Creates an event whose {@code originalEvent} is {@code from}, with an optional `type` and `target` override.\n   *\n   * The event is allocated using {@link EventBoundary#allocateEvent this.allocateEvent}.\n   * @param from - The {@code originalEvent} for the returned event.\n   * @param [type=from.type] - The type of the returned event.\n   * @param target - The target of the returned event.\n   */\n  createPointerEvent(from, type, target) {\n    const event = this.allocateEvent(FederatedPointerEvent);\n    this.copyPointerData(from, event);\n    this.copyMouseData(from, event);\n    this.copyData(from, event);\n    event.nativeEvent = from.nativeEvent;\n    event.originalEvent = from;\n    event.target = target ?? this.hitTest(event.global.x, event.global.y) ?? this._hitElements[0];\n    if (typeof type === \"string\") {\n      event.type = type;\n    }\n    return event;\n  }\n  /**\n   * Creates a wheel event whose {@code originalEvent} is {@code from}.\n   *\n   * The event is allocated using {@link EventBoundary#allocateEvent this.allocateEvent}.\n   * @param from - The upstream wheel event.\n   */\n  createWheelEvent(from) {\n    const event = this.allocateEvent(FederatedWheelEvent);\n    this.copyWheelData(from, event);\n    this.copyMouseData(from, event);\n    this.copyData(from, event);\n    event.nativeEvent = from.nativeEvent;\n    event.originalEvent = from;\n    event.target = this.hitTest(event.global.x, event.global.y);\n    return event;\n  }\n  /**\n   * Clones the event {@code from}, with an optional {@code type} override.\n   *\n   * The event is allocated using {@link EventBoundary#allocateEvent this.allocateEvent}.\n   * @param from - The event to clone.\n   * @param [type=from.type] - The type of the returned event.\n   */\n  clonePointerEvent(from, type) {\n    const event = this.allocateEvent(FederatedPointerEvent);\n    event.nativeEvent = from.nativeEvent;\n    event.originalEvent = from.originalEvent;\n    this.copyPointerData(from, event);\n    this.copyMouseData(from, event);\n    this.copyData(from, event);\n    event.target = from.target;\n    event.path = from.composedPath().slice();\n    event.type = type ?? event.type;\n    return event;\n  }\n  /**\n   * Copies wheel {@link FederatedWheelEvent} data from {@code from} into {@code to}.\n   *\n   * The following properties are copied:\n   * + deltaMode\n   * + deltaX\n   * + deltaY\n   * + deltaZ\n   * @param from - The event to copy data from.\n   * @param to - The event to copy data into.\n   */\n  copyWheelData(from, to) {\n    to.deltaMode = from.deltaMode;\n    to.deltaX = from.deltaX;\n    to.deltaY = from.deltaY;\n    to.deltaZ = from.deltaZ;\n  }\n  /**\n   * Copies pointer {@link FederatedPointerEvent} data from {@code from} into {@code to}.\n   *\n   * The following properties are copied:\n   * + pointerId\n   * + width\n   * + height\n   * + isPrimary\n   * + pointerType\n   * + pressure\n   * + tangentialPressure\n   * + tiltX\n   * + tiltY\n   * @param from - The event to copy data from.\n   * @param to - The event to copy data into.\n   */\n  copyPointerData(from, to) {\n    if (!(from instanceof FederatedPointerEvent && to instanceof FederatedPointerEvent))\n      return;\n    to.pointerId = from.pointerId;\n    to.width = from.width;\n    to.height = from.height;\n    to.isPrimary = from.isPrimary;\n    to.pointerType = from.pointerType;\n    to.pressure = from.pressure;\n    to.tangentialPressure = from.tangentialPressure;\n    to.tiltX = from.tiltX;\n    to.tiltY = from.tiltY;\n    to.twist = from.twist;\n  }\n  /**\n   * Copies mouse {@link FederatedMouseEvent} data from {@code from} to {@code to}.\n   *\n   * The following properties are copied:\n   * + altKey\n   * + button\n   * + buttons\n   * + clientX\n   * + clientY\n   * + metaKey\n   * + movementX\n   * + movementY\n   * + pageX\n   * + pageY\n   * + x\n   * + y\n   * + screen\n   * + shiftKey\n   * + global\n   * @param from - The event to copy data from.\n   * @param to - The event to copy data into.\n   */\n  copyMouseData(from, to) {\n    if (!(from instanceof FederatedMouseEvent && to instanceof FederatedMouseEvent))\n      return;\n    to.altKey = from.altKey;\n    to.button = from.button;\n    to.buttons = from.buttons;\n    to.client.copyFrom(from.client);\n    to.ctrlKey = from.ctrlKey;\n    to.metaKey = from.metaKey;\n    to.movement.copyFrom(from.movement);\n    to.screen.copyFrom(from.screen);\n    to.shiftKey = from.shiftKey;\n    to.global.copyFrom(from.global);\n  }\n  /**\n   * Copies base {@link FederatedEvent} data from {@code from} into {@code to}.\n   *\n   * The following properties are copied:\n   * + isTrusted\n   * + srcElement\n   * + timeStamp\n   * + type\n   * @param from - The event to copy data from.\n   * @param to - The event to copy data into.\n   */\n  copyData(from, to) {\n    to.isTrusted = from.isTrusted;\n    to.srcElement = from.srcElement;\n    to.timeStamp = performance.now();\n    to.type = from.type;\n    to.detail = from.detail;\n    to.view = from.view;\n    to.which = from.which;\n    to.layer.copyFrom(from.layer);\n    to.page.copyFrom(from.page);\n  }\n  /**\n   * @param id - The pointer ID.\n   * @returns The tracking data stored for the given pointer. If no data exists, a blank\n   *  state will be created.\n   */\n  trackingData(id) {\n    if (!this.mappingState.trackingData[id]) {\n      this.mappingState.trackingData[id] = {\n        pressTargetsByButton: {},\n        clicksByButton: {},\n        overTarget: null\n      };\n    }\n    return this.mappingState.trackingData[id];\n  }\n  /**\n   * Allocate a specific type of event from {@link EventBoundary#eventPool this.eventPool}.\n   *\n   * This allocation is constructor-agnostic, as long as it only takes one argument - this event\n   * boundary.\n   * @param constructor - The event's constructor.\n   */\n  allocateEvent(constructor) {\n    if (!this.eventPool.has(constructor)) {\n      this.eventPool.set(constructor, []);\n    }\n    const event = this.eventPool.get(constructor).pop() || new constructor(this);\n    event.eventPhase = event.NONE;\n    event.currentTarget = null;\n    event.defaultPrevented = false;\n    event.path = null;\n    event.target = null;\n    return event;\n  }\n  /**\n   * Frees the event and puts it back into the event pool.\n   *\n   * It is illegal to reuse the event until it is allocated again, using `this.allocateEvent`.\n   *\n   * It is also advised that events not allocated from {@link EventBoundary#allocateEvent this.allocateEvent}\n   * not be freed. This is because of the possibility that the same event is freed twice, which can cause\n   * it to be allocated twice & result in overwriting.\n   * @param event - The event to be freed.\n   * @throws Error if the event is managed by another event boundary.\n   */\n  freeEvent(event) {\n    if (event.manager !== this)\n      throw new Error(\"It is illegal to free an event not managed by this EventBoundary!\");\n    const constructor = event.constructor;\n    if (!this.eventPool.has(constructor)) {\n      this.eventPool.set(constructor, []);\n    }\n    this.eventPool.get(constructor).push(event);\n  }\n  /**\n   * Similar to {@link EventEmitter.emit}, except it stops if the `propagationImmediatelyStopped` flag\n   * is set on the event.\n   * @param e - The event to call each listener with.\n   * @param type - The event key.\n   */\n  _notifyListeners(e, type) {\n    const listeners = e.currentTarget._events[type];\n    if (!listeners)\n      return;\n    if (\"fn\" in listeners) {\n      if (listeners.once)\n        e.currentTarget.removeListener(type, listeners.fn, void 0, true);\n      listeners.fn.call(listeners.context, e);\n    } else {\n      for (let i = 0, j = listeners.length; i < j && !e.propagationImmediatelyStopped; i++) {\n        if (listeners[i].once)\n          e.currentTarget.removeListener(type, listeners[i].fn, void 0, true);\n        listeners[i].fn.call(listeners[i].context, e);\n      }\n    }\n  }\n}\n\nexport { EventBoundary };\n//# sourceMappingURL=EventBoundary.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\nimport { EventBoundary } from './EventBoundary.mjs';\nimport { EventsTicker } from './EventTicker.mjs';\nimport { FederatedPointerEvent } from './FederatedPointerEvent.mjs';\nimport { FederatedWheelEvent } from './FederatedWheelEvent.mjs';\n\n\"use strict\";\nconst MOUSE_POINTER_ID = 1;\nconst TOUCH_TO_POINTER = {\n  touchstart: \"pointerdown\",\n  touchend: \"pointerup\",\n  touchendoutside: \"pointerupoutside\",\n  touchmove: \"pointermove\",\n  touchcancel: \"pointercancel\"\n};\nconst _EventSystem = class _EventSystem {\n  /**\n   * @param {Renderer} renderer\n   */\n  constructor(renderer) {\n    /** Does the device support touch events https://www.w3.org/TR/touch-events/ */\n    this.supportsTouchEvents = \"ontouchstart\" in globalThis;\n    /** Does the device support pointer events https://www.w3.org/Submission/pointer-events/ */\n    this.supportsPointerEvents = !!globalThis.PointerEvent;\n    /**\n     * The DOM element to which the root event listeners are bound. This is automatically set to\n     * the renderer's {@link Renderer#view view}.\n     */\n    this.domElement = null;\n    /** The resolution used to convert between the DOM client space into world space. */\n    this.resolution = 1;\n    this.renderer = renderer;\n    this.rootBoundary = new EventBoundary(null);\n    EventsTicker.init(this);\n    this.autoPreventDefault = true;\n    this._eventsAdded = false;\n    this._rootPointerEvent = new FederatedPointerEvent(null);\n    this._rootWheelEvent = new FederatedWheelEvent(null);\n    this.cursorStyles = {\n      default: \"inherit\",\n      pointer: \"pointer\"\n    };\n    this.features = new Proxy({ ..._EventSystem.defaultEventFeatures }, {\n      set: (target, key, value) => {\n        if (key === \"globalMove\") {\n          this.rootBoundary.enableGlobalMoveEvents = value;\n        }\n        target[key] = value;\n        return true;\n      }\n    });\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._onPointerUp = this._onPointerUp.bind(this);\n    this._onPointerOverOut = this._onPointerOverOut.bind(this);\n    this.onWheel = this.onWheel.bind(this);\n  }\n  /**\n   * The default interaction mode for all display objects.\n   * @see Container.eventMode\n   * @type {EventMode}\n   * @readonly\n   * @since 7.2.0\n   */\n  static get defaultEventMode() {\n    return this._defaultEventMode;\n  }\n  /**\n   * Runner init called, view is available at this point.\n   * @ignore\n   */\n  init(options) {\n    const { canvas, resolution } = this.renderer;\n    this.setTargetElement(canvas);\n    this.resolution = resolution;\n    _EventSystem._defaultEventMode = options.eventMode ?? \"passive\";\n    Object.assign(this.features, options.eventFeatures ?? {});\n    this.rootBoundary.enableGlobalMoveEvents = this.features.globalMove;\n  }\n  /**\n   * Handle changing resolution.\n   * @ignore\n   */\n  resolutionChange(resolution) {\n    this.resolution = resolution;\n  }\n  /** Destroys all event listeners and detaches the renderer. */\n  destroy() {\n    this.setTargetElement(null);\n    this.renderer = null;\n    this._currentCursor = null;\n  }\n  /**\n   * Sets the current cursor mode, handling any callbacks or CSS style changes.\n   * @param mode - cursor mode, a key from the cursorStyles dictionary\n   */\n  setCursor(mode) {\n    mode || (mode = \"default\");\n    let applyStyles = true;\n    if (globalThis.OffscreenCanvas && this.domElement instanceof OffscreenCanvas) {\n      applyStyles = false;\n    }\n    if (this._currentCursor === mode) {\n      return;\n    }\n    this._currentCursor = mode;\n    const style = this.cursorStyles[mode];\n    if (style) {\n      switch (typeof style) {\n        case \"string\":\n          if (applyStyles) {\n            this.domElement.style.cursor = style;\n          }\n          break;\n        case \"function\":\n          style(mode);\n          break;\n        case \"object\":\n          if (applyStyles) {\n            Object.assign(this.domElement.style, style);\n          }\n          break;\n      }\n    } else if (applyStyles && typeof mode === \"string\" && !Object.prototype.hasOwnProperty.call(this.cursorStyles, mode)) {\n      this.domElement.style.cursor = mode;\n    }\n  }\n  /**\n   * The global pointer event.\n   * Useful for getting the pointer position without listening to events.\n   * @since 7.2.0\n   */\n  get pointer() {\n    return this._rootPointerEvent;\n  }\n  /**\n   * Event handler for pointer down events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerDown(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    const events = this._normalizeToPointerData(nativeEvent);\n    if (this.autoPreventDefault && events[0].isNormalized) {\n      const cancelable = nativeEvent.cancelable || !(\"cancelable\" in nativeEvent);\n      if (cancelable) {\n        nativeEvent.preventDefault();\n      }\n    }\n    for (let i = 0, j = events.length; i < j; i++) {\n      const nativeEvent2 = events[i];\n      const federatedEvent = this._bootstrapEvent(this._rootPointerEvent, nativeEvent2);\n      this.rootBoundary.mapEvent(federatedEvent);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer move events on on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch events.\n   */\n  _onPointerMove(nativeEvent) {\n    if (!this.features.move)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    EventsTicker.pointerMoved();\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer up events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerUp(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    let target = nativeEvent.target;\n    if (nativeEvent.composedPath && nativeEvent.composedPath().length > 0) {\n      target = nativeEvent.composedPath()[0];\n    }\n    const outside = target !== this.domElement ? \"outside\" : \"\";\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      event.type += outside;\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer over & out events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerOverOut(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Passive handler for `wheel` events on {@link EventSystem.domElement this.domElement}.\n   * @param nativeEvent - The native wheel event.\n   */\n  onWheel(nativeEvent) {\n    if (!this.features.wheel)\n      return;\n    const wheelEvent = this.normalizeWheelEvent(nativeEvent);\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    this.rootBoundary.mapEvent(wheelEvent);\n  }\n  /**\n   * Sets the {@link EventSystem#domElement domElement} and binds event listeners.\n   *\n   * To deregister the current DOM element without setting a new one, pass {@code null}.\n   * @param element - The new DOM element.\n   */\n  setTargetElement(element) {\n    this._removeEvents();\n    this.domElement = element;\n    EventsTicker.domElement = element;\n    this._addEvents();\n  }\n  /** Register event listeners on {@link Renderer#domElement this.domElement}. */\n  _addEvents() {\n    if (this._eventsAdded || !this.domElement) {\n      return;\n    }\n    EventsTicker.addTickerListener();\n    const style = this.domElement.style;\n    if (style) {\n      if (globalThis.navigator.msPointerEnabled) {\n        style.msContentZooming = \"none\";\n        style.msTouchAction = \"none\";\n      } else if (this.supportsPointerEvents) {\n        style.touchAction = \"none\";\n      }\n    }\n    if (this.supportsPointerEvents) {\n      globalThis.document.addEventListener(\"pointermove\", this._onPointerMove, true);\n      this.domElement.addEventListener(\"pointerdown\", this._onPointerDown, true);\n      this.domElement.addEventListener(\"pointerleave\", this._onPointerOverOut, true);\n      this.domElement.addEventListener(\"pointerover\", this._onPointerOverOut, true);\n      globalThis.addEventListener(\"pointerup\", this._onPointerUp, true);\n    } else {\n      globalThis.document.addEventListener(\"mousemove\", this._onPointerMove, true);\n      this.domElement.addEventListener(\"mousedown\", this._onPointerDown, true);\n      this.domElement.addEventListener(\"mouseout\", this._onPointerOverOut, true);\n      this.domElement.addEventListener(\"mouseover\", this._onPointerOverOut, true);\n      globalThis.addEventListener(\"mouseup\", this._onPointerUp, true);\n      if (this.supportsTouchEvents) {\n        this.domElement.addEventListener(\"touchstart\", this._onPointerDown, true);\n        this.domElement.addEventListener(\"touchend\", this._onPointerUp, true);\n        this.domElement.addEventListener(\"touchmove\", this._onPointerMove, true);\n      }\n    }\n    this.domElement.addEventListener(\"wheel\", this.onWheel, {\n      passive: true,\n      capture: true\n    });\n    this._eventsAdded = true;\n  }\n  /** Unregister event listeners on {@link EventSystem#domElement this.domElement}. */\n  _removeEvents() {\n    if (!this._eventsAdded || !this.domElement) {\n      return;\n    }\n    EventsTicker.removeTickerListener();\n    const style = this.domElement.style;\n    if (style) {\n      if (globalThis.navigator.msPointerEnabled) {\n        style.msContentZooming = \"\";\n        style.msTouchAction = \"\";\n      } else if (this.supportsPointerEvents) {\n        style.touchAction = \"\";\n      }\n    }\n    if (this.supportsPointerEvents) {\n      globalThis.document.removeEventListener(\"pointermove\", this._onPointerMove, true);\n      this.domElement.removeEventListener(\"pointerdown\", this._onPointerDown, true);\n      this.domElement.removeEventListener(\"pointerleave\", this._onPointerOverOut, true);\n      this.domElement.removeEventListener(\"pointerover\", this._onPointerOverOut, true);\n      globalThis.removeEventListener(\"pointerup\", this._onPointerUp, true);\n    } else {\n      globalThis.document.removeEventListener(\"mousemove\", this._onPointerMove, true);\n      this.domElement.removeEventListener(\"mousedown\", this._onPointerDown, true);\n      this.domElement.removeEventListener(\"mouseout\", this._onPointerOverOut, true);\n      this.domElement.removeEventListener(\"mouseover\", this._onPointerOverOut, true);\n      globalThis.removeEventListener(\"mouseup\", this._onPointerUp, true);\n      if (this.supportsTouchEvents) {\n        this.domElement.removeEventListener(\"touchstart\", this._onPointerDown, true);\n        this.domElement.removeEventListener(\"touchend\", this._onPointerUp, true);\n        this.domElement.removeEventListener(\"touchmove\", this._onPointerMove, true);\n      }\n    }\n    this.domElement.removeEventListener(\"wheel\", this.onWheel, true);\n    this.domElement = null;\n    this._eventsAdded = false;\n  }\n  /**\n   * Maps x and y coords from a DOM object and maps them correctly to the PixiJS view. The\n   * resulting value is stored in the point. This takes into account the fact that the DOM\n   * element could be scaled and positioned anywhere on the screen.\n   * @param  {PointData} point - the point that the result will be stored in\n   * @param  {number} x - the x coord of the position to map\n   * @param  {number} y - the y coord of the position to map\n   */\n  mapPositionToPoint(point, x, y) {\n    const rect = this.domElement.isConnected ? this.domElement.getBoundingClientRect() : {\n      x: 0,\n      y: 0,\n      width: this.domElement.width,\n      height: this.domElement.height,\n      left: 0,\n      top: 0\n    };\n    const resolutionMultiplier = 1 / this.resolution;\n    point.x = (x - rect.left) * (this.domElement.width / rect.width) * resolutionMultiplier;\n    point.y = (y - rect.top) * (this.domElement.height / rect.height) * resolutionMultiplier;\n  }\n  /**\n   * Ensures that the original event object contains all data that a regular pointer event would have\n   * @param event - The original event data from a touch or mouse event\n   * @returns An array containing a single normalized pointer event, in the case of a pointer\n   *  or mouse event, or a multiple normalized pointer events if there are multiple changed touches\n   */\n  _normalizeToPointerData(event) {\n    const normalizedEvents = [];\n    if (this.supportsTouchEvents && event instanceof TouchEvent) {\n      for (let i = 0, li = event.changedTouches.length; i < li; i++) {\n        const touch = event.changedTouches[i];\n        if (typeof touch.button === \"undefined\")\n          touch.button = 0;\n        if (typeof touch.buttons === \"undefined\")\n          touch.buttons = 1;\n        if (typeof touch.isPrimary === \"undefined\") {\n          touch.isPrimary = event.touches.length === 1 && event.type === \"touchstart\";\n        }\n        if (typeof touch.width === \"undefined\")\n          touch.width = touch.radiusX || 1;\n        if (typeof touch.height === \"undefined\")\n          touch.height = touch.radiusY || 1;\n        if (typeof touch.tiltX === \"undefined\")\n          touch.tiltX = 0;\n        if (typeof touch.tiltY === \"undefined\")\n          touch.tiltY = 0;\n        if (typeof touch.pointerType === \"undefined\")\n          touch.pointerType = \"touch\";\n        if (typeof touch.pointerId === \"undefined\")\n          touch.pointerId = touch.identifier || 0;\n        if (typeof touch.pressure === \"undefined\")\n          touch.pressure = touch.force || 0.5;\n        if (typeof touch.twist === \"undefined\")\n          touch.twist = 0;\n        if (typeof touch.tangentialPressure === \"undefined\")\n          touch.tangentialPressure = 0;\n        if (typeof touch.layerX === \"undefined\")\n          touch.layerX = touch.offsetX = touch.clientX;\n        if (typeof touch.layerY === \"undefined\")\n          touch.layerY = touch.offsetY = touch.clientY;\n        touch.isNormalized = true;\n        touch.type = event.type;\n        normalizedEvents.push(touch);\n      }\n    } else if (!globalThis.MouseEvent || event instanceof MouseEvent && (!this.supportsPointerEvents || !(event instanceof globalThis.PointerEvent))) {\n      const tempEvent = event;\n      if (typeof tempEvent.isPrimary === \"undefined\")\n        tempEvent.isPrimary = true;\n      if (typeof tempEvent.width === \"undefined\")\n        tempEvent.width = 1;\n      if (typeof tempEvent.height === \"undefined\")\n        tempEvent.height = 1;\n      if (typeof tempEvent.tiltX === \"undefined\")\n        tempEvent.tiltX = 0;\n      if (typeof tempEvent.tiltY === \"undefined\")\n        tempEvent.tiltY = 0;\n      if (typeof tempEvent.pointerType === \"undefined\")\n        tempEvent.pointerType = \"mouse\";\n      if (typeof tempEvent.pointerId === \"undefined\")\n        tempEvent.pointerId = MOUSE_POINTER_ID;\n      if (typeof tempEvent.pressure === \"undefined\")\n        tempEvent.pressure = 0.5;\n      if (typeof tempEvent.twist === \"undefined\")\n        tempEvent.twist = 0;\n      if (typeof tempEvent.tangentialPressure === \"undefined\")\n        tempEvent.tangentialPressure = 0;\n      tempEvent.isNormalized = true;\n      normalizedEvents.push(tempEvent);\n    } else {\n      normalizedEvents.push(event);\n    }\n    return normalizedEvents;\n  }\n  /**\n   * Normalizes the native {@link https://w3c.github.io/uievents/#interface-wheelevent WheelEvent}.\n   *\n   * The returned {@link FederatedWheelEvent} is a shared instance. It will not persist across\n   * multiple native wheel events.\n   * @param nativeEvent - The native wheel event that occurred on the canvas.\n   * @returns A federated wheel event.\n   */\n  normalizeWheelEvent(nativeEvent) {\n    const event = this._rootWheelEvent;\n    this._transferMouseData(event, nativeEvent);\n    event.deltaX = nativeEvent.deltaX;\n    event.deltaY = nativeEvent.deltaY;\n    event.deltaZ = nativeEvent.deltaZ;\n    event.deltaMode = nativeEvent.deltaMode;\n    this.mapPositionToPoint(event.screen, nativeEvent.clientX, nativeEvent.clientY);\n    event.global.copyFrom(event.screen);\n    event.offset.copyFrom(event.screen);\n    event.nativeEvent = nativeEvent;\n    event.type = nativeEvent.type;\n    return event;\n  }\n  /**\n   * Normalizes the `nativeEvent` into a federateed {@link FederatedPointerEvent}.\n   * @param event\n   * @param nativeEvent\n   */\n  _bootstrapEvent(event, nativeEvent) {\n    event.originalEvent = null;\n    event.nativeEvent = nativeEvent;\n    event.pointerId = nativeEvent.pointerId;\n    event.width = nativeEvent.width;\n    event.height = nativeEvent.height;\n    event.isPrimary = nativeEvent.isPrimary;\n    event.pointerType = nativeEvent.pointerType;\n    event.pressure = nativeEvent.pressure;\n    event.tangentialPressure = nativeEvent.tangentialPressure;\n    event.tiltX = nativeEvent.tiltX;\n    event.tiltY = nativeEvent.tiltY;\n    event.twist = nativeEvent.twist;\n    this._transferMouseData(event, nativeEvent);\n    this.mapPositionToPoint(event.screen, nativeEvent.clientX, nativeEvent.clientY);\n    event.global.copyFrom(event.screen);\n    event.offset.copyFrom(event.screen);\n    event.isTrusted = nativeEvent.isTrusted;\n    if (event.type === \"pointerleave\") {\n      event.type = \"pointerout\";\n    }\n    if (event.type.startsWith(\"mouse\")) {\n      event.type = event.type.replace(\"mouse\", \"pointer\");\n    }\n    if (event.type.startsWith(\"touch\")) {\n      event.type = TOUCH_TO_POINTER[event.type] || event.type;\n    }\n    return event;\n  }\n  /**\n   * Transfers base & mouse event data from the {@code nativeEvent} to the federated event.\n   * @param event\n   * @param nativeEvent\n   */\n  _transferMouseData(event, nativeEvent) {\n    event.isTrusted = nativeEvent.isTrusted;\n    event.srcElement = nativeEvent.srcElement;\n    event.timeStamp = performance.now();\n    event.type = nativeEvent.type;\n    event.altKey = nativeEvent.altKey;\n    event.button = nativeEvent.button;\n    event.buttons = nativeEvent.buttons;\n    event.client.x = nativeEvent.clientX;\n    event.client.y = nativeEvent.clientY;\n    event.ctrlKey = nativeEvent.ctrlKey;\n    event.metaKey = nativeEvent.metaKey;\n    event.movement.x = nativeEvent.movementX;\n    event.movement.y = nativeEvent.movementY;\n    event.page.x = nativeEvent.pageX;\n    event.page.y = nativeEvent.pageY;\n    event.relatedTarget = null;\n    event.shiftKey = nativeEvent.shiftKey;\n  }\n};\n/** @ignore */\n_EventSystem.extension = {\n  name: \"events\",\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.CanvasSystem,\n    ExtensionType.WebGPUSystem\n  ],\n  priority: -1\n};\n/**\n * The event features that are enabled by the EventSystem\n * (included in the **pixi.js** and **pixi.js-legacy** bundle), otherwise it will be ignored.\n * @since 7.2.0\n */\n_EventSystem.defaultEventFeatures = {\n  /** Enables pointer events associated with pointer movement. */\n  move: true,\n  /** Enables global pointer move events. */\n  globalMove: true,\n  /** Enables pointer events associated with clicking. */\n  click: true,\n  /** Enables wheel events. */\n  wheel: true\n};\nlet EventSystem = _EventSystem;\n\nexport { EventSystem };\n//# sourceMappingURL=EventSystem.mjs.map\n","import { EventSystem } from './EventSystem.mjs';\nimport { FederatedEvent } from './FederatedEvent.mjs';\n\n\"use strict\";\nconst FederatedContainer = {\n  /**\n   * Property-based event handler for the `click` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onclick = (event) => {\n   *  //some function here that happens on click\n   * }\n   */\n  onclick: null,\n  /**\n   * Property-based event handler for the `mousedown` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmousedown = (event) => {\n   *  //some function here that happens on mousedown\n   * }\n   */\n  onmousedown: null,\n  /**\n   * Property-based event handler for the `mouseenter` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseenter = (event) => {\n   *  //some function here that happens on mouseenter\n   * }\n   */\n  onmouseenter: null,\n  /**\n   * Property-based event handler for the `mouseleave` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseleave = (event) => {\n   *  //some function here that happens on mouseleave\n   * }\n   */\n  onmouseleave: null,\n  /**\n   * Property-based event handler for the `mousemove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmousemove = (event) => {\n   *  //some function here that happens on mousemove\n   * }\n   */\n  onmousemove: null,\n  /**\n   * Property-based event handler for the `globalmousemove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onglobalmousemove = (event) => {\n   *  //some function here that happens on globalmousemove\n   * }\n   */\n  onglobalmousemove: null,\n  /**\n   * Property-based event handler for the `mouseout` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseout = (event) => {\n   *  //some function here that happens on mouseout\n   * }\n   */\n  onmouseout: null,\n  /**\n   * Property-based event handler for the `mouseover` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseover = (event) => {\n   *  //some function here that happens on mouseover\n   * }\n   */\n  onmouseover: null,\n  /**\n   * Property-based event handler for the `mouseup` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseup = (event) => {\n   *  //some function here that happens on mouseup\n   * }\n   */\n  onmouseup: null,\n  /**\n   * Property-based event handler for the `mouseupoutside` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseupoutside = (event) => {\n   *  //some function here that happens on mouseupoutside\n   * }\n   */\n  onmouseupoutside: null,\n  /**\n   * Property-based event handler for the `pointercancel` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointercancel = (event) => {\n   *  //some function here that happens on pointercancel\n   * }\n   */\n  onpointercancel: null,\n  /**\n   * Property-based event handler for the `pointerdown` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerdown = (event) => {\n   *  //some function here that happens on pointerdown\n   * }\n   */\n  onpointerdown: null,\n  /**\n   * Property-based event handler for the `pointerenter` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerenter = (event) => {\n   *  //some function here that happens on pointerenter\n   * }\n   */\n  onpointerenter: null,\n  /**\n   * Property-based event handler for the `pointerleave` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerleave = (event) => {\n   *  //some function here that happens on pointerleave\n   * }\n   */\n  onpointerleave: null,\n  /**\n   * Property-based event handler for the `pointermove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointermove = (event) => {\n   *  //some function here that happens on pointermove\n   * }\n   */\n  onpointermove: null,\n  /**\n   * Property-based event handler for the `globalpointermove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onglobalpointermove = (event) => {\n   *  //some function here that happens on globalpointermove\n   * }\n   */\n  onglobalpointermove: null,\n  /**\n   * Property-based event handler for the `pointerout` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerout = (event) => {\n   *  //some function here that happens on pointerout\n   * }\n   */\n  onpointerout: null,\n  /**\n   * Property-based event handler for the `pointerover` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerover = (event) => {\n   *  //some function here that happens on pointerover\n   * }\n   */\n  onpointerover: null,\n  /**\n   * Property-based event handler for the `pointertap` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointertap = (event) => {\n   *  //some function here that happens on pointertap\n   * }\n   */\n  onpointertap: null,\n  /**\n   * Property-based event handler for the `pointerup` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerup = (event) => {\n   *  //some function here that happens on pointerup\n   * }\n   */\n  onpointerup: null,\n  /**\n   * Property-based event handler for the `pointerupoutside` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerupoutside = (event) => {\n   *  //some function here that happens on pointerupoutside\n   * }\n   */\n  onpointerupoutside: null,\n  /**\n   * Property-based event handler for the `rightclick` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onrightclick = (event) => {\n   *  //some function here that happens on rightclick\n   * }\n   */\n  onrightclick: null,\n  /**\n   * Property-based event handler for the `rightdown` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onrightdown = (event) => {\n   *  //some function here that happens on rightdown\n   * }\n   */\n  onrightdown: null,\n  /**\n   * Property-based event handler for the `rightup` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onrightup = (event) => {\n   *  //some function here that happens on rightup\n   * }\n   */\n  onrightup: null,\n  /**\n   * Property-based event handler for the `rightupoutside` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onrightupoutside = (event) => {\n   *  //some function here that happens on rightupoutside\n   * }\n   */\n  onrightupoutside: null,\n  /**\n   * Property-based event handler for the `tap` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontap = (event) => {\n   *  //some function here that happens on tap\n   * }\n   */\n  ontap: null,\n  /**\n   * Property-based event handler for the `touchcancel` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontouchcancel = (event) => {\n   *  //some function here that happens on touchcancel\n   * }\n   */\n  ontouchcancel: null,\n  /**\n   * Property-based event handler for the `touchend` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontouchend = (event) => {\n   *  //some function here that happens on touchend\n   * }\n   */\n  ontouchend: null,\n  /**\n   * Property-based event handler for the `touchendoutside` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontouchendoutside = (event) => {\n   *  //some function here that happens on touchendoutside\n   * }\n   */\n  ontouchendoutside: null,\n  /**\n   * Property-based event handler for the `touchmove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontouchmove = (event) => {\n   *  //some function here that happens on touchmove\n   * }\n   */\n  ontouchmove: null,\n  /**\n   * Property-based event handler for the `globaltouchmove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onglobaltouchmove = (event) => {\n   *  //some function here that happens on globaltouchmove\n   * }\n   */\n  onglobaltouchmove: null,\n  /**\n   * Property-based event handler for the `touchstart` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontouchstart = (event) => {\n   *  //some function here that happens on touchstart\n   * }\n   */\n  ontouchstart: null,\n  /**\n   * Property-based event handler for the `wheel` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onwheel = (event) => {\n   *  //some function here that happens on wheel\n   * }\n   */\n  onwheel: null,\n  /**\n   * Enable interaction events for the Container. Touch, pointer and mouse\n   * @memberof scene.Container#\n   */\n  get interactive() {\n    return this.eventMode === \"dynamic\" || this.eventMode === \"static\";\n  },\n  set interactive(value) {\n    this.eventMode = value ? \"static\" : \"passive\";\n  },\n  /**\n   * @ignore\n   */\n  _internalEventMode: void 0,\n  /**\n   * Enable interaction events for the Container. Touch, pointer and mouse.\n   * There are 5 types of interaction settings:\n   * - `'none'`: Ignores all interaction events, even on its children.\n   * - `'passive'`: **(default)** Does not emit events and ignores all hit testing on itself and non-interactive children.\n   * Interactive children will still emit events.\n   * - `'auto'`: Does not emit events but is hit tested if parent is interactive. Same as `interactive = false` in v7\n   * - `'static'`: Emit events and is hit tested. Same as `interaction = true` in v7\n   * - `'dynamic'`: Emits events and is hit tested but will also receive mock interaction events fired from a ticker to\n   * allow for interaction when the mouse isn't moving\n   * @example\n   * import { Sprite } from 'pixi.js';\n   *\n   * const sprite = new Sprite(texture);\n   * sprite.eventMode = 'static';\n   * sprite.on('tap', (event) => {\n   *     // Handle event\n   * });\n   * @memberof scene.Container#\n   * @since 7.2.0\n   */\n  get eventMode() {\n    return this._internalEventMode ?? EventSystem.defaultEventMode;\n  },\n  set eventMode(value) {\n    this._internalEventMode = value;\n  },\n  /**\n   * Determines if the container is interactive or not\n   * @returns {boolean} Whether the container is interactive or not\n   * @memberof scene.Container#\n   * @since 7.2.0\n   * @example\n   * import { Sprite } from 'pixi.js';\n   *\n   * const sprite = new Sprite(texture);\n   * sprite.eventMode = 'static';\n   * sprite.isInteractive(); // true\n   *\n   * sprite.eventMode = 'dynamic';\n   * sprite.isInteractive(); // true\n   *\n   * sprite.eventMode = 'none';\n   * sprite.isInteractive(); // false\n   *\n   * sprite.eventMode = 'passive';\n   * sprite.isInteractive(); // false\n   *\n   * sprite.eventMode = 'auto';\n   * sprite.isInteractive(); // false\n   */\n  isInteractive() {\n    return this.eventMode === \"static\" || this.eventMode === \"dynamic\";\n  },\n  /**\n   * Determines if the children to the container can be clicked/touched\n   * Setting this to false allows PixiJS to bypass a recursive `hitTest` function\n   * @memberof scene.Container#\n   */\n  interactiveChildren: true,\n  /**\n   * Interaction shape. Children will be hit first, then this shape will be checked.\n   * Setting this will cause this shape to be checked in hit tests rather than the container's bounds.\n   * @example\n   * import { Rectangle, Sprite } from 'pixi.js';\n   *\n   * const sprite = new Sprite(texture);\n   * sprite.interactive = true;\n   * sprite.hitArea = new Rectangle(0, 0, 100, 100);\n   * @member {IHitArea}\n   * @memberof scene.Container#\n   */\n  hitArea: null,\n  /**\n   * Unlike `on` or `addListener` which are methods from EventEmitter, `addEventListener`\n   * seeks to be compatible with the DOM's `addEventListener` with support for options.\n   * @memberof scene.Container\n   * @param type - The type of event to listen to.\n   * @param listener - The listener callback or object.\n   * @param options - Listener options, used for capture phase.\n   * @example\n   * // Tell the user whether they did a single, double, triple, or nth click.\n   * button.addEventListener('click', {\n   *     handleEvent(e): {\n   *         let prefix;\n   *\n   *         switch (e.detail) {\n   *             case 1: prefix = 'single'; break;\n   *             case 2: prefix = 'double'; break;\n   *             case 3: prefix = 'triple'; break;\n   *             default: prefix = e.detail + 'th'; break;\n   *         }\n   *\n   *         console.log('That was a ' + prefix + 'click');\n   *     }\n   * });\n   *\n   * // But skip the first click!\n   * button.parent.addEventListener('click', function blockClickOnce(e) {\n   *     e.stopImmediatePropagation();\n   *     button.parent.removeEventListener('click', blockClickOnce, true);\n   * }, {\n   *     capture: true,\n   * });\n   */\n  addEventListener(type, listener, options) {\n    const capture = typeof options === \"boolean\" && options || typeof options === \"object\" && options.capture;\n    const signal = typeof options === \"object\" ? options.signal : void 0;\n    const once = typeof options === \"object\" ? options.once === true : false;\n    const context = typeof listener === \"function\" ? void 0 : listener;\n    type = capture ? `${type}capture` : type;\n    const listenerFn = typeof listener === \"function\" ? listener : listener.handleEvent;\n    const emitter = this;\n    if (signal) {\n      signal.addEventListener(\"abort\", () => {\n        emitter.off(type, listenerFn, context);\n      });\n    }\n    if (once) {\n      emitter.once(type, listenerFn, context);\n    } else {\n      emitter.on(type, listenerFn, context);\n    }\n  },\n  /**\n   * Unlike `off` or `removeListener` which are methods from EventEmitter, `removeEventListener`\n   * seeks to be compatible with the DOM's `removeEventListener` with support for options.\n   * @memberof scene.Container\n   * @param type - The type of event the listener is bound to.\n   * @param listener - The listener callback or object.\n   * @param options - The original listener options. This is required to deregister a capture phase listener.\n   */\n  removeEventListener(type, listener, options) {\n    const capture = typeof options === \"boolean\" && options || typeof options === \"object\" && options.capture;\n    const context = typeof listener === \"function\" ? void 0 : listener;\n    type = capture ? `${type}capture` : type;\n    listener = typeof listener === \"function\" ? listener : listener.handleEvent;\n    this.off(type, listener, context);\n  },\n  /**\n   * Dispatch the event on this {@link Container} using the event's {@link EventBoundary}.\n   *\n   * The target of the event is set to `this` and the `defaultPrevented` flag is cleared before dispatch.\n   * @memberof scene.Container\n   * @param e - The event to dispatch.\n   * @returns Whether the {@link FederatedEvent.preventDefault preventDefault}() method was not invoked.\n   * @example\n   * // Reuse a click event!\n   * button.dispatchEvent(clickEvent);\n   */\n  dispatchEvent(e) {\n    if (!(e instanceof FederatedEvent)) {\n      throw new Error(\"Container cannot propagate events outside of the Federated Events API\");\n    }\n    e.defaultPrevented = false;\n    e.path = null;\n    e.target = this;\n    e.manager.dispatchEvent(e);\n    return !e.defaultPrevented;\n  }\n};\n\nexport { FederatedContainer };\n//# sourceMappingURL=FederatedEventTarget.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { Container } from '../scene/container/Container.mjs';\nimport { EventSystem } from './EventSystem.mjs';\nimport { FederatedContainer } from './FederatedEventTarget.mjs';\n\n\"use strict\";\nextensions.add(EventSystem);\nContainer.mixin(FederatedContainer);\n//# sourceMappingURL=init.mjs.map\n"],"names":["FederatedEvent","constructor","manager","this","bubbles","cancelBubble","cancelable","composed","defaultPrevented","eventPhase","prototype","NONE","propagationStopped","propagationImmediatelyStopped","layer","Point","page","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","layerX","x","layerY","y","pageX","pageY","data","composedPath","path","length","target","propagationPath","initEvent","_type","_bubbles","_cancelable","Error","initUIEvent","_typeArg","_bubblesArg","_cancelableArg","_viewArg","_detailArg","preventDefault","nativeEvent","Event","stopImmediatePropagation","stopPropagation","appleIphone","appleIpod","appleTablet","appleUniversal","androidPhone","androidTablet","amazonPhone","amazonTablet","windowsPhone","windowsTablet","otherBlackBerry","otherBlackBerry10","otherOpera","otherChrome","otherFirefox","isAppleTabletOnIos13","navigator","platform","maxTouchPoints","MSStream","isMobile","param","nav","userAgent","tmp","split","match","regex","test","createMatch","result","apple","phone","ipod","tablet","universal","device","amazon","android","windows","other","blackberry","blackberry10","opera","firefox","chrome","any","globalThis","AccessibilitySystem","renderer","_mobileInfo","debug","_isActive","_isMobileAccessibility","_pool","_renderId","_children","_androidUpdateCount","_androidUpdateFrequency","_hookDiv","_createTouchHook","div","document","createElement","style","width","height","position","top","left","zIndex","toString","_div","_renderer","_onKeyDown","bind","_onMouseMove","addEventListener","isActive","isMobileAccessibility","hookDiv","backgroundColor","title","_activate","_destroyTouchHook","body","appendChild","removeChild","removeEventListener","runners","postrender","add","view","canvas","parentNode","_deactivate","remove","_updateAccessibleObjects","container","visible","accessibleChildren","accessible","isInteractive","_accessibleActive","_addChild","children","i","init","options","now","performance","renderingToScreen","lastObjectRendered","getBoundingClientRect","viewWidth","viewHeight","resolution","sx","sy","child","removeItems","_accessibleDiv","push","hitArea","wt","worldTransform","tx","a","ty","d","getBounds","rectangle","_capHitArea","accessibleTitle","getAttribute","accessibleHint","setAttribute","tabIndex","_updateDebugHTML","innerHTML","type","pop","borderStyle","toLowerCase","includes","_onClick","_onFocus","_onFocusOut","pointerEvents","accessiblePointerEvents","accessibleType","_dispatchEvent","e","boundary","events","rootBoundary","event","Object","assign","rootTarget","forEach","type2","dispatchEvent","keyCode","movementX","movementY","destroy","extension","WebGLSystem","WebGPUSystem","name","Container","mixin","EventsTicker","interactionFrequency","_deltaTime","_didMove","_tickerAdded","_pauseUpdate","removeTickerListener","pauseUpdate","paused","addTickerListener","domElement","Ticker","system","_tickerUpdate","INTERACTION","pointerMoved","_update","rootPointerEvent","supportsTouchEvents","pointerType","PointerEvent","clientX","clientY","pointerId","ticker","deltaTime","FederatedMouseEvent","super","arguments","client","movement","offset","global","screen","offsetX","offsetY","globalX","globalY","screenX","screenY","getLocalPosition","point","globalPos","applyInverse","getModifierState","key","initMouseEvent","_canBubbleArg","_screenXArg","_screenYArg","_clientXArg","_clientYArg","_ctrlKeyArg","_altKeyArg","_shiftKeyArg","_metaKeyArg","_buttonArg","_relatedTargetArg","FederatedPointerEvent","isPrimary","getCoalescedEvents","getPredictedEvents","FederatedWheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","DOM_DELTA_PAGE","tempHitLocation","tempLocalMapping","EventBoundary","dispatch","moveOnAll","enableGlobalMoveEvents","mappingState","trackingData","eventPool","Map","_allInteractiveElements","_hitElements","_isPointerMoveEvent","hitPruneFn","hitTestFn","mapPointerDown","mapPointerMove","mapPointerOut","mapPointerOver","mapPointerUp","mapPointerUpOutside","mapWheel","mappingTable","addEventMapping","fn","priority","sort","b","propagate","emit","mapEvent","mappers","j","warn","hitTest","invertedPath","eventMode","set","currentTarget","notifyTarget","all","targets","Array","isArray","parent","reverse","hitTestMoveRecursive","location","testFn","pruneFn","ignore","shouldReturn","_interactivePrune","interactiveChildren","nestedHit","_isInteractive","isInteractiveMode","isInteractiveTarget","hitTestRecursive","relativeLocation","int","renderable","measurable","contains","effects","effect","containsPoint","handlerKey","_notifyListeners","from","createPointerEvent","isRightButton","button","pressTargetsByButton","freeEvent","isMouse","outTarget","findMountedTarget","overTargets","outType","outEvent","leaveEvent","overType","overEvent","clonePointerEvent","overTargetAncestor","enterEvent","allMethods","allowGlobalPointerEvents","splice","cursor","pressTarget","clickTarget","clickEvent","clicksByButton","clickCount","timeStamp","clickHistory","detail","wheelEvent","createWheelEvent","allocateEvent","copyPointerData","copyMouseData","copyData","originalEvent","copyWheelData","slice","to","deltaMode","deltaX","deltaY","deltaZ","pressure","tangentialPressure","tiltX","tiltY","twist","altKey","buttons","copyFrom","ctrlKey","metaKey","shiftKey","isTrusted","srcElement","which","id","overTarget","has","get","listeners","_events","once","removeListener","call","context","TOUCH_TO_POINTER","touchstart","touchend","touchendoutside","touchmove","touchcancel","_EventSystem","supportsPointerEvents","autoPreventDefault","_eventsAdded","_rootPointerEvent","_rootWheelEvent","cursorStyles","default","pointer","features","Proxy","defaultEventFeatures","value","_onPointerDown","_onPointerMove","_onPointerUp","_onPointerOverOut","onWheel","defaultEventMode","_defaultEventMode","setTargetElement","eventFeatures","globalMove","resolutionChange","_currentCursor","setCursor","mode","applyStyles","OffscreenCanvas","hasOwnProperty","click","_normalizeToPointerData","isNormalized","nativeEvent2","federatedEvent","_bootstrapEvent","move","normalizedEvents","outside","wheel","normalizeWheelEvent","element","_removeEvents","_addEvents","msPointerEnabled","msContentZooming","msTouchAction","touchAction","passive","capture","mapPositionToPoint","rect","isConnected","resolutionMultiplier","TouchEvent","li","changedTouches","touch","touches","radiusX","radiusY","identifier","force","MouseEvent","tempEvent","_transferMouseData","startsWith","replace","relatedTarget","CanvasSystem","EventSystem","FederatedContainer","onclick","onmousedown","onmouseenter","onmouseleave","onmousemove","onglobalmousemove","onmouseout","onmouseover","onmouseup","onmouseupoutside","onpointercancel","onpointerdown","onpointerenter","onpointerleave","onpointermove","onglobalpointermove","onpointerout","onpointerover","onpointertap","onpointerup","onpointerupoutside","onrightclick","onrightdown","onrightup","onrightupoutside","ontap","ontouchcancel","ontouchend","ontouchendoutside","ontouchmove","onglobaltouchmove","ontouchstart","onwheel","interactive","_internalEventMode","listener","signal","listenerFn","handleEvent","emitter","off","on"],"sourceRoot":""}