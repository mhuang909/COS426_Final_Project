{"version":3,"file":"151.951bd24ce15f34bf2d62.js","mappings":"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","sources":["webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/scene/graphics/gl/GlGraphicsAdaptor.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/scene/mesh/gl/GlMeshAdaptor.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/batcher/gl/GlBatchAdaptor.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/buffer/const.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/buffer/GlBuffer.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/buffer/GlBufferSystem.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/context/GlContextSystem.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/const.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/geometry/utils/getGlTypeFromFormat.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/geometry/GlGeometrySystem.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/GlBackBufferSystem.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/GlColorMaskSystem.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/GlEncoderSystem.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/GlStencilSystem.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/createUboElementsSTD40.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/generateArraySyncSTD40.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/createUboSyncSTD40.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/GlUboSystem.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/GlRenderTarget.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/renderTarget/GlRenderTargetAdaptor.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/renderTarget/GlRenderTargetSystem.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/GlProgramData.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/compileShader.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/defaultValue.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/mapType.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/logProgramError.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/GlShaderSystem.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/generateProgram.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/extractAttributesFromGlProgram.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/getUniformData.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/getUboData.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/GenerateShaderSyncCode.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/generateUniformsSyncTypes.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/GlUniformGroupSystem.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/generateUniformsSync.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/state/GlStateSystem.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/state/mapWebGLBlendModesToPixi.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/GlTexture.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadBufferImageResource.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadCompressedTextureResource.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadImageResource.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadVideoResource.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/pixiToGlMaps.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/applyStyleParams.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/GlTextureSystem.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/mapFormatToGlInternalFormat.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/mapFormatToGlType.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/mapFormatToGlFormat.mjs","webpack://lower-case-dashed-name-of-project/./node_modules/pixi.js/lib/rendering/renderers/gl/WebGLRenderer.mjs"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { getMaxTexturesPerBatch } from '../../../rendering/batcher/gl/utils/maxRecommendedTextures.mjs';\nimport { compileHighShaderGlProgram } from '../../../rendering/high-shader/compileHighShaderToProgram.mjs';\nimport { colorBitGl } from '../../../rendering/high-shader/shader-bits/colorBit.mjs';\nimport { generateTextureBatchBitGl } from '../../../rendering/high-shader/shader-bits/generateTextureBatchBit.mjs';\nimport { localUniformBitGl } from '../../../rendering/high-shader/shader-bits/localUniformBit.mjs';\nimport { roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nimport { getBatchSamplersUniformGroup } from '../../../rendering/renderers/gl/shader/getBatchSamplersUniformGroup.mjs';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup.mjs';\n\n\"use strict\";\nclass GlGraphicsAdaptor {\n  init() {\n    const uniforms = new UniformGroup({\n      uColor: { value: new Float32Array([1, 1, 1, 1]), type: \"vec4<f32>\" },\n      uTransformMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uRound: { value: 0, type: \"f32\" }\n    });\n    const maxTextures = getMaxTexturesPerBatch();\n    const glProgram = compileHighShaderGlProgram({\n      name: \"graphics\",\n      bits: [\n        colorBitGl,\n        generateTextureBatchBitGl(maxTextures),\n        localUniformBitGl,\n        roundPixelsBitGl\n      ]\n    });\n    this.shader = new Shader({\n      glProgram,\n      resources: {\n        localUniforms: uniforms,\n        batchSamplers: getBatchSamplersUniformGroup(maxTextures)\n      }\n    });\n  }\n  execute(graphicsPipe, renderable) {\n    const context = renderable.context;\n    const shader = context.customShader || this.shader;\n    const renderer = graphicsPipe.renderer;\n    const contextSystem = renderer.graphicsContext;\n    const {\n      batcher,\n      instructions\n    } = contextSystem.getContextRenderData(context);\n    shader.groups[0] = renderer.globalUniforms.bindGroup;\n    renderer.state.set(graphicsPipe.state);\n    renderer.shader.bind(shader);\n    renderer.geometry.bind(batcher.geometry, shader.glProgram);\n    const batches = instructions.instructions;\n    for (let i = 0; i < instructions.instructionSize; i++) {\n      const batch = batches[i];\n      if (batch.size) {\n        for (let j = 0; j < batch.textures.count; j++) {\n          renderer.texture.bind(batch.textures.textures[j], j);\n        }\n        renderer.geometry.draw(batch.topology, batch.size, batch.start);\n      }\n    }\n  }\n  destroy() {\n    this.shader.destroy(true);\n    this.shader = null;\n  }\n}\n/** @ignore */\nGlGraphicsAdaptor.extension = {\n  type: [\n    ExtensionType.WebGLPipesAdaptor\n  ],\n  name: \"graphics\"\n};\n\nexport { GlGraphicsAdaptor };\n//# sourceMappingURL=GlGraphicsAdaptor.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { compileHighShaderGlProgram } from '../../../rendering/high-shader/compileHighShaderToProgram.mjs';\nimport { localUniformBitGl } from '../../../rendering/high-shader/shader-bits/localUniformBit.mjs';\nimport { roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nimport { textureBitGl } from '../../../rendering/high-shader/shader-bits/textureBit.mjs';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { Texture } from '../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { warn } from '../../../utils/logging/warn.mjs';\n\n\"use strict\";\nclass GlMeshAdaptor {\n  init() {\n    const glProgram = compileHighShaderGlProgram({\n      name: \"mesh\",\n      bits: [\n        localUniformBitGl,\n        textureBitGl,\n        roundPixelsBitGl\n      ]\n    });\n    this._shader = new Shader({\n      glProgram,\n      resources: {\n        uTexture: Texture.EMPTY.source,\n        textureUniforms: {\n          uTextureMatrix: { type: \"mat3x3<f32>\", value: new Matrix() }\n        }\n      }\n    });\n  }\n  execute(meshPipe, mesh) {\n    const renderer = meshPipe.renderer;\n    let shader = mesh._shader;\n    if (!shader) {\n      shader = this._shader;\n      const texture = mesh.texture;\n      const source = texture.source;\n      shader.resources.uTexture = source;\n      shader.resources.uSampler = source.style;\n      shader.resources.textureUniforms.uniforms.uTextureMatrix = texture.textureMatrix.mapCoord;\n    } else if (!shader.glProgram) {\n      warn(\"Mesh shader has no glProgram\", mesh.shader);\n      return;\n    }\n    shader.groups[100] = renderer.globalUniforms.bindGroup;\n    shader.groups[101] = meshPipe.localUniformsBindGroup;\n    renderer.encoder.draw({\n      geometry: mesh._geometry,\n      shader,\n      state: mesh.state\n    });\n  }\n  destroy() {\n    this._shader.destroy(true);\n    this._shader = null;\n  }\n}\nGlMeshAdaptor.extension = {\n  type: [\n    ExtensionType.WebGLPipesAdaptor\n  ],\n  name: \"mesh\"\n};\n\nexport { GlMeshAdaptor };\n//# sourceMappingURL=GlMeshAdaptor.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { State } from '../../renderers/shared/state/State.mjs';\n\n\"use strict\";\nclass GlBatchAdaptor {\n  constructor() {\n    this._didUpload = false;\n    this._tempState = State.for2d();\n  }\n  init(batcherPipe) {\n    batcherPipe.renderer.runners.contextChange.add(this);\n  }\n  contextChange() {\n    this._didUpload = false;\n  }\n  start(batchPipe, geometry, shader) {\n    const renderer = batchPipe.renderer;\n    renderer.shader.bind(shader, this._didUpload);\n    renderer.shader.updateUniformGroup(renderer.globalUniforms.uniformGroup);\n    renderer.geometry.bind(geometry, shader.glProgram);\n  }\n  execute(batchPipe, batch) {\n    const renderer = batchPipe.renderer;\n    this._didUpload = true;\n    this._tempState.blendMode = batch.blendMode;\n    renderer.state.set(this._tempState);\n    const textures = batch.textures.textures;\n    for (let i = 0; i < batch.textures.count; i++) {\n      renderer.texture.bind(textures[i], i);\n    }\n    renderer.geometry.draw(batch.topology, batch.size, batch.start);\n  }\n}\n/** @ignore */\nGlBatchAdaptor.extension = {\n  type: [\n    ExtensionType.WebGLPipesAdaptor\n  ],\n  name: \"batch\"\n};\n\nexport { GlBatchAdaptor };\n//# sourceMappingURL=GlBatchAdaptor.mjs.map\n","\"use strict\";\nvar BUFFER_TYPE = /* @__PURE__ */ ((BUFFER_TYPE2) => {\n  BUFFER_TYPE2[BUFFER_TYPE2[\"ELEMENT_ARRAY_BUFFER\"] = 34963] = \"ELEMENT_ARRAY_BUFFER\";\n  BUFFER_TYPE2[BUFFER_TYPE2[\"ARRAY_BUFFER\"] = 34962] = \"ARRAY_BUFFER\";\n  BUFFER_TYPE2[BUFFER_TYPE2[\"UNIFORM_BUFFER\"] = 35345] = \"UNIFORM_BUFFER\";\n  return BUFFER_TYPE2;\n})(BUFFER_TYPE || {});\n\nexport { BUFFER_TYPE };\n//# sourceMappingURL=const.mjs.map\n","\"use strict\";\nclass GlBuffer {\n  constructor(buffer, type) {\n    this._lastBindBaseLocation = -1;\n    this._lastBindCallId = -1;\n    this.buffer = buffer || null;\n    this.updateID = -1;\n    this.byteLength = -1;\n    this.type = type;\n  }\n}\n\nexport { GlBuffer };\n//# sourceMappingURL=GlBuffer.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { BufferUsage } from '../../shared/buffer/const.mjs';\nimport { BUFFER_TYPE } from './const.mjs';\nimport { GlBuffer } from './GlBuffer.mjs';\n\n\"use strict\";\nclass GlBufferSystem {\n  /**\n   * @param {Renderer} renderer - The renderer this System works for.\n   */\n  constructor(renderer) {\n    this._gpuBuffers = /* @__PURE__ */ Object.create(null);\n    /** Cache keeping track of the base bound buffer bases */\n    this._boundBufferBases = /* @__PURE__ */ Object.create(null);\n    this._minBaseLocation = 0;\n    this._nextBindBaseIndex = this._minBaseLocation;\n    this._bindCallId = 0;\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_gpuBuffers\");\n  }\n  /**\n   * @ignore\n   */\n  destroy() {\n    this._renderer = null;\n    this._gl = null;\n    this._gpuBuffers = null;\n    this._boundBufferBases = null;\n  }\n  /** Sets up the renderer context and necessary buffers. */\n  contextChange() {\n    const gl = this._gl = this._renderer.gl;\n    this._gpuBuffers = /* @__PURE__ */ Object.create(null);\n    this._maxBindings = gl.MAX_UNIFORM_BUFFER_BINDINGS ? gl.getParameter(gl.MAX_UNIFORM_BUFFER_BINDINGS) : 0;\n  }\n  getGlBuffer(buffer) {\n    return this._gpuBuffers[buffer.uid] || this.createGLBuffer(buffer);\n  }\n  /**\n   * This binds specified buffer. On first run, it will create the webGL buffers for the context too\n   * @param buffer - the buffer to bind to the renderer\n   */\n  bind(buffer) {\n    const { _gl: gl } = this;\n    const glBuffer = this.getGlBuffer(buffer);\n    gl.bindBuffer(glBuffer.type, glBuffer.buffer);\n  }\n  /**\n   * Binds an uniform buffer to at the given index.\n   *\n   * A cache is used so a buffer will not be bound again if already bound.\n   * @param glBuffer - the buffer to bind\n   * @param index - the base index to bind it to.\n   */\n  bindBufferBase(glBuffer, index) {\n    const { _gl: gl } = this;\n    if (this._boundBufferBases[index] !== glBuffer) {\n      this._boundBufferBases[index] = glBuffer;\n      glBuffer._lastBindBaseLocation = index;\n      gl.bindBufferBase(gl.UNIFORM_BUFFER, index, glBuffer.buffer);\n    }\n  }\n  nextBindBase(hasTransformFeedback) {\n    this._bindCallId++;\n    this._minBaseLocation = 0;\n    if (hasTransformFeedback) {\n      this._boundBufferBases[0] = null;\n      this._minBaseLocation = 1;\n      if (this._nextBindBaseIndex < 1) {\n        this._nextBindBaseIndex = 1;\n      }\n    }\n  }\n  freeLocationForBufferBase(glBuffer) {\n    let freeIndex = this.getLastBindBaseLocation(glBuffer);\n    if (freeIndex >= this._minBaseLocation) {\n      glBuffer._lastBindCallId = this._bindCallId;\n      return freeIndex;\n    }\n    let loop = 0;\n    let nextIndex = this._nextBindBaseIndex;\n    while (loop < 2) {\n      if (nextIndex >= this._maxBindings) {\n        nextIndex = this._minBaseLocation;\n        loop++;\n      }\n      const curBuf = this._boundBufferBases[nextIndex];\n      if (curBuf && curBuf._lastBindCallId === this._bindCallId) {\n        nextIndex++;\n        continue;\n      }\n      break;\n    }\n    freeIndex = nextIndex;\n    this._nextBindBaseIndex = nextIndex + 1;\n    if (loop >= 2) {\n      return -1;\n    }\n    glBuffer._lastBindCallId = this._bindCallId;\n    this._boundBufferBases[freeIndex] = null;\n    return freeIndex;\n  }\n  getLastBindBaseLocation(glBuffer) {\n    const index = glBuffer._lastBindBaseLocation;\n    if (this._boundBufferBases[index] === glBuffer) {\n      return index;\n    }\n    return -1;\n  }\n  /**\n   * Binds a buffer whilst also binding its range.\n   * This will make the buffer start from the offset supplied rather than 0 when it is read.\n   * @param glBuffer - the buffer to bind\n   * @param index - the base index to bind at, defaults to 0\n   * @param offset - the offset to bind at (this is blocks of 256). 0 = 0, 1 = 256, 2 = 512 etc\n   * @param size - the size to bind at (this is blocks of 256).\n   */\n  bindBufferRange(glBuffer, index, offset, size) {\n    const { _gl: gl } = this;\n    offset || (offset = 0);\n    index || (index = 0);\n    this._boundBufferBases[index] = null;\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, index || 0, glBuffer.buffer, offset * 256, size || 256);\n  }\n  /**\n   * Will ensure the data in the buffer is uploaded to the GPU.\n   * @param {Buffer} buffer - the buffer to update\n   */\n  updateBuffer(buffer) {\n    const { _gl: gl } = this;\n    const glBuffer = this.getGlBuffer(buffer);\n    if (buffer._updateID === glBuffer.updateID) {\n      return glBuffer;\n    }\n    glBuffer.updateID = buffer._updateID;\n    gl.bindBuffer(glBuffer.type, glBuffer.buffer);\n    const data = buffer.data;\n    const drawType = buffer.descriptor.usage & BufferUsage.STATIC ? gl.STATIC_DRAW : gl.DYNAMIC_DRAW;\n    if (data) {\n      if (glBuffer.byteLength >= data.byteLength) {\n        gl.bufferSubData(glBuffer.type, 0, data, 0, buffer._updateSize / data.BYTES_PER_ELEMENT);\n      } else {\n        glBuffer.byteLength = data.byteLength;\n        gl.bufferData(glBuffer.type, data, drawType);\n      }\n    } else {\n      glBuffer.byteLength = buffer.descriptor.size;\n      gl.bufferData(glBuffer.type, glBuffer.byteLength, drawType);\n    }\n    return glBuffer;\n  }\n  /** dispose all WebGL resources of all managed buffers */\n  destroyAll() {\n    const gl = this._gl;\n    for (const id in this._gpuBuffers) {\n      gl.deleteBuffer(this._gpuBuffers[id].buffer);\n    }\n    this._gpuBuffers = /* @__PURE__ */ Object.create(null);\n  }\n  /**\n   * Disposes buffer\n   * @param {Buffer} buffer - buffer with data\n   * @param {boolean} [contextLost=false] - If context was lost, we suppress deleteVertexArray\n   */\n  onBufferDestroy(buffer, contextLost) {\n    const glBuffer = this._gpuBuffers[buffer.uid];\n    const gl = this._gl;\n    if (!contextLost) {\n      gl.deleteBuffer(glBuffer.buffer);\n    }\n    this._gpuBuffers[buffer.uid] = null;\n  }\n  /**\n   * creates and attaches a GLBuffer object tied to the current context.\n   * @param buffer\n   * @protected\n   */\n  createGLBuffer(buffer) {\n    const { _gl: gl } = this;\n    let type = BUFFER_TYPE.ARRAY_BUFFER;\n    if (buffer.descriptor.usage & BufferUsage.INDEX) {\n      type = BUFFER_TYPE.ELEMENT_ARRAY_BUFFER;\n    } else if (buffer.descriptor.usage & BufferUsage.UNIFORM) {\n      type = BUFFER_TYPE.UNIFORM_BUFFER;\n    }\n    const glBuffer = new GlBuffer(gl.createBuffer(), type);\n    this._gpuBuffers[buffer.uid] = glBuffer;\n    buffer.on(\"destroy\", this.onBufferDestroy, this);\n    return glBuffer;\n  }\n}\n/** @ignore */\nGlBufferSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"buffer\"\n};\n\nexport { GlBufferSystem };\n//# sourceMappingURL=GlBufferSystem.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\n\n\"use strict\";\nconst _GlContextSystem = class _GlContextSystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    /**\n     * Features supported by current renderer.\n     * @type {object}\n     * @readonly\n     */\n    this.supports = {\n      /** Support for 32-bit indices buffer. */\n      uint32Indices: true,\n      /** Support for UniformBufferObjects */\n      uniformBufferObject: true,\n      /** Support for VertexArrayObjects */\n      vertexArrayObject: true,\n      /** Support for SRGB texture format */\n      srgbTextures: true,\n      /** Support for wrapping modes if a texture is non-power of two */\n      nonPowOf2wrapping: true,\n      /** Support for MSAA (antialiasing of dynamic textures) */\n      msaa: true,\n      /** Support for mipmaps if a texture is non-power of two */\n      nonPowOf2mipmaps: true\n    };\n    this._renderer = renderer;\n    this.extensions = /* @__PURE__ */ Object.create(null);\n    this.handleContextLost = this.handleContextLost.bind(this);\n    this.handleContextRestored = this.handleContextRestored.bind(this);\n  }\n  /**\n   * `true` if the context is lost\n   * @readonly\n   */\n  get isLost() {\n    return !this.gl || this.gl.isContextLost();\n  }\n  /**\n   * Handles the context change event.\n   * @param {WebGLRenderingContext} gl - New WebGL context.\n   */\n  contextChange(gl) {\n    this.gl = gl;\n    this._renderer.gl = gl;\n  }\n  init(options) {\n    options = { ..._GlContextSystem.defaultOptions, ...options };\n    let multiView = this.multiView = options.multiView;\n    if (options.context && multiView) {\n      warn(\"Renderer created with both a context and multiview enabled. Disabling multiView as both cannot work together.\");\n      multiView = false;\n    }\n    if (multiView) {\n      this.canvas = DOMAdapter.get().createCanvas(this._renderer.canvas.width, this._renderer.canvas.height);\n    } else {\n      this.canvas = this._renderer.view.canvas;\n    }\n    if (options.context) {\n      this.initFromContext(options.context);\n    } else {\n      const alpha = this._renderer.background.alpha < 1;\n      const premultipliedAlpha = options.premultipliedAlpha ?? true;\n      const antialias = options.antialias && !this._renderer.backBuffer.useBackBuffer;\n      this.createContext(options.preferWebGLVersion, {\n        alpha,\n        premultipliedAlpha,\n        antialias,\n        stencil: true,\n        preserveDrawingBuffer: options.preserveDrawingBuffer,\n        powerPreference: options.powerPreference ?? \"default\"\n      });\n    }\n  }\n  ensureCanvasSize(targetCanvas) {\n    if (!this.multiView) {\n      if (targetCanvas !== this.canvas) {\n        warn(\"multiView is disabled, but targetCanvas is not the main canvas\");\n      }\n      return;\n    }\n    const { canvas } = this;\n    if (canvas.width < targetCanvas.width || canvas.height < targetCanvas.height) {\n      canvas.width = Math.max(targetCanvas.width, targetCanvas.width);\n      canvas.height = Math.max(targetCanvas.height, targetCanvas.height);\n    }\n  }\n  /**\n   * Initializes the context.\n   * @protected\n   * @param {WebGLRenderingContext} gl - WebGL context\n   */\n  initFromContext(gl) {\n    this.gl = gl;\n    this.webGLVersion = gl instanceof DOMAdapter.get().getWebGLRenderingContext() ? 1 : 2;\n    this.getExtensions();\n    this.validateContext(gl);\n    this._renderer.runners.contextChange.emit(gl);\n    const element = this._renderer.view.canvas;\n    element.addEventListener(\"webglcontextlost\", this.handleContextLost, false);\n    element.addEventListener(\"webglcontextrestored\", this.handleContextRestored, false);\n  }\n  /**\n   * Initialize from context options\n   * @protected\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext\n   * @param preferWebGLVersion\n   * @param {object} options - context attributes\n   */\n  createContext(preferWebGLVersion, options) {\n    let gl;\n    const canvas = this.canvas;\n    if (preferWebGLVersion === 2) {\n      gl = canvas.getContext(\"webgl2\", options);\n    }\n    if (!gl) {\n      gl = canvas.getContext(\"webgl\", options);\n      if (!gl) {\n        throw new Error(\"This browser does not support WebGL. Try using the canvas renderer\");\n      }\n    }\n    this.gl = gl;\n    this.initFromContext(this.gl);\n  }\n  /** Auto-populate the {@link GlContextSystem.extensions extensions}. */\n  getExtensions() {\n    const { gl } = this;\n    const common = {\n      anisotropicFiltering: gl.getExtension(\"EXT_texture_filter_anisotropic\"),\n      floatTextureLinear: gl.getExtension(\"OES_texture_float_linear\"),\n      s3tc: gl.getExtension(\"WEBGL_compressed_texture_s3tc\"),\n      s3tc_sRGB: gl.getExtension(\"WEBGL_compressed_texture_s3tc_srgb\"),\n      // eslint-disable-line camelcase\n      etc: gl.getExtension(\"WEBGL_compressed_texture_etc\"),\n      etc1: gl.getExtension(\"WEBGL_compressed_texture_etc1\"),\n      pvrtc: gl.getExtension(\"WEBGL_compressed_texture_pvrtc\") || gl.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\"),\n      atc: gl.getExtension(\"WEBGL_compressed_texture_atc\"),\n      astc: gl.getExtension(\"WEBGL_compressed_texture_astc\"),\n      bptc: gl.getExtension(\"EXT_texture_compression_bptc\"),\n      rgtc: gl.getExtension(\"EXT_texture_compression_rgtc\"),\n      loseContext: gl.getExtension(\"WEBGL_lose_context\")\n    };\n    if (this.webGLVersion === 1) {\n      this.extensions = {\n        ...common,\n        drawBuffers: gl.getExtension(\"WEBGL_draw_buffers\"),\n        depthTexture: gl.getExtension(\"WEBGL_depth_texture\"),\n        vertexArrayObject: gl.getExtension(\"OES_vertex_array_object\") || gl.getExtension(\"MOZ_OES_vertex_array_object\") || gl.getExtension(\"WEBKIT_OES_vertex_array_object\"),\n        uint32ElementIndex: gl.getExtension(\"OES_element_index_uint\"),\n        // Floats and half-floats\n        floatTexture: gl.getExtension(\"OES_texture_float\"),\n        floatTextureLinear: gl.getExtension(\"OES_texture_float_linear\"),\n        textureHalfFloat: gl.getExtension(\"OES_texture_half_float\"),\n        textureHalfFloatLinear: gl.getExtension(\"OES_texture_half_float_linear\"),\n        vertexAttribDivisorANGLE: gl.getExtension(\"ANGLE_instanced_arrays\"),\n        srgb: gl.getExtension(\"EXT_sRGB\")\n      };\n    } else {\n      this.extensions = {\n        ...common,\n        colorBufferFloat: gl.getExtension(\"EXT_color_buffer_float\")\n      };\n      const provokeExt = gl.getExtension(\"WEBGL_provoking_vertex\");\n      if (provokeExt) {\n        provokeExt.provokingVertexWEBGL(provokeExt.FIRST_VERTEX_CONVENTION_WEBGL);\n      }\n    }\n  }\n  /**\n   * Handles a lost webgl context\n   * @param {WebGLContextEvent} event - The context lost event.\n   */\n  handleContextLost(event) {\n    event.preventDefault();\n    if (this._contextLossForced) {\n      this._contextLossForced = false;\n      setTimeout(() => {\n        if (this.gl.isContextLost()) {\n          this.extensions.loseContext?.restoreContext();\n        }\n      }, 0);\n    }\n  }\n  /** Handles a restored webgl context. */\n  handleContextRestored() {\n    this._renderer.runners.contextChange.emit(this.gl);\n  }\n  destroy() {\n    const element = this._renderer.view.canvas;\n    this._renderer = null;\n    element.removeEventListener(\"webglcontextlost\", this.handleContextLost);\n    element.removeEventListener(\"webglcontextrestored\", this.handleContextRestored);\n    this.gl.useProgram(null);\n    this.extensions.loseContext?.loseContext();\n  }\n  /**\n   * this function can be called to force a webGL context loss\n   * this will release all resources on the GPU.\n   * Useful if you need to put Pixi to sleep, and save some GPU memory\n   *\n   * As soon as render is called - all resources will be created again.\n   */\n  forceContextLoss() {\n    this.extensions.loseContext?.loseContext();\n    this._contextLossForced = true;\n  }\n  /**\n   * Validate context.\n   * @param {WebGLRenderingContext} gl - Render context.\n   */\n  validateContext(gl) {\n    const attributes = gl.getContextAttributes();\n    if (attributes && !attributes.stencil) {\n      warn(\"Provided WebGL context does not have a stencil buffer, masks may not render correctly\");\n    }\n    const supports = this.supports;\n    const isWebGl2 = this.webGLVersion === 2;\n    const extensions = this.extensions;\n    supports.uint32Indices = isWebGl2 || !!extensions.uint32ElementIndex;\n    supports.uniformBufferObject = isWebGl2;\n    supports.vertexArrayObject = isWebGl2 || !!extensions.vertexArrayObject;\n    supports.srgbTextures = isWebGl2 || !!extensions.srgb;\n    supports.nonPowOf2wrapping = isWebGl2;\n    supports.nonPowOf2mipmaps = isWebGl2;\n    supports.msaa = isWebGl2;\n    if (!supports.uint32Indices) {\n      warn(\"Provided WebGL context does not support 32 index buffer, large scenes may not render correctly\");\n    }\n  }\n};\n/** @ignore */\n_GlContextSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"context\"\n};\n/** The default options for the system. */\n_GlContextSystem.defaultOptions = {\n  /**\n   * {@link WebGLOptions.context}\n   * @default null\n   */\n  context: null,\n  /**\n   * {@link WebGLOptions.premultipliedAlpha}\n   * @default true\n   */\n  premultipliedAlpha: true,\n  /**\n   * {@link WebGLOptions.preserveDrawingBuffer}\n   * @default false\n   */\n  preserveDrawingBuffer: false,\n  /**\n   * {@link WebGLOptions.powerPreference}\n   * @default default\n   */\n  powerPreference: void 0,\n  /**\n   * {@link WebGLOptions.webGLVersion}\n   * @default 2\n   */\n  preferWebGLVersion: 2,\n  /**\n   * {@link WebGLOptions.multiView}\n   * @default false\n   */\n  multiView: false\n};\nlet GlContextSystem = _GlContextSystem;\n\nexport { GlContextSystem };\n//# sourceMappingURL=GlContextSystem.mjs.map\n","\"use strict\";\nvar GL_FORMATS = /* @__PURE__ */ ((GL_FORMATS2) => {\n  GL_FORMATS2[GL_FORMATS2[\"RGBA\"] = 6408] = \"RGBA\";\n  GL_FORMATS2[GL_FORMATS2[\"RGB\"] = 6407] = \"RGB\";\n  GL_FORMATS2[GL_FORMATS2[\"RG\"] = 33319] = \"RG\";\n  GL_FORMATS2[GL_FORMATS2[\"RED\"] = 6403] = \"RED\";\n  GL_FORMATS2[GL_FORMATS2[\"RGBA_INTEGER\"] = 36249] = \"RGBA_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"RGB_INTEGER\"] = 36248] = \"RGB_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"RG_INTEGER\"] = 33320] = \"RG_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"RED_INTEGER\"] = 36244] = \"RED_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"ALPHA\"] = 6406] = \"ALPHA\";\n  GL_FORMATS2[GL_FORMATS2[\"LUMINANCE\"] = 6409] = \"LUMINANCE\";\n  GL_FORMATS2[GL_FORMATS2[\"LUMINANCE_ALPHA\"] = 6410] = \"LUMINANCE_ALPHA\";\n  GL_FORMATS2[GL_FORMATS2[\"DEPTH_COMPONENT\"] = 6402] = \"DEPTH_COMPONENT\";\n  GL_FORMATS2[GL_FORMATS2[\"DEPTH_STENCIL\"] = 34041] = \"DEPTH_STENCIL\";\n  return GL_FORMATS2;\n})(GL_FORMATS || {});\nvar GL_TARGETS = /* @__PURE__ */ ((GL_TARGETS2) => {\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_2D\"] = 3553] = \"TEXTURE_2D\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP\"] = 34067] = \"TEXTURE_CUBE_MAP\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_2D_ARRAY\"] = 35866] = \"TEXTURE_2D_ARRAY\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_POSITIVE_X\"] = 34069] = \"TEXTURE_CUBE_MAP_POSITIVE_X\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_NEGATIVE_X\"] = 34070] = \"TEXTURE_CUBE_MAP_NEGATIVE_X\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_POSITIVE_Y\"] = 34071] = \"TEXTURE_CUBE_MAP_POSITIVE_Y\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_NEGATIVE_Y\"] = 34072] = \"TEXTURE_CUBE_MAP_NEGATIVE_Y\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_POSITIVE_Z\"] = 34073] = \"TEXTURE_CUBE_MAP_POSITIVE_Z\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_NEGATIVE_Z\"] = 34074] = \"TEXTURE_CUBE_MAP_NEGATIVE_Z\";\n  return GL_TARGETS2;\n})(GL_TARGETS || {});\nvar GL_WRAP_MODES = /* @__PURE__ */ ((GL_WRAP_MODES2) => {\n  GL_WRAP_MODES2[GL_WRAP_MODES2[\"CLAMP\"] = 33071] = \"CLAMP\";\n  GL_WRAP_MODES2[GL_WRAP_MODES2[\"REPEAT\"] = 10497] = \"REPEAT\";\n  GL_WRAP_MODES2[GL_WRAP_MODES2[\"MIRRORED_REPEAT\"] = 33648] = \"MIRRORED_REPEAT\";\n  return GL_WRAP_MODES2;\n})(GL_WRAP_MODES || {});\nvar GL_TYPES = /* @__PURE__ */ ((GL_TYPES2) => {\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT_5_6_5\"] = 33635] = \"UNSIGNED_SHORT_5_6_5\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT_4_4_4_4\"] = 32819] = \"UNSIGNED_SHORT_4_4_4_4\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT_5_5_5_1\"] = 32820] = \"UNSIGNED_SHORT_5_5_5_1\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_10F_11F_11F_REV\"] = 35899] = \"UNSIGNED_INT_10F_11F_11F_REV\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_2_10_10_10_REV\"] = 33640] = \"UNSIGNED_INT_2_10_10_10_REV\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_24_8\"] = 34042] = \"UNSIGNED_INT_24_8\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_5_9_9_9_REV\"] = 35902] = \"UNSIGNED_INT_5_9_9_9_REV\";\n  GL_TYPES2[GL_TYPES2[\"BYTE\"] = 5120] = \"BYTE\";\n  GL_TYPES2[GL_TYPES2[\"SHORT\"] = 5122] = \"SHORT\";\n  GL_TYPES2[GL_TYPES2[\"INT\"] = 5124] = \"INT\";\n  GL_TYPES2[GL_TYPES2[\"FLOAT\"] = 5126] = \"FLOAT\";\n  GL_TYPES2[GL_TYPES2[\"FLOAT_32_UNSIGNED_INT_24_8_REV\"] = 36269] = \"FLOAT_32_UNSIGNED_INT_24_8_REV\";\n  GL_TYPES2[GL_TYPES2[\"HALF_FLOAT\"] = 36193] = \"HALF_FLOAT\";\n  return GL_TYPES2;\n})(GL_TYPES || {});\n\nexport { GL_FORMATS, GL_TARGETS, GL_TYPES, GL_WRAP_MODES };\n//# sourceMappingURL=const.mjs.map\n","import { GL_TYPES } from '../../texture/const.mjs';\n\n\"use strict\";\nconst infoMap = {\n  uint8x2: GL_TYPES.UNSIGNED_BYTE,\n  uint8x4: GL_TYPES.UNSIGNED_BYTE,\n  sint8x2: GL_TYPES.BYTE,\n  sint8x4: GL_TYPES.BYTE,\n  unorm8x2: GL_TYPES.UNSIGNED_BYTE,\n  unorm8x4: GL_TYPES.UNSIGNED_BYTE,\n  snorm8x2: GL_TYPES.BYTE,\n  snorm8x4: GL_TYPES.BYTE,\n  uint16x2: GL_TYPES.UNSIGNED_SHORT,\n  uint16x4: GL_TYPES.UNSIGNED_SHORT,\n  sint16x2: GL_TYPES.SHORT,\n  sint16x4: GL_TYPES.SHORT,\n  unorm16x2: GL_TYPES.UNSIGNED_SHORT,\n  unorm16x4: GL_TYPES.UNSIGNED_SHORT,\n  snorm16x2: GL_TYPES.SHORT,\n  snorm16x4: GL_TYPES.SHORT,\n  float16x2: GL_TYPES.HALF_FLOAT,\n  float16x4: GL_TYPES.HALF_FLOAT,\n  float32: GL_TYPES.FLOAT,\n  float32x2: GL_TYPES.FLOAT,\n  float32x3: GL_TYPES.FLOAT,\n  float32x4: GL_TYPES.FLOAT,\n  uint32: GL_TYPES.UNSIGNED_INT,\n  uint32x2: GL_TYPES.UNSIGNED_INT,\n  uint32x3: GL_TYPES.UNSIGNED_INT,\n  uint32x4: GL_TYPES.UNSIGNED_INT,\n  sint32: GL_TYPES.INT,\n  sint32x2: GL_TYPES.INT,\n  sint32x3: GL_TYPES.INT,\n  sint32x4: GL_TYPES.INT\n};\nfunction getGlTypeFromFormat(format) {\n  return infoMap[format] ?? infoMap.float32;\n}\n\nexport { getGlTypeFromFormat };\n//# sourceMappingURL=getGlTypeFromFormat.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { getAttributeInfoFromFormat } from '../../shared/geometry/utils/getAttributeInfoFromFormat.mjs';\nimport { ensureAttributes } from '../shader/program/ensureAttributes.mjs';\nimport { getGlTypeFromFormat } from './utils/getGlTypeFromFormat.mjs';\n\n\"use strict\";\nconst topologyToGlMap = {\n  \"point-list\": 0,\n  \"line-list\": 1,\n  \"line-strip\": 3,\n  \"triangle-list\": 4,\n  \"triangle-strip\": 5\n};\nclass GlGeometrySystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    this._geometryVaoHash = /* @__PURE__ */ Object.create(null);\n    this._renderer = renderer;\n    this._activeGeometry = null;\n    this._activeVao = null;\n    this.hasVao = true;\n    this.hasInstance = true;\n    this._renderer.renderableGC.addManagedHash(this, \"_geometryVaoHash\");\n  }\n  /** Sets up the renderer context and necessary buffers. */\n  contextChange() {\n    const gl = this.gl = this._renderer.gl;\n    if (!this._renderer.context.supports.vertexArrayObject) {\n      throw new Error(\"[PixiJS] Vertex Array Objects are not supported on this device\");\n    }\n    const nativeVaoExtension = this._renderer.context.extensions.vertexArrayObject;\n    if (nativeVaoExtension) {\n      gl.createVertexArray = () => nativeVaoExtension.createVertexArrayOES();\n      gl.bindVertexArray = (vao) => nativeVaoExtension.bindVertexArrayOES(vao);\n      gl.deleteVertexArray = (vao) => nativeVaoExtension.deleteVertexArrayOES(vao);\n    }\n    const nativeInstancedExtension = this._renderer.context.extensions.vertexAttribDivisorANGLE;\n    if (nativeInstancedExtension) {\n      gl.drawArraysInstanced = (a, b, c, d) => {\n        nativeInstancedExtension.drawArraysInstancedANGLE(a, b, c, d);\n      };\n      gl.drawElementsInstanced = (a, b, c, d, e) => {\n        nativeInstancedExtension.drawElementsInstancedANGLE(a, b, c, d, e);\n      };\n      gl.vertexAttribDivisor = (a, b) => nativeInstancedExtension.vertexAttribDivisorANGLE(a, b);\n    }\n    this._activeGeometry = null;\n    this._activeVao = null;\n    this._geometryVaoHash = /* @__PURE__ */ Object.create(null);\n  }\n  /**\n   * Binds geometry so that is can be drawn. Creating a Vao if required\n   * @param geometry - Instance of geometry to bind.\n   * @param program - Instance of program to use vao for.\n   */\n  bind(geometry, program) {\n    const gl = this.gl;\n    this._activeGeometry = geometry;\n    const vao = this.getVao(geometry, program);\n    if (this._activeVao !== vao) {\n      this._activeVao = vao;\n      gl.bindVertexArray(vao);\n    }\n    this.updateBuffers();\n  }\n  /** Reset and unbind any active VAO and geometry. */\n  reset() {\n    this.unbind();\n  }\n  /** Update buffers of the currently bound geometry. */\n  updateBuffers() {\n    const geometry = this._activeGeometry;\n    const bufferSystem = this._renderer.buffer;\n    for (let i = 0; i < geometry.buffers.length; i++) {\n      const buffer = geometry.buffers[i];\n      bufferSystem.updateBuffer(buffer);\n    }\n  }\n  /**\n   * Check compatibility between a geometry and a program\n   * @param geometry - Geometry instance.\n   * @param program - Program instance.\n   */\n  checkCompatibility(geometry, program) {\n    const geometryAttributes = geometry.attributes;\n    const shaderAttributes = program._attributeData;\n    for (const j in shaderAttributes) {\n      if (!geometryAttributes[j]) {\n        throw new Error(`shader and geometry incompatible, geometry missing the \"${j}\" attribute`);\n      }\n    }\n  }\n  /**\n   * Takes a geometry and program and generates a unique signature for them.\n   * @param geometry - To get signature from.\n   * @param program - To test geometry against.\n   * @returns - Unique signature of the geometry and program\n   */\n  getSignature(geometry, program) {\n    const attribs = geometry.attributes;\n    const shaderAttributes = program._attributeData;\n    const strings = [\"g\", geometry.uid];\n    for (const i in attribs) {\n      if (shaderAttributes[i]) {\n        strings.push(i, shaderAttributes[i].location);\n      }\n    }\n    return strings.join(\"-\");\n  }\n  getVao(geometry, program) {\n    return this._geometryVaoHash[geometry.uid]?.[program._key] || this.initGeometryVao(geometry, program);\n  }\n  /**\n   * Creates or gets Vao with the same structure as the geometry and stores it on the geometry.\n   * If vao is created, it is bound automatically. We use a shader to infer what and how to set up the\n   * attribute locations.\n   * @param geometry - Instance of geometry to to generate Vao for.\n   * @param program\n   * @param _incRefCount - Increment refCount of all geometry buffers.\n   */\n  initGeometryVao(geometry, program, _incRefCount = true) {\n    const gl = this._renderer.gl;\n    const bufferSystem = this._renderer.buffer;\n    this._renderer.shader._getProgramData(program);\n    this.checkCompatibility(geometry, program);\n    const signature = this.getSignature(geometry, program);\n    if (!this._geometryVaoHash[geometry.uid]) {\n      this._geometryVaoHash[geometry.uid] = /* @__PURE__ */ Object.create(null);\n      geometry.on(\"destroy\", this.onGeometryDestroy, this);\n    }\n    const vaoObjectHash = this._geometryVaoHash[geometry.uid];\n    let vao = vaoObjectHash[signature];\n    if (vao) {\n      vaoObjectHash[program._key] = vao;\n      return vao;\n    }\n    ensureAttributes(geometry, program._attributeData);\n    const buffers = geometry.buffers;\n    vao = gl.createVertexArray();\n    gl.bindVertexArray(vao);\n    for (let i = 0; i < buffers.length; i++) {\n      const buffer = buffers[i];\n      bufferSystem.bind(buffer);\n    }\n    this.activateVao(geometry, program);\n    vaoObjectHash[program._key] = vao;\n    vaoObjectHash[signature] = vao;\n    gl.bindVertexArray(null);\n    return vao;\n  }\n  /**\n   * Disposes geometry.\n   * @param geometry - Geometry with buffers. Only VAO will be disposed\n   * @param [contextLost=false] - If context was lost, we suppress deleteVertexArray\n   */\n  onGeometryDestroy(geometry, contextLost) {\n    const vaoObjectHash = this._geometryVaoHash[geometry.uid];\n    const gl = this.gl;\n    if (vaoObjectHash) {\n      if (contextLost) {\n        for (const i in vaoObjectHash) {\n          if (this._activeVao !== vaoObjectHash[i]) {\n            this.unbind();\n          }\n          gl.deleteVertexArray(vaoObjectHash[i]);\n        }\n      }\n      this._geometryVaoHash[geometry.uid] = null;\n    }\n  }\n  /**\n   * Dispose all WebGL resources of all managed geometries.\n   * @param [contextLost=false] - If context was lost, we suppress `gl.delete` calls\n   */\n  destroyAll(contextLost = false) {\n    const gl = this.gl;\n    for (const i in this._geometryVaoHash) {\n      if (contextLost) {\n        for (const j in this._geometryVaoHash[i]) {\n          const vaoObjectHash = this._geometryVaoHash[i];\n          if (this._activeVao !== vaoObjectHash) {\n            this.unbind();\n          }\n          gl.deleteVertexArray(vaoObjectHash[j]);\n        }\n      }\n      this._geometryVaoHash[i] = null;\n    }\n  }\n  /**\n   * Activate vertex array object.\n   * @param geometry - Geometry instance.\n   * @param program - Shader program instance.\n   */\n  activateVao(geometry, program) {\n    const gl = this._renderer.gl;\n    const bufferSystem = this._renderer.buffer;\n    const attributes = geometry.attributes;\n    if (geometry.indexBuffer) {\n      bufferSystem.bind(geometry.indexBuffer);\n    }\n    let lastBuffer = null;\n    for (const j in attributes) {\n      const attribute = attributes[j];\n      const buffer = attribute.buffer;\n      const glBuffer = bufferSystem.getGlBuffer(buffer);\n      const programAttrib = program._attributeData[j];\n      if (programAttrib) {\n        if (lastBuffer !== glBuffer) {\n          bufferSystem.bind(buffer);\n          lastBuffer = glBuffer;\n        }\n        const location = programAttrib.location;\n        gl.enableVertexAttribArray(location);\n        const attributeInfo = getAttributeInfoFromFormat(attribute.format);\n        const type = getGlTypeFromFormat(attribute.format);\n        if (programAttrib.format?.substring(1, 4) === \"int\") {\n          gl.vertexAttribIPointer(\n            location,\n            attributeInfo.size,\n            type,\n            attribute.stride,\n            attribute.offset\n          );\n        } else {\n          gl.vertexAttribPointer(\n            location,\n            attributeInfo.size,\n            type,\n            attributeInfo.normalised,\n            attribute.stride,\n            attribute.offset\n          );\n        }\n        if (attribute.instance) {\n          if (this.hasInstance) {\n            const divisor = attribute.divisor ?? 1;\n            gl.vertexAttribDivisor(location, divisor);\n          } else {\n            throw new Error(\"geometry error, GPU Instancing is not supported on this device\");\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Draws the currently bound geometry.\n   * @param topology - The type primitive to render.\n   * @param size - The number of elements to be rendered. If not specified, all vertices after the\n   *  starting vertex will be drawn.\n   * @param start - The starting vertex in the geometry to start drawing from. If not specified,\n   *  drawing will start from the first vertex.\n   * @param instanceCount - The number of instances of the set of elements to execute. If not specified,\n   *  all instances will be drawn.\n   */\n  draw(topology, size, start, instanceCount) {\n    const { gl } = this._renderer;\n    const geometry = this._activeGeometry;\n    const glTopology = topologyToGlMap[topology || geometry.topology];\n    instanceCount ?? (instanceCount = geometry.instanceCount);\n    if (geometry.indexBuffer) {\n      const byteSize = geometry.indexBuffer.data.BYTES_PER_ELEMENT;\n      const glType = byteSize === 2 ? gl.UNSIGNED_SHORT : gl.UNSIGNED_INT;\n      if (instanceCount > 1) {\n        gl.drawElementsInstanced(glTopology, size || geometry.indexBuffer.data.length, glType, (start || 0) * byteSize, instanceCount);\n      } else {\n        gl.drawElements(glTopology, size || geometry.indexBuffer.data.length, glType, (start || 0) * byteSize);\n      }\n    } else if (instanceCount > 1) {\n      gl.drawArraysInstanced(glTopology, start || 0, size || geometry.getSize(), instanceCount);\n    } else {\n      gl.drawArrays(glTopology, start || 0, size || geometry.getSize());\n    }\n    return this;\n  }\n  /** Unbind/reset everything. */\n  unbind() {\n    this.gl.bindVertexArray(null);\n    this._activeVao = null;\n    this._activeGeometry = null;\n  }\n  destroy() {\n    this._renderer = null;\n    this.gl = null;\n    this._activeVao = null;\n    this._activeGeometry = null;\n  }\n}\n/** @ignore */\nGlGeometrySystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"geometry\"\n};\n\nexport { GlGeometrySystem };\n//# sourceMappingURL=GlGeometrySystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { warn } from '../../../utils/logging/warn.mjs';\nimport { Geometry } from '../shared/geometry/Geometry.mjs';\nimport { Shader } from '../shared/shader/Shader.mjs';\nimport { State } from '../shared/state/State.mjs';\nimport { TextureSource } from '../shared/texture/sources/TextureSource.mjs';\nimport { Texture } from '../shared/texture/Texture.mjs';\nimport { GlProgram } from './shader/GlProgram.mjs';\n\n\"use strict\";\nconst bigTriangleGeometry = new Geometry({\n  attributes: {\n    aPosition: [\n      -1,\n      -1,\n      // Bottom left corner\n      3,\n      -1,\n      // Bottom right corner, extending beyond right edge\n      -1,\n      3\n      // Top left corner, extending beyond top edge\n    ]\n  }\n});\nconst _GlBackBufferSystem = class _GlBackBufferSystem {\n  constructor(renderer) {\n    /** if true, the back buffer is used */\n    this.useBackBuffer = false;\n    this._useBackBufferThisRender = false;\n    this._renderer = renderer;\n  }\n  init(options = {}) {\n    const { useBackBuffer, antialias } = { ..._GlBackBufferSystem.defaultOptions, ...options };\n    this.useBackBuffer = useBackBuffer;\n    this._antialias = antialias;\n    if (!this._renderer.context.supports.msaa) {\n      warn(\"antialiasing, is not supported on when using the back buffer\");\n      this._antialias = false;\n    }\n    this._state = State.for2d();\n    const bigTriangleProgram = new GlProgram({\n      vertex: `\n                attribute vec2 aPosition;\n                out vec2 vUv;\n\n                void main() {\n                    gl_Position = vec4(aPosition, 0.0, 1.0);\n\n                    vUv = (aPosition + 1.0) / 2.0;\n\n                    // flip dem UVs\n                    vUv.y = 1.0 - vUv.y;\n                }`,\n      fragment: `\n                in vec2 vUv;\n                out vec4 finalColor;\n\n                uniform sampler2D uTexture;\n\n                void main() {\n                    finalColor = texture(uTexture, vUv);\n                }`,\n      name: \"big-triangle\"\n    });\n    this._bigTriangleShader = new Shader({\n      glProgram: bigTriangleProgram,\n      resources: {\n        uTexture: Texture.WHITE.source\n      }\n    });\n  }\n  /**\n   * This is called before the RenderTargetSystem is started. This is where\n   * we replace the target with the back buffer if required.\n   * @param options - The options for this render.\n   */\n  renderStart(options) {\n    const renderTarget = this._renderer.renderTarget.getRenderTarget(options.target);\n    this._useBackBufferThisRender = this.useBackBuffer && !!renderTarget.isRoot;\n    if (this._useBackBufferThisRender) {\n      const renderTarget2 = this._renderer.renderTarget.getRenderTarget(options.target);\n      this._targetTexture = renderTarget2.colorTexture;\n      options.target = this._getBackBufferTexture(renderTarget2.colorTexture);\n    }\n  }\n  renderEnd() {\n    this._presentBackBuffer();\n  }\n  _presentBackBuffer() {\n    const renderer = this._renderer;\n    renderer.renderTarget.finishRenderPass();\n    if (!this._useBackBufferThisRender)\n      return;\n    renderer.renderTarget.bind(this._targetTexture, false);\n    this._bigTriangleShader.resources.uTexture = this._backBufferTexture.source;\n    renderer.encoder.draw({\n      geometry: bigTriangleGeometry,\n      shader: this._bigTriangleShader,\n      state: this._state\n    });\n  }\n  _getBackBufferTexture(targetSourceTexture) {\n    this._backBufferTexture = this._backBufferTexture || new Texture({\n      source: new TextureSource({\n        width: targetSourceTexture.width,\n        height: targetSourceTexture.height,\n        resolution: targetSourceTexture._resolution,\n        antialias: this._antialias\n      })\n    });\n    this._backBufferTexture.source.resize(\n      targetSourceTexture.width,\n      targetSourceTexture.height,\n      targetSourceTexture._resolution\n    );\n    return this._backBufferTexture;\n  }\n  /** destroys the back buffer */\n  destroy() {\n    if (this._backBufferTexture) {\n      this._backBufferTexture.destroy();\n      this._backBufferTexture = null;\n    }\n  }\n};\n/** @ignore */\n_GlBackBufferSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"backBuffer\",\n  priority: 1\n};\n/** default options for the back buffer system */\n_GlBackBufferSystem.defaultOptions = {\n  /** if true will use the back buffer where required */\n  useBackBuffer: false\n};\nlet GlBackBufferSystem = _GlBackBufferSystem;\n\nexport { GlBackBufferSystem };\n//# sourceMappingURL=GlBackBufferSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\n\n\"use strict\";\nclass GlColorMaskSystem {\n  constructor(renderer) {\n    this._colorMaskCache = 15;\n    this._renderer = renderer;\n  }\n  setMask(colorMask) {\n    if (this._colorMaskCache === colorMask)\n      return;\n    this._colorMaskCache = colorMask;\n    this._renderer.gl.colorMask(\n      !!(colorMask & 8),\n      !!(colorMask & 4),\n      !!(colorMask & 2),\n      !!(colorMask & 1)\n    );\n  }\n}\n/** @ignore */\nGlColorMaskSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"colorMask\"\n};\n\nexport { GlColorMaskSystem };\n//# sourceMappingURL=GlColorMaskSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\n\n\"use strict\";\nclass GlEncoderSystem {\n  constructor(renderer) {\n    this.commandFinished = Promise.resolve();\n    this._renderer = renderer;\n  }\n  setGeometry(geometry, shader) {\n    this._renderer.geometry.bind(geometry, shader.glProgram);\n  }\n  finishRenderPass() {\n  }\n  draw(options) {\n    const renderer = this._renderer;\n    const { geometry, shader, state, skipSync, topology: type, size, start, instanceCount } = options;\n    renderer.shader.bind(shader, skipSync);\n    renderer.geometry.bind(geometry, renderer.shader._activeProgram);\n    if (state) {\n      renderer.state.set(state);\n    }\n    renderer.geometry.draw(type, size, start, instanceCount ?? geometry.instanceCount);\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\n/** @ignore */\nGlEncoderSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"encoder\"\n};\n\nexport { GlEncoderSystem };\n//# sourceMappingURL=GlEncoderSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { GpuStencilModesToPixi } from '../gpu/state/GpuStencilModesToPixi.mjs';\nimport { STENCIL_MODES } from '../shared/state/const.mjs';\n\n\"use strict\";\nclass GlStencilSystem {\n  constructor(renderer) {\n    this._stencilCache = {\n      enabled: false,\n      stencilReference: 0,\n      stencilMode: STENCIL_MODES.NONE\n    };\n    this._renderTargetStencilState = /* @__PURE__ */ Object.create(null);\n    renderer.renderTarget.onRenderTargetChange.add(this);\n  }\n  contextChange(gl) {\n    this._gl = gl;\n    this._comparisonFuncMapping = {\n      always: gl.ALWAYS,\n      never: gl.NEVER,\n      equal: gl.EQUAL,\n      \"not-equal\": gl.NOTEQUAL,\n      less: gl.LESS,\n      \"less-equal\": gl.LEQUAL,\n      greater: gl.GREATER,\n      \"greater-equal\": gl.GEQUAL\n    };\n    this._stencilOpsMapping = {\n      keep: gl.KEEP,\n      zero: gl.ZERO,\n      replace: gl.REPLACE,\n      invert: gl.INVERT,\n      \"increment-clamp\": gl.INCR,\n      \"decrement-clamp\": gl.DECR,\n      \"increment-wrap\": gl.INCR_WRAP,\n      \"decrement-wrap\": gl.DECR_WRAP\n    };\n    this._stencilCache.enabled = false;\n    this._stencilCache.stencilMode = STENCIL_MODES.NONE;\n    this._stencilCache.stencilReference = 0;\n  }\n  onRenderTargetChange(renderTarget) {\n    if (this._activeRenderTarget === renderTarget)\n      return;\n    this._activeRenderTarget = renderTarget;\n    let stencilState = this._renderTargetStencilState[renderTarget.uid];\n    if (!stencilState) {\n      stencilState = this._renderTargetStencilState[renderTarget.uid] = {\n        stencilMode: STENCIL_MODES.DISABLED,\n        stencilReference: 0\n      };\n    }\n    this.setStencilMode(stencilState.stencilMode, stencilState.stencilReference);\n  }\n  setStencilMode(stencilMode, stencilReference) {\n    const stencilState = this._renderTargetStencilState[this._activeRenderTarget.uid];\n    const gl = this._gl;\n    const mode = GpuStencilModesToPixi[stencilMode];\n    const _stencilCache = this._stencilCache;\n    stencilState.stencilMode = stencilMode;\n    stencilState.stencilReference = stencilReference;\n    if (stencilMode === STENCIL_MODES.DISABLED) {\n      if (this._stencilCache.enabled) {\n        this._stencilCache.enabled = false;\n        gl.disable(gl.STENCIL_TEST);\n      }\n      return;\n    }\n    if (!this._stencilCache.enabled) {\n      this._stencilCache.enabled = true;\n      gl.enable(gl.STENCIL_TEST);\n    }\n    if (stencilMode !== _stencilCache.stencilMode || _stencilCache.stencilReference !== stencilReference) {\n      _stencilCache.stencilMode = stencilMode;\n      _stencilCache.stencilReference = stencilReference;\n      gl.stencilFunc(this._comparisonFuncMapping[mode.stencilBack.compare], stencilReference, 255);\n      gl.stencilOp(gl.KEEP, gl.KEEP, this._stencilOpsMapping[mode.stencilBack.passOp]);\n    }\n  }\n}\n/** @ignore */\nGlStencilSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"stencil\"\n};\n\nexport { GlStencilSystem };\n//# sourceMappingURL=GlStencilSystem.mjs.map\n","\"use strict\";\nconst WGSL_TO_STD40_SIZE = {\n  f32: 4,\n  i32: 4,\n  \"vec2<f32>\": 8,\n  \"vec3<f32>\": 12,\n  \"vec4<f32>\": 16,\n  \"vec2<i32>\": 8,\n  \"vec3<i32>\": 12,\n  \"vec4<i32>\": 16,\n  \"mat2x2<f32>\": 16 * 2,\n  \"mat3x3<f32>\": 16 * 3,\n  \"mat4x4<f32>\": 16 * 4\n  // TODO - not essential for now but support these in the future\n  // int:      4,\n  // ivec2:    8,\n  // ivec3:    12,\n  // ivec4:    16,\n  // uint:     4,\n  // uvec2:    8,\n  // uvec3:    12,\n  // uvec4:    16,\n  // bool:     4,\n  // bvec2:    8,\n  // bvec3:    12,\n  // bvec4:    16,\n  // mat2:     16 * 2,\n  // mat3:     16 * 3,\n  // mat4:     16 * 4,\n};\nfunction createUboElementsSTD40(uniformData) {\n  const uboElements = uniformData.map((data) => ({\n    data,\n    offset: 0,\n    size: 0\n  }));\n  const chunkSize = 16;\n  let size = 0;\n  let offset = 0;\n  for (let i = 0; i < uboElements.length; i++) {\n    const uboElement = uboElements[i];\n    size = WGSL_TO_STD40_SIZE[uboElement.data.type];\n    if (!size) {\n      throw new Error(`Unknown type ${uboElement.data.type}`);\n    }\n    if (uboElement.data.size > 1) {\n      size = Math.max(size, chunkSize) * uboElement.data.size;\n    }\n    const boundary = size === 12 ? 16 : size;\n    uboElement.size = size;\n    const curOffset = offset % chunkSize;\n    if (curOffset > 0 && chunkSize - curOffset < boundary) {\n      offset += (chunkSize - curOffset) % 16;\n    } else {\n      offset += (size - curOffset % size) % size;\n    }\n    uboElement.offset = offset;\n    offset += size;\n  }\n  offset = Math.ceil(offset / 16) * 16;\n  return { uboElements, size: offset };\n}\n\nexport { WGSL_TO_STD40_SIZE, createUboElementsSTD40 };\n//# sourceMappingURL=createUboElementsSTD40.mjs.map\n","import { WGSL_TO_STD40_SIZE } from './createUboElementsSTD40.mjs';\n\n\"use strict\";\nfunction generateArraySyncSTD40(uboElement, offsetToAdd) {\n  const rowSize = Math.max(WGSL_TO_STD40_SIZE[uboElement.data.type] / 16, 1);\n  const elementSize = uboElement.data.value.length / uboElement.data.size;\n  const remainder = (4 - elementSize % 4) % 4;\n  const data = uboElement.data.type.indexOf(\"i32\") >= 0 ? \"dataInt32\" : \"data\";\n  return `\n        v = uv.${uboElement.data.name};\n        offset += ${offsetToAdd};\n\n        arrayOffset = offset;\n\n        t = 0;\n\n        for(var i=0; i < ${uboElement.data.size * rowSize}; i++)\n        {\n            for(var j = 0; j < ${elementSize}; j++)\n            {\n                ${data}[arrayOffset++] = v[t++];\n            }\n            ${remainder !== 0 ? `arrayOffset += ${remainder};` : \"\"}\n        }\n    `;\n}\n\nexport { generateArraySyncSTD40 };\n//# sourceMappingURL=generateArraySyncSTD40.mjs.map\n","import { createUboSyncFunction } from '../../../shared/shader/utils/createUboSyncFunction.mjs';\nimport { uboSyncFunctionsSTD40 } from '../../../shared/shader/utils/uboSyncFunctions.mjs';\nimport { generateArraySyncSTD40 } from './generateArraySyncSTD40.mjs';\n\n\"use strict\";\nfunction createUboSyncFunctionSTD40(uboElements) {\n  return createUboSyncFunction(\n    uboElements,\n    \"uboStd40\",\n    generateArraySyncSTD40,\n    uboSyncFunctionsSTD40\n  );\n}\n\nexport { createUboSyncFunctionSTD40 };\n//# sourceMappingURL=createUboSyncSTD40.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { UboSystem } from '../shared/shader/UboSystem.mjs';\nimport { createUboElementsSTD40 } from './shader/utils/createUboElementsSTD40.mjs';\nimport { createUboSyncFunctionSTD40 } from './shader/utils/createUboSyncSTD40.mjs';\n\n\"use strict\";\nclass GlUboSystem extends UboSystem {\n  constructor() {\n    super({\n      createUboElements: createUboElementsSTD40,\n      generateUboSync: createUboSyncFunctionSTD40\n    });\n  }\n}\n/** @ignore */\nGlUboSystem.extension = {\n  type: [ExtensionType.WebGLSystem],\n  name: \"ubo\"\n};\n\nexport { GlUboSystem };\n//# sourceMappingURL=GlUboSystem.mjs.map\n","\"use strict\";\nclass GlRenderTarget {\n  constructor() {\n    this.width = -1;\n    this.height = -1;\n    this.msaa = false;\n    this.msaaRenderBuffer = [];\n  }\n}\n\nexport { GlRenderTarget };\n//# sourceMappingURL=GlRenderTarget.mjs.map\n","import { Rectangle } from '../../../../maths/shapes/Rectangle.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\nimport { CanvasSource } from '../../shared/texture/sources/CanvasSource.mjs';\nimport { CLEAR } from '../const.mjs';\nimport { GlRenderTarget } from '../GlRenderTarget.mjs';\n\n\"use strict\";\nclass GlRenderTargetAdaptor {\n  constructor() {\n    this._clearColorCache = [0, 0, 0, 0];\n    this._viewPortCache = new Rectangle();\n  }\n  init(renderer, renderTargetSystem) {\n    this._renderer = renderer;\n    this._renderTargetSystem = renderTargetSystem;\n    renderer.runners.contextChange.add(this);\n  }\n  contextChange() {\n    this._clearColorCache = [0, 0, 0, 0];\n    this._viewPortCache = new Rectangle();\n  }\n  copyToTexture(sourceRenderSurfaceTexture, destinationTexture, originSrc, size, originDest) {\n    const renderTargetSystem = this._renderTargetSystem;\n    const renderer = this._renderer;\n    const glRenderTarget = renderTargetSystem.getGpuRenderTarget(sourceRenderSurfaceTexture);\n    const gl = renderer.gl;\n    this.finishRenderPass(sourceRenderSurfaceTexture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenderTarget.resolveTargetFramebuffer);\n    renderer.texture.bind(destinationTexture, 0);\n    gl.copyTexSubImage2D(\n      gl.TEXTURE_2D,\n      0,\n      originDest.x,\n      originDest.y,\n      originSrc.x,\n      originSrc.y,\n      size.width,\n      size.height\n    );\n    return destinationTexture;\n  }\n  startRenderPass(renderTarget, clear = true, clearColor, viewport) {\n    const renderTargetSystem = this._renderTargetSystem;\n    const source = renderTarget.colorTexture;\n    const gpuRenderTarget = renderTargetSystem.getGpuRenderTarget(renderTarget);\n    let viewPortY = viewport.y;\n    if (renderTarget.isRoot) {\n      viewPortY = source.pixelHeight - viewport.height;\n    }\n    renderTarget.colorTextures.forEach((texture) => {\n      this._renderer.texture.unbind(texture);\n    });\n    const gl = this._renderer.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, gpuRenderTarget.framebuffer);\n    const viewPortCache = this._viewPortCache;\n    if (viewPortCache.x !== viewport.x || viewPortCache.y !== viewPortY || viewPortCache.width !== viewport.width || viewPortCache.height !== viewport.height) {\n      viewPortCache.x = viewport.x;\n      viewPortCache.y = viewPortY;\n      viewPortCache.width = viewport.width;\n      viewPortCache.height = viewport.height;\n      gl.viewport(\n        viewport.x,\n        viewPortY,\n        viewport.width,\n        viewport.height\n      );\n    }\n    if (!gpuRenderTarget.depthStencilRenderBuffer && (renderTarget.stencil || renderTarget.depth)) {\n      this._initStencil(gpuRenderTarget);\n    }\n    this.clear(renderTarget, clear, clearColor);\n  }\n  finishRenderPass(renderTarget) {\n    const renderTargetSystem = this._renderTargetSystem;\n    const glRenderTarget = renderTargetSystem.getGpuRenderTarget(renderTarget);\n    if (!glRenderTarget.msaa)\n      return;\n    const gl = this._renderer.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenderTarget.resolveTargetFramebuffer);\n    gl.bindFramebuffer(gl.READ_FRAMEBUFFER, glRenderTarget.framebuffer);\n    gl.blitFramebuffer(\n      0,\n      0,\n      glRenderTarget.width,\n      glRenderTarget.height,\n      0,\n      0,\n      glRenderTarget.width,\n      glRenderTarget.height,\n      gl.COLOR_BUFFER_BIT,\n      gl.NEAREST\n    );\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenderTarget.framebuffer);\n  }\n  initGpuRenderTarget(renderTarget) {\n    const renderer = this._renderer;\n    const gl = renderer.gl;\n    const glRenderTarget = new GlRenderTarget();\n    const colorTexture = renderTarget.colorTexture;\n    if (colorTexture.resource === renderer.canvas) {\n      this._renderer.context.ensureCanvasSize(renderTarget.colorTexture.resource);\n      glRenderTarget.framebuffer = null;\n      return glRenderTarget;\n    }\n    this._initColor(renderTarget, glRenderTarget);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    return glRenderTarget;\n  }\n  destroyGpuRenderTarget(gpuRenderTarget) {\n    const gl = this._renderer.gl;\n    if (gpuRenderTarget.framebuffer) {\n      gl.deleteFramebuffer(gpuRenderTarget.framebuffer);\n      gpuRenderTarget.framebuffer = null;\n    }\n    if (gpuRenderTarget.resolveTargetFramebuffer) {\n      gl.deleteFramebuffer(gpuRenderTarget.resolveTargetFramebuffer);\n      gpuRenderTarget.resolveTargetFramebuffer = null;\n    }\n    if (gpuRenderTarget.depthStencilRenderBuffer) {\n      gl.deleteRenderbuffer(gpuRenderTarget.depthStencilRenderBuffer);\n      gpuRenderTarget.depthStencilRenderBuffer = null;\n    }\n    gpuRenderTarget.msaaRenderBuffer.forEach((renderBuffer) => {\n      gl.deleteRenderbuffer(renderBuffer);\n    });\n    gpuRenderTarget.msaaRenderBuffer = null;\n  }\n  clear(_renderTarget, clear, clearColor) {\n    if (!clear)\n      return;\n    const renderTargetSystem = this._renderTargetSystem;\n    if (typeof clear === \"boolean\") {\n      clear = clear ? CLEAR.ALL : CLEAR.NONE;\n    }\n    const gl = this._renderer.gl;\n    if (clear & CLEAR.COLOR) {\n      clearColor ?? (clearColor = renderTargetSystem.defaultClearColor);\n      const clearColorCache = this._clearColorCache;\n      const clearColorArray = clearColor;\n      if (clearColorCache[0] !== clearColorArray[0] || clearColorCache[1] !== clearColorArray[1] || clearColorCache[2] !== clearColorArray[2] || clearColorCache[3] !== clearColorArray[3]) {\n        clearColorCache[0] = clearColorArray[0];\n        clearColorCache[1] = clearColorArray[1];\n        clearColorCache[2] = clearColorArray[2];\n        clearColorCache[3] = clearColorArray[3];\n        gl.clearColor(clearColorArray[0], clearColorArray[1], clearColorArray[2], clearColorArray[3]);\n      }\n    }\n    gl.clear(clear);\n  }\n  resizeGpuRenderTarget(renderTarget) {\n    if (renderTarget.isRoot)\n      return;\n    const renderTargetSystem = this._renderTargetSystem;\n    const glRenderTarget = renderTargetSystem.getGpuRenderTarget(renderTarget);\n    this._resizeColor(renderTarget, glRenderTarget);\n    if (renderTarget.stencil || renderTarget.depth) {\n      this._resizeStencil(glRenderTarget);\n    }\n  }\n  _initColor(renderTarget, glRenderTarget) {\n    const renderer = this._renderer;\n    const gl = renderer.gl;\n    const resolveTargetFramebuffer = gl.createFramebuffer();\n    glRenderTarget.resolveTargetFramebuffer = resolveTargetFramebuffer;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, resolveTargetFramebuffer);\n    glRenderTarget.width = renderTarget.colorTexture.source.pixelWidth;\n    glRenderTarget.height = renderTarget.colorTexture.source.pixelHeight;\n    renderTarget.colorTextures.forEach((colorTexture, i) => {\n      const source = colorTexture.source;\n      if (source.antialias) {\n        if (renderer.context.supports.msaa) {\n          glRenderTarget.msaa = true;\n        } else {\n          warn(\"[RenderTexture] Antialiasing on textures is not supported in WebGL1\");\n        }\n      }\n      renderer.texture.bindSource(source, 0);\n      const glSource = renderer.texture.getGlSource(source);\n      const glTexture = glSource.texture;\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0 + i,\n        3553,\n        // texture.target,\n        glTexture,\n        0\n      );\n    });\n    if (glRenderTarget.msaa) {\n      const viewFramebuffer = gl.createFramebuffer();\n      glRenderTarget.framebuffer = viewFramebuffer;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, viewFramebuffer);\n      renderTarget.colorTextures.forEach((_, i) => {\n        const msaaRenderBuffer = gl.createRenderbuffer();\n        glRenderTarget.msaaRenderBuffer[i] = msaaRenderBuffer;\n      });\n    } else {\n      glRenderTarget.framebuffer = resolveTargetFramebuffer;\n    }\n    this._resizeColor(renderTarget, glRenderTarget);\n  }\n  _resizeColor(renderTarget, glRenderTarget) {\n    const source = renderTarget.colorTexture.source;\n    glRenderTarget.width = source.pixelWidth;\n    glRenderTarget.height = source.pixelHeight;\n    renderTarget.colorTextures.forEach((colorTexture, i) => {\n      if (i === 0)\n        return;\n      colorTexture.source.resize(source.width, source.height, source._resolution);\n    });\n    if (glRenderTarget.msaa) {\n      const renderer = this._renderer;\n      const gl = renderer.gl;\n      const viewFramebuffer = glRenderTarget.framebuffer;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, viewFramebuffer);\n      renderTarget.colorTextures.forEach((colorTexture, i) => {\n        const source2 = colorTexture.source;\n        renderer.texture.bindSource(source2, 0);\n        const glSource = renderer.texture.getGlSource(source2);\n        const glInternalFormat = glSource.internalFormat;\n        const msaaRenderBuffer = glRenderTarget.msaaRenderBuffer[i];\n        gl.bindRenderbuffer(\n          gl.RENDERBUFFER,\n          msaaRenderBuffer\n        );\n        gl.renderbufferStorageMultisample(\n          gl.RENDERBUFFER,\n          4,\n          glInternalFormat,\n          source2.pixelWidth,\n          source2.pixelHeight\n        );\n        gl.framebufferRenderbuffer(\n          gl.FRAMEBUFFER,\n          gl.COLOR_ATTACHMENT0 + i,\n          gl.RENDERBUFFER,\n          msaaRenderBuffer\n        );\n      });\n    }\n  }\n  _initStencil(glRenderTarget) {\n    if (glRenderTarget.framebuffer === null)\n      return;\n    const gl = this._renderer.gl;\n    const depthStencilRenderBuffer = gl.createRenderbuffer();\n    glRenderTarget.depthStencilRenderBuffer = depthStencilRenderBuffer;\n    gl.bindRenderbuffer(\n      gl.RENDERBUFFER,\n      depthStencilRenderBuffer\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_STENCIL_ATTACHMENT,\n      gl.RENDERBUFFER,\n      depthStencilRenderBuffer\n    );\n    this._resizeStencil(glRenderTarget);\n  }\n  _resizeStencil(glRenderTarget) {\n    const gl = this._renderer.gl;\n    gl.bindRenderbuffer(\n      gl.RENDERBUFFER,\n      glRenderTarget.depthStencilRenderBuffer\n    );\n    if (glRenderTarget.msaa) {\n      gl.renderbufferStorageMultisample(\n        gl.RENDERBUFFER,\n        4,\n        gl.DEPTH24_STENCIL8,\n        glRenderTarget.width,\n        glRenderTarget.height\n      );\n    } else {\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        this._renderer.context.webGLVersion === 2 ? gl.DEPTH24_STENCIL8 : gl.DEPTH_STENCIL,\n        glRenderTarget.width,\n        glRenderTarget.height\n      );\n    }\n  }\n  prerender(renderTarget) {\n    const resource = renderTarget.colorTexture.resource;\n    if (this._renderer.context.multiView && CanvasSource.test(resource)) {\n      this._renderer.context.ensureCanvasSize(resource);\n    }\n  }\n  postrender(renderTarget) {\n    if (!this._renderer.context.multiView)\n      return;\n    if (CanvasSource.test(renderTarget.colorTexture.resource)) {\n      const contextCanvas = this._renderer.context.canvas;\n      const canvasSource = renderTarget.colorTexture;\n      canvasSource.context2D.drawImage(\n        contextCanvas,\n        0,\n        canvasSource.pixelHeight - contextCanvas.height\n      );\n    }\n  }\n}\n\nexport { GlRenderTargetAdaptor };\n//# sourceMappingURL=GlRenderTargetAdaptor.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { RenderTargetSystem } from '../../shared/renderTarget/RenderTargetSystem.mjs';\nimport { GlRenderTargetAdaptor } from './GlRenderTargetAdaptor.mjs';\n\n\"use strict\";\nclass GlRenderTargetSystem extends RenderTargetSystem {\n  constructor(renderer) {\n    super(renderer);\n    this.adaptor = new GlRenderTargetAdaptor();\n    this.adaptor.init(renderer, this);\n  }\n}\n/** @ignore */\nGlRenderTargetSystem.extension = {\n  type: [ExtensionType.WebGLSystem],\n  name: \"renderTarget\"\n};\n\nexport { GlRenderTargetSystem };\n//# sourceMappingURL=GlRenderTargetSystem.mjs.map\n","\"use strict\";\nclass IGLUniformData {\n}\nclass GlProgramData {\n  /**\n   * Makes a new Pixi program.\n   * @param program - webgl program\n   * @param uniformData - uniforms\n   */\n  constructor(program, uniformData) {\n    this.program = program;\n    this.uniformData = uniformData;\n    this.uniformGroups = {};\n    this.uniformDirtyGroups = {};\n    this.uniformBlockBindings = {};\n  }\n  /** Destroys this program. */\n  destroy() {\n    this.uniformData = null;\n    this.uniformGroups = null;\n    this.uniformDirtyGroups = null;\n    this.uniformBlockBindings = null;\n    this.program = null;\n  }\n}\n\nexport { GlProgramData, IGLUniformData };\n//# sourceMappingURL=GlProgramData.mjs.map\n","\"use strict\";\nfunction compileShader(gl, type, src) {\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, src);\n  gl.compileShader(shader);\n  return shader;\n}\n\nexport { compileShader };\n//# sourceMappingURL=compileShader.mjs.map\n","\"use strict\";\nfunction booleanArray(size) {\n  const array = new Array(size);\n  for (let i = 0; i < array.length; i++) {\n    array[i] = false;\n  }\n  return array;\n}\nfunction defaultValue(type, size) {\n  switch (type) {\n    case \"float\":\n      return 0;\n    case \"vec2\":\n      return new Float32Array(2 * size);\n    case \"vec3\":\n      return new Float32Array(3 * size);\n    case \"vec4\":\n      return new Float32Array(4 * size);\n    case \"int\":\n    case \"uint\":\n    case \"sampler2D\":\n    case \"sampler2DArray\":\n      return 0;\n    case \"ivec2\":\n      return new Int32Array(2 * size);\n    case \"ivec3\":\n      return new Int32Array(3 * size);\n    case \"ivec4\":\n      return new Int32Array(4 * size);\n    case \"uvec2\":\n      return new Uint32Array(2 * size);\n    case \"uvec3\":\n      return new Uint32Array(3 * size);\n    case \"uvec4\":\n      return new Uint32Array(4 * size);\n    case \"bool\":\n      return false;\n    case \"bvec2\":\n      return booleanArray(2 * size);\n    case \"bvec3\":\n      return booleanArray(3 * size);\n    case \"bvec4\":\n      return booleanArray(4 * size);\n    case \"mat2\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        1\n      ]);\n    case \"mat3\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        1\n      ]);\n    case \"mat4\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n  }\n  return null;\n}\n\nexport { defaultValue };\n//# sourceMappingURL=defaultValue.mjs.map\n","\"use strict\";\nlet GL_TABLE = null;\nconst GL_TO_GLSL_TYPES = {\n  FLOAT: \"float\",\n  FLOAT_VEC2: \"vec2\",\n  FLOAT_VEC3: \"vec3\",\n  FLOAT_VEC4: \"vec4\",\n  INT: \"int\",\n  INT_VEC2: \"ivec2\",\n  INT_VEC3: \"ivec3\",\n  INT_VEC4: \"ivec4\",\n  UNSIGNED_INT: \"uint\",\n  UNSIGNED_INT_VEC2: \"uvec2\",\n  UNSIGNED_INT_VEC3: \"uvec3\",\n  UNSIGNED_INT_VEC4: \"uvec4\",\n  BOOL: \"bool\",\n  BOOL_VEC2: \"bvec2\",\n  BOOL_VEC3: \"bvec3\",\n  BOOL_VEC4: \"bvec4\",\n  FLOAT_MAT2: \"mat2\",\n  FLOAT_MAT3: \"mat3\",\n  FLOAT_MAT4: \"mat4\",\n  SAMPLER_2D: \"sampler2D\",\n  INT_SAMPLER_2D: \"sampler2D\",\n  UNSIGNED_INT_SAMPLER_2D: \"sampler2D\",\n  SAMPLER_CUBE: \"samplerCube\",\n  INT_SAMPLER_CUBE: \"samplerCube\",\n  UNSIGNED_INT_SAMPLER_CUBE: \"samplerCube\",\n  SAMPLER_2D_ARRAY: \"sampler2DArray\",\n  INT_SAMPLER_2D_ARRAY: \"sampler2DArray\",\n  UNSIGNED_INT_SAMPLER_2D_ARRAY: \"sampler2DArray\"\n};\nconst GLSL_TO_VERTEX_TYPES = {\n  float: \"float32\",\n  vec2: \"float32x2\",\n  vec3: \"float32x3\",\n  vec4: \"float32x4\",\n  int: \"sint32\",\n  ivec2: \"sint32x2\",\n  ivec3: \"sint32x3\",\n  ivec4: \"sint32x4\",\n  uint: \"uint32\",\n  uvec2: \"uint32x2\",\n  uvec3: \"uint32x3\",\n  uvec4: \"uint32x4\",\n  bool: \"uint32\",\n  bvec2: \"uint32x2\",\n  bvec3: \"uint32x3\",\n  bvec4: \"uint32x4\"\n};\nfunction mapType(gl, type) {\n  if (!GL_TABLE) {\n    const typeNames = Object.keys(GL_TO_GLSL_TYPES);\n    GL_TABLE = {};\n    for (let i = 0; i < typeNames.length; ++i) {\n      const tn = typeNames[i];\n      GL_TABLE[gl[tn]] = GL_TO_GLSL_TYPES[tn];\n    }\n  }\n  return GL_TABLE[type];\n}\nfunction mapGlToVertexFormat(gl, type) {\n  const typeValue = mapType(gl, type);\n  return GLSL_TO_VERTEX_TYPES[typeValue] || \"float32\";\n}\n\nexport { mapGlToVertexFormat, mapType };\n//# sourceMappingURL=mapType.mjs.map\n","\"use strict\";\nfunction logPrettyShaderError(gl, shader) {\n  const shaderSrc = gl.getShaderSource(shader).split(\"\\n\").map((line, index) => `${index}: ${line}`);\n  const shaderLog = gl.getShaderInfoLog(shader);\n  const splitShader = shaderLog.split(\"\\n\");\n  const dedupe = {};\n  const lineNumbers = splitShader.map((line) => parseFloat(line.replace(/^ERROR\\: 0\\:([\\d]+)\\:.*$/, \"$1\"))).filter((n) => {\n    if (n && !dedupe[n]) {\n      dedupe[n] = true;\n      return true;\n    }\n    return false;\n  });\n  const logArgs = [\"\"];\n  lineNumbers.forEach((number) => {\n    shaderSrc[number - 1] = `%c${shaderSrc[number - 1]}%c`;\n    logArgs.push(\"background: #FF0000; color:#FFFFFF; font-size: 10px\", \"font-size: 10px\");\n  });\n  const fragmentSourceToLog = shaderSrc.join(\"\\n\");\n  logArgs[0] = fragmentSourceToLog;\n  console.error(shaderLog);\n  console.groupCollapsed(\"click to view full shader code\");\n  console.warn(...logArgs);\n  console.groupEnd();\n}\nfunction logProgramError(gl, program, vertexShader, fragmentShader) {\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      logPrettyShaderError(gl, vertexShader);\n    }\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      logPrettyShaderError(gl, fragmentShader);\n    }\n    console.error(\"PixiJS Error: Could not initialize shader.\");\n    if (gl.getProgramInfoLog(program) !== \"\") {\n      console.warn(\"PixiJS Warning: gl.getProgramInfoLog()\", gl.getProgramInfoLog(program));\n    }\n  }\n}\n\nexport { logProgramError };\n//# sourceMappingURL=logProgramError.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { getMaxTexturesPerBatch } from '../../../batcher/gl/utils/maxRecommendedTextures.mjs';\nimport { generateShaderSyncCode } from './GenerateShaderSyncCode.mjs';\nimport { generateProgram } from './program/generateProgram.mjs';\n\n\"use strict\";\nconst defaultSyncData = {\n  textureCount: 0,\n  blockIndex: 0\n};\nclass GlShaderSystem {\n  constructor(renderer) {\n    /**\n     * @internal\n     * @private\n     */\n    this._activeProgram = null;\n    this._programDataHash = /* @__PURE__ */ Object.create(null);\n    this._shaderSyncFunctions = /* @__PURE__ */ Object.create(null);\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_programDataHash\");\n  }\n  contextChange(gl) {\n    this._gl = gl;\n    this._programDataHash = /* @__PURE__ */ Object.create(null);\n    this._shaderSyncFunctions = /* @__PURE__ */ Object.create(null);\n    this._activeProgram = null;\n    this.maxTextures = getMaxTexturesPerBatch();\n  }\n  /**\n   * Changes the current shader to the one given in parameter.\n   * @param shader - the new shader\n   * @param skipSync - false if the shader should automatically sync its uniforms.\n   * @returns the glProgram that belongs to the shader.\n   */\n  bind(shader, skipSync) {\n    this._setProgram(shader.glProgram);\n    if (skipSync)\n      return;\n    defaultSyncData.textureCount = 0;\n    defaultSyncData.blockIndex = 0;\n    let syncFunction = this._shaderSyncFunctions[shader.glProgram._key];\n    if (!syncFunction) {\n      syncFunction = this._shaderSyncFunctions[shader.glProgram._key] = this._generateShaderSync(shader, this);\n    }\n    this._renderer.buffer.nextBindBase(!!shader.glProgram.transformFeedbackVaryings);\n    syncFunction(this._renderer, shader, defaultSyncData);\n  }\n  /**\n   * Updates the uniform group.\n   * @param uniformGroup - the uniform group to update\n   */\n  updateUniformGroup(uniformGroup) {\n    this._renderer.uniformGroup.updateUniformGroup(uniformGroup, this._activeProgram, defaultSyncData);\n  }\n  /**\n   * Binds a uniform block to the shader.\n   * @param uniformGroup - the uniform group to bind\n   * @param name - the name of the uniform block\n   * @param index - the index of the uniform block\n   */\n  bindUniformBlock(uniformGroup, name, index = 0) {\n    const bufferSystem = this._renderer.buffer;\n    const programData = this._getProgramData(this._activeProgram);\n    const isBufferResource = uniformGroup._bufferResource;\n    if (!isBufferResource) {\n      this._renderer.ubo.updateUniformGroup(uniformGroup);\n    }\n    const buffer = uniformGroup.buffer;\n    const glBuffer = bufferSystem.updateBuffer(buffer);\n    const boundLocation = bufferSystem.freeLocationForBufferBase(glBuffer);\n    if (isBufferResource) {\n      const { offset, size } = uniformGroup;\n      if (offset === 0 && size === buffer.data.byteLength) {\n        bufferSystem.bindBufferBase(glBuffer, boundLocation);\n      } else {\n        bufferSystem.bindBufferRange(glBuffer, boundLocation, offset);\n      }\n    } else if (bufferSystem.getLastBindBaseLocation(glBuffer) !== boundLocation) {\n      bufferSystem.bindBufferBase(glBuffer, boundLocation);\n    }\n    const uniformBlockIndex = this._activeProgram._uniformBlockData[name].index;\n    if (programData.uniformBlockBindings[index] === boundLocation)\n      return;\n    programData.uniformBlockBindings[index] = boundLocation;\n    this._renderer.gl.uniformBlockBinding(programData.program, uniformBlockIndex, boundLocation);\n  }\n  _setProgram(program) {\n    if (this._activeProgram === program)\n      return;\n    this._activeProgram = program;\n    const programData = this._getProgramData(program);\n    this._gl.useProgram(programData.program);\n  }\n  /**\n   * @param program - the program to get the data for\n   * @internal\n   * @private\n   */\n  _getProgramData(program) {\n    return this._programDataHash[program._key] || this._createProgramData(program);\n  }\n  _createProgramData(program) {\n    const key = program._key;\n    this._programDataHash[key] = generateProgram(this._gl, program);\n    return this._programDataHash[key];\n  }\n  destroy() {\n    for (const key of Object.keys(this._programDataHash)) {\n      const programData = this._programDataHash[key];\n      programData.destroy();\n      this._programDataHash[key] = null;\n    }\n    this._programDataHash = null;\n  }\n  /**\n   * Creates a function that can be executed that will sync the shader as efficiently as possible.\n   * Overridden by the unsafe eval package if you don't want eval used in your project.\n   * @param shader - the shader to generate the sync function for\n   * @param shaderSystem - the shader system to use\n   * @returns - the generated sync function\n   * @ignore\n   */\n  _generateShaderSync(shader, shaderSystem) {\n    return generateShaderSyncCode(shader, shaderSystem);\n  }\n}\n/** @ignore */\nGlShaderSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"shader\"\n};\n\nexport { GlShaderSystem };\n//# sourceMappingURL=GlShaderSystem.mjs.map\n","import { warn } from '../../../../../utils/logging/warn.mjs';\nimport { GlProgramData } from '../GlProgramData.mjs';\nimport { compileShader } from './compileShader.mjs';\nimport { defaultValue } from './defaultValue.mjs';\nimport { extractAttributesFromGlProgram } from './extractAttributesFromGlProgram.mjs';\nimport { getUboData } from './getUboData.mjs';\nimport { getUniformData } from './getUniformData.mjs';\nimport { logProgramError } from './logProgramError.mjs';\n\n\"use strict\";\nfunction generateProgram(gl, program) {\n  const glVertShader = compileShader(gl, gl.VERTEX_SHADER, program.vertex);\n  const glFragShader = compileShader(gl, gl.FRAGMENT_SHADER, program.fragment);\n  const webGLProgram = gl.createProgram();\n  gl.attachShader(webGLProgram, glVertShader);\n  gl.attachShader(webGLProgram, glFragShader);\n  const transformFeedbackVaryings = program.transformFeedbackVaryings;\n  if (transformFeedbackVaryings) {\n    if (typeof gl.transformFeedbackVaryings !== \"function\") {\n      warn(`TransformFeedback is not supported but TransformFeedbackVaryings are given.`);\n    } else {\n      gl.transformFeedbackVaryings(\n        webGLProgram,\n        transformFeedbackVaryings.names,\n        transformFeedbackVaryings.bufferMode === \"separate\" ? gl.SEPARATE_ATTRIBS : gl.INTERLEAVED_ATTRIBS\n      );\n    }\n  }\n  gl.linkProgram(webGLProgram);\n  if (!gl.getProgramParameter(webGLProgram, gl.LINK_STATUS)) {\n    logProgramError(gl, webGLProgram, glVertShader, glFragShader);\n  }\n  program._attributeData = extractAttributesFromGlProgram(\n    webGLProgram,\n    gl,\n    !/^[ \\t]*#[ \\t]*version[ \\t]+300[ \\t]+es[ \\t]*$/m.test(program.vertex)\n  );\n  program._uniformData = getUniformData(webGLProgram, gl);\n  program._uniformBlockData = getUboData(webGLProgram, gl);\n  gl.deleteShader(glVertShader);\n  gl.deleteShader(glFragShader);\n  const uniformData = {};\n  for (const i in program._uniformData) {\n    const data = program._uniformData[i];\n    uniformData[i] = {\n      location: gl.getUniformLocation(webGLProgram, i),\n      value: defaultValue(data.type, data.size)\n    };\n  }\n  const glProgram = new GlProgramData(webGLProgram, uniformData);\n  return glProgram;\n}\n\nexport { generateProgram };\n//# sourceMappingURL=generateProgram.mjs.map\n","import { getAttributeInfoFromFormat } from '../../../shared/geometry/utils/getAttributeInfoFromFormat.mjs';\nimport { mapGlToVertexFormat } from './mapType.mjs';\n\n\"use strict\";\nfunction extractAttributesFromGlProgram(program, gl, sortAttributes = false) {\n  const attributes = {};\n  const totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < totalAttributes; i++) {\n    const attribData = gl.getActiveAttrib(program, i);\n    if (attribData.name.startsWith(\"gl_\")) {\n      continue;\n    }\n    const format = mapGlToVertexFormat(gl, attribData.type);\n    attributes[attribData.name] = {\n      location: 0,\n      // set further down..\n      format,\n      stride: getAttributeInfoFromFormat(format).stride,\n      offset: 0,\n      instance: false,\n      start: 0\n    };\n  }\n  const keys = Object.keys(attributes);\n  if (sortAttributes) {\n    keys.sort((a, b) => a > b ? 1 : -1);\n    for (let i = 0; i < keys.length; i++) {\n      attributes[keys[i]].location = i;\n      gl.bindAttribLocation(program, i, keys[i]);\n    }\n    gl.linkProgram(program);\n  } else {\n    for (let i = 0; i < keys.length; i++) {\n      attributes[keys[i]].location = gl.getAttribLocation(program, keys[i]);\n    }\n  }\n  return attributes;\n}\n\nexport { extractAttributesFromGlProgram };\n//# sourceMappingURL=extractAttributesFromGlProgram.mjs.map\n","import { defaultValue } from './defaultValue.mjs';\nimport { mapType } from './mapType.mjs';\n\n\"use strict\";\nfunction getUniformData(program, gl) {\n  const uniforms = {};\n  const totalUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (let i = 0; i < totalUniforms; i++) {\n    const uniformData = gl.getActiveUniform(program, i);\n    const name = uniformData.name.replace(/\\[.*?\\]$/, \"\");\n    const isArray = !!uniformData.name.match(/\\[.*?\\]$/);\n    const type = mapType(gl, uniformData.type);\n    uniforms[name] = {\n      name,\n      index: i,\n      type,\n      size: uniformData.size,\n      isArray,\n      value: defaultValue(type, uniformData.size)\n    };\n  }\n  return uniforms;\n}\n\nexport { getUniformData };\n//# sourceMappingURL=getUniformData.mjs.map\n","\"use strict\";\nfunction getUboData(program, gl) {\n  if (!gl.ACTIVE_UNIFORM_BLOCKS)\n    return {};\n  const uniformBlocks = {};\n  const totalUniformsBlocks = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n  for (let i = 0; i < totalUniformsBlocks; i++) {\n    const name = gl.getActiveUniformBlockName(program, i);\n    const uniformBlockIndex = gl.getUniformBlockIndex(program, name);\n    const size = gl.getActiveUniformBlockParameter(program, i, gl.UNIFORM_BLOCK_DATA_SIZE);\n    uniformBlocks[name] = {\n      name,\n      index: uniformBlockIndex,\n      size\n    };\n  }\n  return uniformBlocks;\n}\n\nexport { getUboData };\n//# sourceMappingURL=getUboData.mjs.map\n","import { BufferResource } from '../../shared/buffer/BufferResource.mjs';\nimport { UniformGroup } from '../../shared/shader/UniformGroup.mjs';\nimport { TextureSource } from '../../shared/texture/sources/TextureSource.mjs';\n\n\"use strict\";\nfunction generateShaderSyncCode(shader, shaderSystem) {\n  const funcFragments = [];\n  const headerFragments = [`\n        var g = s.groups;\n        var sS = r.shader;\n        var p = s.glProgram;\n        var ugS = r.uniformGroup;\n        var resources;\n    `];\n  let addedTextreSystem = false;\n  let textureCount = 0;\n  const programData = shaderSystem._getProgramData(shader.glProgram);\n  for (const i in shader.groups) {\n    const group = shader.groups[i];\n    funcFragments.push(`\n            resources = g[${i}].resources;\n        `);\n    for (const j in group.resources) {\n      const resource = group.resources[j];\n      if (resource instanceof UniformGroup) {\n        if (resource.ubo) {\n          const resName = shader._uniformBindMap[i][Number(j)];\n          funcFragments.push(`\n                        sS.bindUniformBlock(\n                            resources[${j}],\n                            '${resName}',\n                            ${shader.glProgram._uniformBlockData[resName].index}\n                        );\n                    `);\n        } else {\n          funcFragments.push(`\n                        ugS.updateUniformGroup(resources[${j}], p, sD);\n                    `);\n        }\n      } else if (resource instanceof BufferResource) {\n        const resName = shader._uniformBindMap[i][Number(j)];\n        funcFragments.push(`\n                    sS.bindUniformBlock(\n                        resources[${j}],\n                        '${resName}',\n                        ${shader.glProgram._uniformBlockData[resName].index}\n                    );\n                `);\n      } else if (resource instanceof TextureSource) {\n        const uniformName = shader._uniformBindMap[i][j];\n        const uniformData = programData.uniformData[uniformName];\n        if (uniformData) {\n          if (!addedTextreSystem) {\n            addedTextreSystem = true;\n            headerFragments.push(`\n                        var tS = r.texture;\n                        `);\n          }\n          shaderSystem._gl.uniform1i(uniformData.location, textureCount);\n          funcFragments.push(`\n                        tS.bind(resources[${j}], ${textureCount});\n                    `);\n          textureCount++;\n        }\n      }\n    }\n  }\n  const functionSource = [...headerFragments, ...funcFragments].join(\"\\n\");\n  return new Function(\"r\", \"s\", \"sD\", functionSource);\n}\n\nexport { generateShaderSyncCode };\n//# sourceMappingURL=GenerateShaderSyncCode.mjs.map\n","\"use strict\";\nconst UNIFORM_TO_SINGLE_SETTERS = {\n  f32: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1f(location, v);\n        }`,\n  \"vec2<f32>\": `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2f(location, v[0], v[1]);\n        }`,\n  \"vec3<f32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3f(location, v[0], v[1], v[2]);\n        }`,\n  \"vec4<f32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4f(location, v[0], v[1], v[2], v[3]);\n        }`,\n  i32: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1i(location, v);\n        }`,\n  \"vec2<i32>\": `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2i(location, v[0], v[1]);\n        }`,\n  \"vec3<i32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3i(location, v[0], v[1], v[2]);\n        }`,\n  \"vec4<i32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4i(location, v[0], v[1], v[2], v[3]);\n        }`,\n  u32: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1ui(location, v);\n        }`,\n  \"vec2<u32>\": `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2ui(location, v[0], v[1]);\n        }`,\n  \"vec3<u32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3ui(location, v[0], v[1], v[2]);\n        }`,\n  \"vec4<u32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4ui(location, v[0], v[1], v[2], v[3]);\n        }`,\n  bool: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1i(location, v);\n        }`,\n  \"vec2<bool>\": `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2i(location, v[0], v[1]);\n        }`,\n  \"vec3<bool>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3i(location, v[0], v[1], v[2]);\n        }`,\n  \"vec4<bool>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4i(location, v[0], v[1], v[2], v[3]);\n        }`,\n  \"mat2x2<f32>\": `gl.uniformMatrix2fv(location, false, v);`,\n  \"mat3x3<f32>\": `gl.uniformMatrix3fv(location, false, v);`,\n  \"mat4x4<f32>\": `gl.uniformMatrix4fv(location, false, v);`\n};\nconst UNIFORM_TO_ARRAY_SETTERS = {\n  f32: `gl.uniform1fv(location, v);`,\n  \"vec2<f32>\": `gl.uniform2fv(location, v);`,\n  \"vec3<f32>\": `gl.uniform3fv(location, v);`,\n  \"vec4<f32>\": `gl.uniform4fv(location, v);`,\n  \"mat2x2<f32>\": `gl.uniformMatrix2fv(location, false, v);`,\n  \"mat3x3<f32>\": `gl.uniformMatrix3fv(location, false, v);`,\n  \"mat4x4<f32>\": `gl.uniformMatrix4fv(location, false, v);`,\n  i32: `gl.uniform1iv(location, v);`,\n  \"vec2<i32>\": `gl.uniform2iv(location, v);`,\n  \"vec3<i32>\": `gl.uniform3iv(location, v);`,\n  \"vec4<i32>\": `gl.uniform4iv(location, v);`,\n  u32: `gl.uniform1iv(location, v);`,\n  \"vec2<u32>\": `gl.uniform2iv(location, v);`,\n  \"vec3<u32>\": `gl.uniform3iv(location, v);`,\n  \"vec4<u32>\": `gl.uniform4iv(location, v);`,\n  bool: `gl.uniform1iv(location, v);`,\n  \"vec2<bool>\": `gl.uniform2iv(location, v);`,\n  \"vec3<bool>\": `gl.uniform3iv(location, v);`,\n  \"vec4<bool>\": `gl.uniform4iv(location, v);`\n};\n\nexport { UNIFORM_TO_ARRAY_SETTERS, UNIFORM_TO_SINGLE_SETTERS };\n//# sourceMappingURL=generateUniformsSyncTypes.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { generateUniformsSync } from './utils/generateUniformsSync.mjs';\n\n\"use strict\";\nclass GlUniformGroupSystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    /** Cache to holds the generated functions. Stored against UniformObjects unique signature. */\n    this._cache = {};\n    this._uniformGroupSyncHash = {};\n    this._renderer = renderer;\n    this.gl = null;\n    this._cache = {};\n  }\n  contextChange(gl) {\n    this.gl = gl;\n  }\n  /**\n   * Uploads the uniforms values to the currently bound shader.\n   * @param group - the uniforms values that be applied to the current shader\n   * @param program\n   * @param syncData\n   * @param syncData.textureCount\n   */\n  updateUniformGroup(group, program, syncData) {\n    const programData = this._renderer.shader._getProgramData(program);\n    if (!group.isStatic || group._dirtyId !== programData.uniformDirtyGroups[group.uid]) {\n      programData.uniformDirtyGroups[group.uid] = group._dirtyId;\n      const syncFunc = this._getUniformSyncFunction(group, program);\n      syncFunc(programData.uniformData, group.uniforms, this._renderer, syncData);\n    }\n  }\n  /**\n   * Overridable by the pixi.js/unsafe-eval package to use static syncUniforms instead.\n   * @param group\n   * @param program\n   */\n  _getUniformSyncFunction(group, program) {\n    return this._uniformGroupSyncHash[group._signature]?.[program._key] || this._createUniformSyncFunction(group, program);\n  }\n  _createUniformSyncFunction(group, program) {\n    const uniformGroupSyncHash = this._uniformGroupSyncHash[group._signature] || (this._uniformGroupSyncHash[group._signature] = {});\n    const id = this._getSignature(group, program._uniformData, \"u\");\n    if (!this._cache[id]) {\n      this._cache[id] = this._generateUniformsSync(group, program._uniformData);\n    }\n    uniformGroupSyncHash[program._key] = this._cache[id];\n    return uniformGroupSyncHash[program._key];\n  }\n  _generateUniformsSync(group, uniformData) {\n    return generateUniformsSync(group, uniformData);\n  }\n  /**\n   * Takes a uniform group and data and generates a unique signature for them.\n   * @param group - The uniform group to get signature of\n   * @param group.uniforms\n   * @param uniformData - Uniform information generated by the shader\n   * @param preFix\n   * @returns Unique signature of the uniform group\n   */\n  _getSignature(group, uniformData, preFix) {\n    const uniforms = group.uniforms;\n    const strings = [`${preFix}-`];\n    for (const i in uniforms) {\n      strings.push(i);\n      if (uniformData[i]) {\n        strings.push(uniformData[i].type);\n      }\n    }\n    return strings.join(\"-\");\n  }\n  /** Destroys this System and removes all its textures. */\n  destroy() {\n    this._renderer = null;\n    this._cache = null;\n  }\n}\n/** @ignore */\nGlUniformGroupSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"uniformGroup\"\n};\n\nexport { GlUniformGroupSystem };\n//# sourceMappingURL=GlUniformGroupSystem.mjs.map\n","import { BufferResource } from '../../../shared/buffer/BufferResource.mjs';\nimport { UniformGroup } from '../../../shared/shader/UniformGroup.mjs';\nimport { uniformParsers } from '../../../shared/shader/utils/uniformParsers.mjs';\nimport { UNIFORM_TO_SINGLE_SETTERS, UNIFORM_TO_ARRAY_SETTERS } from './generateUniformsSyncTypes.mjs';\n\n\"use strict\";\nfunction generateUniformsSync(group, uniformData) {\n  const funcFragments = [`\n        var v = null;\n        var cv = null;\n        var cu = null;\n        var t = 0;\n        var gl = renderer.gl;\n        var name = null;\n    `];\n  for (const i in group.uniforms) {\n    if (!uniformData[i]) {\n      if (group.uniforms[i] instanceof UniformGroup) {\n        if (group.uniforms[i].ubo) {\n          funcFragments.push(`\n                        renderer.shader.bindUniformBlock(uv.${i}, \"${i}\");\n                    `);\n        } else {\n          funcFragments.push(`\n                        renderer.shader.updateUniformGroup(uv.${i});\n                    `);\n        }\n      } else if (group.uniforms[i] instanceof BufferResource) {\n        funcFragments.push(`\n                        renderer.shader.bindBufferResource(uv.${i}, \"${i}\");\n                    `);\n      }\n      continue;\n    }\n    const uniform = group.uniformStructures[i];\n    let parsed = false;\n    for (let j = 0; j < uniformParsers.length; j++) {\n      const parser = uniformParsers[j];\n      if (uniform.type === parser.type && parser.test(uniform)) {\n        funcFragments.push(`name = \"${i}\";`, uniformParsers[j].uniform);\n        parsed = true;\n        break;\n      }\n    }\n    if (!parsed) {\n      const templateType = uniform.size === 1 ? UNIFORM_TO_SINGLE_SETTERS : UNIFORM_TO_ARRAY_SETTERS;\n      const template = templateType[uniform.type].replace(\"location\", `ud[\"${i}\"].location`);\n      funcFragments.push(`\n            cu = ud[\"${i}\"];\n            cv = cu.value;\n            v = uv[\"${i}\"];\n            ${template};`);\n    }\n  }\n  return new Function(\"ud\", \"uv\", \"renderer\", \"syncData\", funcFragments.join(\"\\n\"));\n}\n\nexport { generateUniformsSync };\n//# sourceMappingURL=generateUniformsSync.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { State } from '../../shared/state/State.mjs';\nimport { mapWebGLBlendModesToPixi } from './mapWebGLBlendModesToPixi.mjs';\n\n\"use strict\";\nconst BLEND = 0;\nconst OFFSET = 1;\nconst CULLING = 2;\nconst DEPTH_TEST = 3;\nconst WINDING = 4;\nconst DEPTH_MASK = 5;\nconst _GlStateSystem = class _GlStateSystem {\n  constructor() {\n    this.gl = null;\n    this.stateId = 0;\n    this.polygonOffset = 0;\n    this.blendMode = \"none\";\n    this._blendEq = false;\n    this.map = [];\n    this.map[BLEND] = this.setBlend;\n    this.map[OFFSET] = this.setOffset;\n    this.map[CULLING] = this.setCullFace;\n    this.map[DEPTH_TEST] = this.setDepthTest;\n    this.map[WINDING] = this.setFrontFace;\n    this.map[DEPTH_MASK] = this.setDepthMask;\n    this.checks = [];\n    this.defaultState = State.for2d();\n  }\n  contextChange(gl) {\n    this.gl = gl;\n    this.blendModesMap = mapWebGLBlendModesToPixi(gl);\n    this.reset();\n  }\n  /**\n   * Sets the current state\n   * @param {*} state - The state to set.\n   */\n  set(state) {\n    state || (state = this.defaultState);\n    if (this.stateId !== state.data) {\n      let diff = this.stateId ^ state.data;\n      let i = 0;\n      while (diff) {\n        if (diff & 1) {\n          this.map[i].call(this, !!(state.data & 1 << i));\n        }\n        diff >>= 1;\n        i++;\n      }\n      this.stateId = state.data;\n    }\n    for (let i = 0; i < this.checks.length; i++) {\n      this.checks[i](this, state);\n    }\n  }\n  /**\n   * Sets the state, when previous state is unknown.\n   * @param {*} state - The state to set\n   */\n  forceState(state) {\n    state || (state = this.defaultState);\n    for (let i = 0; i < this.map.length; i++) {\n      this.map[i].call(this, !!(state.data & 1 << i));\n    }\n    for (let i = 0; i < this.checks.length; i++) {\n      this.checks[i](this, state);\n    }\n    this.stateId = state.data;\n  }\n  /**\n   * Sets whether to enable or disable blending.\n   * @param value - Turn on or off WebGl blending.\n   */\n  setBlend(value) {\n    this._updateCheck(_GlStateSystem._checkBlendMode, value);\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.BLEND);\n  }\n  /**\n   * Sets whether to enable or disable polygon offset fill.\n   * @param value - Turn on or off webgl polygon offset testing.\n   */\n  setOffset(value) {\n    this._updateCheck(_GlStateSystem._checkPolygonOffset, value);\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.POLYGON_OFFSET_FILL);\n  }\n  /**\n   * Sets whether to enable or disable depth test.\n   * @param value - Turn on or off webgl depth testing.\n   */\n  setDepthTest(value) {\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.DEPTH_TEST);\n  }\n  /**\n   * Sets whether to enable or disable depth mask.\n   * @param value - Turn on or off webgl depth mask.\n   */\n  setDepthMask(value) {\n    this.gl.depthMask(value);\n  }\n  /**\n   * Sets whether to enable or disable cull face.\n   * @param {boolean} value - Turn on or off webgl cull face.\n   */\n  setCullFace(value) {\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.CULL_FACE);\n  }\n  /**\n   * Sets the gl front face.\n   * @param {boolean} value - true is clockwise and false is counter-clockwise\n   */\n  setFrontFace(value) {\n    this.gl.frontFace(this.gl[value ? \"CW\" : \"CCW\"]);\n  }\n  /**\n   * Sets the blend mode.\n   * @param {number} value - The blend mode to set to.\n   */\n  setBlendMode(value) {\n    if (!this.blendModesMap[value]) {\n      value = \"normal\";\n    }\n    if (value === this.blendMode) {\n      return;\n    }\n    this.blendMode = value;\n    const mode = this.blendModesMap[value];\n    const gl = this.gl;\n    if (mode.length === 2) {\n      gl.blendFunc(mode[0], mode[1]);\n    } else {\n      gl.blendFuncSeparate(mode[0], mode[1], mode[2], mode[3]);\n    }\n    if (mode.length === 6) {\n      this._blendEq = true;\n      gl.blendEquationSeparate(mode[4], mode[5]);\n    } else if (this._blendEq) {\n      this._blendEq = false;\n      gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n    }\n  }\n  /**\n   * Sets the polygon offset.\n   * @param {number} value - the polygon offset\n   * @param {number} scale - the polygon offset scale\n   */\n  setPolygonOffset(value, scale) {\n    this.gl.polygonOffset(value, scale);\n  }\n  // used\n  /** Resets all the logic and disables the VAOs. */\n  reset() {\n    this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, false);\n    this.forceState(this.defaultState);\n    this._blendEq = true;\n    this.blendMode = \"\";\n    this.setBlendMode(\"normal\");\n  }\n  /**\n   * Checks to see which updates should be checked based on which settings have been activated.\n   *\n   * For example, if blend is enabled then we should check the blend modes each time the state is changed\n   * or if polygon fill is activated then we need to check if the polygon offset changes.\n   * The idea is that we only check what we have too.\n   * @param func - the checking function to add or remove\n   * @param value - should the check function be added or removed.\n   */\n  _updateCheck(func, value) {\n    const index = this.checks.indexOf(func);\n    if (value && index === -1) {\n      this.checks.push(func);\n    } else if (!value && index !== -1) {\n      this.checks.splice(index, 1);\n    }\n  }\n  /**\n   * A private little wrapper function that we call to check the blend mode.\n   * @param system - the System to perform the state check on\n   * @param state - the state that the blendMode will pulled from\n   */\n  static _checkBlendMode(system, state) {\n    system.setBlendMode(state.blendMode);\n  }\n  /**\n   * A private little wrapper function that we call to check the polygon offset.\n   * @param system - the System to perform the state check on\n   * @param state - the state that the blendMode will pulled from\n   */\n  static _checkPolygonOffset(system, state) {\n    system.setPolygonOffset(1, state.polygonOffset);\n  }\n  /**\n   * @ignore\n   */\n  destroy() {\n    this.gl = null;\n    this.checks.length = 0;\n  }\n};\n/** @ignore */\n_GlStateSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"state\"\n};\nlet GlStateSystem = _GlStateSystem;\n\nexport { GlStateSystem };\n//# sourceMappingURL=GlStateSystem.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\n\n\"use strict\";\nfunction mapWebGLBlendModesToPixi(gl) {\n  const blendMap = {};\n  blendMap.normal = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.add = [gl.ONE, gl.ONE];\n  blendMap.multiply = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.screen = [gl.ONE, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.none = [0, 0];\n  blendMap[\"normal-npm\"] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap[\"add-npm\"] = [gl.SRC_ALPHA, gl.ONE, gl.ONE, gl.ONE];\n  blendMap[\"screen-npm\"] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.erase = [gl.ZERO, gl.ONE_MINUS_SRC_ALPHA];\n  const isWebGl2 = !(gl instanceof DOMAdapter.get().getWebGLRenderingContext());\n  if (isWebGl2) {\n    blendMap.min = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, gl.MIN, gl.MIN];\n    blendMap.max = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, gl.MAX, gl.MAX];\n  } else {\n    const ext = gl.getExtension(\"EXT_blend_minmax\");\n    if (ext) {\n      blendMap.min = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, ext.MIN_EXT, ext.MIN_EXT];\n      blendMap.max = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, ext.MAX_EXT, ext.MAX_EXT];\n    }\n  }\n  return blendMap;\n}\n\nexport { mapWebGLBlendModesToPixi };\n//# sourceMappingURL=mapWebGLBlendModesToPixi.mjs.map\n","import { GL_TARGETS, GL_TYPES, GL_FORMATS } from './const.mjs';\n\n\"use strict\";\nclass GlTexture {\n  constructor(texture) {\n    this.target = GL_TARGETS.TEXTURE_2D;\n    this.texture = texture;\n    this.width = -1;\n    this.height = -1;\n    this.type = GL_TYPES.UNSIGNED_BYTE;\n    this.internalFormat = GL_FORMATS.RGBA;\n    this.format = GL_FORMATS.RGBA;\n    this.samplerType = 0;\n  }\n}\n\nexport { GlTexture };\n//# sourceMappingURL=GlTexture.mjs.map\n","\"use strict\";\nconst glUploadBufferImageResource = {\n  id: \"buffer\",\n  upload(source, glTexture, gl) {\n    if (glTexture.width === source.width || glTexture.height === source.height) {\n      gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,\n        0,\n        0,\n        source.width,\n        source.height,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        source.width,\n        source.height,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    }\n    glTexture.width = source.width;\n    glTexture.height = source.height;\n  }\n};\n\nexport { glUploadBufferImageResource };\n//# sourceMappingURL=glUploadBufferImageResource.mjs.map\n","\"use strict\";\nconst compressedFormatMap = {\n  \"bc1-rgba-unorm\": true,\n  \"bc1-rgba-unorm-srgb\": true,\n  \"bc2-rgba-unorm\": true,\n  \"bc2-rgba-unorm-srgb\": true,\n  \"bc3-rgba-unorm\": true,\n  \"bc3-rgba-unorm-srgb\": true,\n  \"bc4-r-unorm\": true,\n  \"bc4-r-snorm\": true,\n  \"bc5-rg-unorm\": true,\n  \"bc5-rg-snorm\": true,\n  \"bc6h-rgb-ufloat\": true,\n  \"bc6h-rgb-float\": true,\n  \"bc7-rgba-unorm\": true,\n  \"bc7-rgba-unorm-srgb\": true,\n  // ETC2 compressed formats usable if \"texture-compression-etc2\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  \"etc2-rgb8unorm\": true,\n  \"etc2-rgb8unorm-srgb\": true,\n  \"etc2-rgb8a1unorm\": true,\n  \"etc2-rgb8a1unorm-srgb\": true,\n  \"etc2-rgba8unorm\": true,\n  \"etc2-rgba8unorm-srgb\": true,\n  \"eac-r11unorm\": true,\n  \"eac-r11snorm\": true,\n  \"eac-rg11unorm\": true,\n  \"eac-rg11snorm\": true,\n  // ASTC compressed formats usable if \"texture-compression-astc\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  \"astc-4x4-unorm\": true,\n  \"astc-4x4-unorm-srgb\": true,\n  \"astc-5x4-unorm\": true,\n  \"astc-5x4-unorm-srgb\": true,\n  \"astc-5x5-unorm\": true,\n  \"astc-5x5-unorm-srgb\": true,\n  \"astc-6x5-unorm\": true,\n  \"astc-6x5-unorm-srgb\": true,\n  \"astc-6x6-unorm\": true,\n  \"astc-6x6-unorm-srgb\": true,\n  \"astc-8x5-unorm\": true,\n  \"astc-8x5-unorm-srgb\": true,\n  \"astc-8x6-unorm\": true,\n  \"astc-8x6-unorm-srgb\": true,\n  \"astc-8x8-unorm\": true,\n  \"astc-8x8-unorm-srgb\": true,\n  \"astc-10x5-unorm\": true,\n  \"astc-10x5-unorm-srgb\": true,\n  \"astc-10x6-unorm\": true,\n  \"astc-10x6-unorm-srgb\": true,\n  \"astc-10x8-unorm\": true,\n  \"astc-10x8-unorm-srgb\": true,\n  \"astc-10x10-unorm\": true,\n  \"astc-10x10-unorm-srgb\": true,\n  \"astc-12x10-unorm\": true,\n  \"astc-12x10-unorm-srgb\": true,\n  \"astc-12x12-unorm\": true,\n  \"astc-12x12-unorm-srgb\": true\n};\nconst glUploadCompressedTextureResource = {\n  id: \"compressed\",\n  upload(source, glTexture, gl) {\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    let mipWidth = source.pixelWidth;\n    let mipHeight = source.pixelHeight;\n    const compressed = !!compressedFormatMap[source.format];\n    for (let i = 0; i < source.resource.length; i++) {\n      const levelBuffer = source.resource[i];\n      if (compressed) {\n        gl.compressedTexImage2D(\n          gl.TEXTURE_2D,\n          i,\n          glTexture.internalFormat,\n          mipWidth,\n          mipHeight,\n          0,\n          levelBuffer\n        );\n      } else {\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          i,\n          glTexture.internalFormat,\n          mipWidth,\n          mipHeight,\n          0,\n          glTexture.format,\n          glTexture.type,\n          levelBuffer\n        );\n      }\n      mipWidth = Math.max(mipWidth >> 1, 1);\n      mipHeight = Math.max(mipHeight >> 1, 1);\n    }\n  }\n};\n\nexport { glUploadCompressedTextureResource };\n//# sourceMappingURL=glUploadCompressedTextureResource.mjs.map\n","\"use strict\";\nconst glUploadImageResource = {\n  id: \"image\",\n  upload(source, glTexture, gl, webGLVersion) {\n    const premultipliedAlpha = source.alphaMode === \"premultiply-alpha-on-upload\";\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, premultipliedAlpha);\n    const glWidth = glTexture.width;\n    const glHeight = glTexture.height;\n    const textureWidth = source.pixelWidth;\n    const textureHeight = source.pixelHeight;\n    const resourceWidth = source.resourceWidth;\n    const resourceHeight = source.resourceHeight;\n    if (resourceWidth < textureWidth || resourceHeight < textureHeight) {\n      if (glWidth !== textureWidth || glHeight !== textureHeight) {\n        gl.texImage2D(\n          glTexture.target,\n          0,\n          glTexture.internalFormat,\n          textureWidth,\n          textureHeight,\n          0,\n          glTexture.format,\n          glTexture.type,\n          null\n        );\n      }\n      if (webGLVersion === 2) {\n        gl.texSubImage2D(\n          gl.TEXTURE_2D,\n          0,\n          0,\n          0,\n          resourceWidth,\n          resourceHeight,\n          glTexture.format,\n          glTexture.type,\n          source.resource\n        );\n      } else {\n        gl.texSubImage2D(\n          gl.TEXTURE_2D,\n          0,\n          0,\n          0,\n          glTexture.format,\n          glTexture.type,\n          source.resource\n        );\n      }\n    } else if (glWidth === textureWidth || glHeight === textureHeight) {\n      gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,\n        0,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else if (webGLVersion === 2) {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        textureWidth,\n        textureHeight,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    }\n    glTexture.width = textureWidth;\n    glTexture.height = textureHeight;\n  }\n};\n\nexport { glUploadImageResource };\n//# sourceMappingURL=glUploadImageResource.mjs.map\n","import { glUploadImageResource } from './glUploadImageResource.mjs';\n\n\"use strict\";\nconst glUploadVideoResource = {\n  id: \"video\",\n  upload(source, glTexture, gl, webGLVersion) {\n    if (!source.isValid) {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        1,\n        1,\n        0,\n        glTexture.format,\n        glTexture.type,\n        null\n      );\n      return;\n    }\n    glUploadImageResource.upload(source, glTexture, gl, webGLVersion);\n  }\n};\n\nexport { glUploadVideoResource };\n//# sourceMappingURL=glUploadVideoResource.mjs.map\n","\"use strict\";\nconst scaleModeToGlFilter = {\n  linear: 9729,\n  nearest: 9728\n};\nconst mipmapScaleModeToGlFilter = {\n  linear: {\n    linear: 9987,\n    nearest: 9985\n  },\n  nearest: {\n    linear: 9986,\n    nearest: 9984\n  }\n};\nconst wrapModeToGlAddress = {\n  \"clamp-to-edge\": 33071,\n  repeat: 10497,\n  \"mirror-repeat\": 33648\n};\nconst compareModeToGlCompare = {\n  never: 512,\n  less: 513,\n  equal: 514,\n  \"less-equal\": 515,\n  greater: 516,\n  \"not-equal\": 517,\n  \"greater-equal\": 518,\n  always: 519\n};\n\nexport { compareModeToGlCompare, mipmapScaleModeToGlFilter, scaleModeToGlFilter, wrapModeToGlAddress };\n//# sourceMappingURL=pixiToGlMaps.mjs.map\n","import { wrapModeToGlAddress, scaleModeToGlFilter, mipmapScaleModeToGlFilter, compareModeToGlCompare } from './pixiToGlMaps.mjs';\n\n\"use strict\";\nfunction applyStyleParams(style, gl, mipmaps, anisotropicExt, glFunctionName, firstParam, forceClamp, firstCreation) {\n  const castParam = firstParam;\n  if (!firstCreation || style.addressModeU !== \"repeat\" || style.addressModeV !== \"repeat\" || style.addressModeW !== \"repeat\") {\n    const wrapModeS = wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeU];\n    const wrapModeT = wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeV];\n    const wrapModeR = wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeW];\n    gl[glFunctionName](castParam, gl.TEXTURE_WRAP_S, wrapModeS);\n    gl[glFunctionName](castParam, gl.TEXTURE_WRAP_T, wrapModeT);\n    if (gl.TEXTURE_WRAP_R)\n      gl[glFunctionName](castParam, gl.TEXTURE_WRAP_R, wrapModeR);\n  }\n  if (!firstCreation || style.magFilter !== \"linear\") {\n    gl[glFunctionName](castParam, gl.TEXTURE_MAG_FILTER, scaleModeToGlFilter[style.magFilter]);\n  }\n  if (mipmaps) {\n    if (!firstCreation || style.mipmapFilter !== \"linear\") {\n      const glFilterMode = mipmapScaleModeToGlFilter[style.minFilter][style.mipmapFilter];\n      gl[glFunctionName](castParam, gl.TEXTURE_MIN_FILTER, glFilterMode);\n    }\n  } else {\n    gl[glFunctionName](castParam, gl.TEXTURE_MIN_FILTER, scaleModeToGlFilter[style.minFilter]);\n  }\n  if (anisotropicExt && style.maxAnisotropy > 1) {\n    const level = Math.min(style.maxAnisotropy, gl.getParameter(anisotropicExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT));\n    gl[glFunctionName](castParam, anisotropicExt.TEXTURE_MAX_ANISOTROPY_EXT, level);\n  }\n  if (style.compare) {\n    gl[glFunctionName](castParam, gl.TEXTURE_COMPARE_FUNC, compareModeToGlCompare[style.compare]);\n  }\n}\n\nexport { applyStyleParams };\n//# sourceMappingURL=applyStyleParams.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { Texture } from '../../shared/texture/Texture.mjs';\nimport { GlTexture } from './GlTexture.mjs';\nimport { glUploadBufferImageResource } from './uploaders/glUploadBufferImageResource.mjs';\nimport { glUploadCompressedTextureResource } from './uploaders/glUploadCompressedTextureResource.mjs';\nimport { glUploadImageResource } from './uploaders/glUploadImageResource.mjs';\nimport { glUploadVideoResource } from './uploaders/glUploadVideoResource.mjs';\nimport { applyStyleParams } from './utils/applyStyleParams.mjs';\nimport { mapFormatToGlFormat } from './utils/mapFormatToGlFormat.mjs';\nimport { mapFormatToGlInternalFormat } from './utils/mapFormatToGlInternalFormat.mjs';\nimport { mapFormatToGlType } from './utils/mapFormatToGlType.mjs';\nimport './utils/unpremultiplyAlpha.mjs';\n\n\"use strict\";\nconst BYTES_PER_PIXEL = 4;\nclass GlTextureSystem {\n  constructor(renderer) {\n    this.managedTextures = [];\n    this._glTextures = /* @__PURE__ */ Object.create(null);\n    this._glSamplers = /* @__PURE__ */ Object.create(null);\n    this._boundTextures = [];\n    this._activeTextureLocation = -1;\n    this._boundSamplers = /* @__PURE__ */ Object.create(null);\n    this._uploads = {\n      image: glUploadImageResource,\n      buffer: glUploadBufferImageResource,\n      video: glUploadVideoResource,\n      compressed: glUploadCompressedTextureResource\n    };\n    // TODO - separate samplers will be a cool thing to add, but not right now!\n    this._useSeparateSamplers = false;\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_glTextures\");\n    this._renderer.renderableGC.addManagedHash(this, \"_glSamplers\");\n  }\n  contextChange(gl) {\n    this._gl = gl;\n    if (!this._mapFormatToInternalFormat) {\n      this._mapFormatToInternalFormat = mapFormatToGlInternalFormat(gl, this._renderer.context.extensions);\n      this._mapFormatToType = mapFormatToGlType(gl);\n      this._mapFormatToFormat = mapFormatToGlFormat(gl);\n    }\n    this._glTextures = /* @__PURE__ */ Object.create(null);\n    this._glSamplers = /* @__PURE__ */ Object.create(null);\n    this._boundSamplers = /* @__PURE__ */ Object.create(null);\n    for (let i = 0; i < 16; i++) {\n      this.bind(Texture.EMPTY, i);\n    }\n  }\n  initSource(source) {\n    this.bind(source);\n  }\n  bind(texture, location = 0) {\n    const source = texture.source;\n    if (texture) {\n      this.bindSource(source, location);\n      if (this._useSeparateSamplers) {\n        this._bindSampler(source.style, location);\n      }\n    } else {\n      this.bindSource(null, location);\n      if (this._useSeparateSamplers) {\n        this._bindSampler(null, location);\n      }\n    }\n  }\n  bindSource(source, location = 0) {\n    const gl = this._gl;\n    source._touched = this._renderer.textureGC.count;\n    if (this._boundTextures[location] !== source) {\n      this._boundTextures[location] = source;\n      this._activateLocation(location);\n      source || (source = Texture.EMPTY.source);\n      const glTexture = this.getGlSource(source);\n      gl.bindTexture(glTexture.target, glTexture.texture);\n    }\n  }\n  _bindSampler(style, location = 0) {\n    const gl = this._gl;\n    if (!style) {\n      this._boundSamplers[location] = null;\n      gl.bindSampler(location, null);\n      return;\n    }\n    const sampler = this._getGlSampler(style);\n    if (this._boundSamplers[location] !== sampler) {\n      this._boundSamplers[location] = sampler;\n      gl.bindSampler(location, sampler);\n    }\n  }\n  unbind(texture) {\n    const source = texture.source;\n    const boundTextures = this._boundTextures;\n    const gl = this._gl;\n    for (let i = 0; i < boundTextures.length; i++) {\n      if (boundTextures[i] === source) {\n        this._activateLocation(i);\n        const glTexture = this.getGlSource(source);\n        gl.bindTexture(glTexture.target, null);\n        boundTextures[i] = null;\n      }\n    }\n  }\n  _activateLocation(location) {\n    if (this._activeTextureLocation !== location) {\n      this._activeTextureLocation = location;\n      this._gl.activeTexture(this._gl.TEXTURE0 + location);\n    }\n  }\n  _initSource(source) {\n    const gl = this._gl;\n    const glTexture = new GlTexture(gl.createTexture());\n    glTexture.type = this._mapFormatToType[source.format];\n    glTexture.internalFormat = this._mapFormatToInternalFormat[source.format];\n    glTexture.format = this._mapFormatToFormat[source.format];\n    if (source.autoGenerateMipmaps && (this._renderer.context.supports.nonPowOf2mipmaps || source.isPowerOfTwo)) {\n      const biggestDimension = Math.max(source.width, source.height);\n      source.mipLevelCount = Math.floor(Math.log2(biggestDimension)) + 1;\n    }\n    this._glTextures[source.uid] = glTexture;\n    if (!this.managedTextures.includes(source)) {\n      source.on(\"update\", this.onSourceUpdate, this);\n      source.on(\"resize\", this.onSourceUpdate, this);\n      source.on(\"styleChange\", this.onStyleChange, this);\n      source.on(\"destroy\", this.onSourceDestroy, this);\n      source.on(\"unload\", this.onSourceUnload, this);\n      source.on(\"updateMipmaps\", this.onUpdateMipmaps, this);\n      this.managedTextures.push(source);\n    }\n    this.onSourceUpdate(source);\n    this.updateStyle(source, false);\n    return glTexture;\n  }\n  onStyleChange(source) {\n    this.updateStyle(source, false);\n  }\n  updateStyle(source, firstCreation) {\n    const gl = this._gl;\n    const glTexture = this.getGlSource(source);\n    gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n    this._boundTextures[this._activeTextureLocation] = source;\n    applyStyleParams(\n      source.style,\n      gl,\n      source.mipLevelCount > 1,\n      this._renderer.context.extensions.anisotropicFiltering,\n      \"texParameteri\",\n      gl.TEXTURE_2D,\n      // will force a clamp to edge if the texture is not a power of two\n      !this._renderer.context.supports.nonPowOf2wrapping && !source.isPowerOfTwo,\n      firstCreation\n    );\n  }\n  onSourceUnload(source) {\n    const glTexture = this._glTextures[source.uid];\n    if (!glTexture)\n      return;\n    this.unbind(source);\n    this._glTextures[source.uid] = null;\n    this._gl.deleteTexture(glTexture.texture);\n  }\n  onSourceUpdate(source) {\n    const gl = this._gl;\n    const glTexture = this.getGlSource(source);\n    gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n    this._boundTextures[this._activeTextureLocation] = source;\n    if (this._uploads[source.uploadMethodId]) {\n      this._uploads[source.uploadMethodId].upload(source, glTexture, gl, this._renderer.context.webGLVersion);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, source.pixelWidth, source.pixelHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    }\n    if (source.autoGenerateMipmaps && source.mipLevelCount > 1) {\n      this.onUpdateMipmaps(source, false);\n    }\n  }\n  onUpdateMipmaps(source, bind = true) {\n    if (bind)\n      this.bindSource(source, 0);\n    const glTexture = this.getGlSource(source);\n    this._gl.generateMipmap(glTexture.target);\n  }\n  onSourceDestroy(source) {\n    source.off(\"destroy\", this.onSourceDestroy, this);\n    source.off(\"update\", this.onSourceUpdate, this);\n    source.off(\"resize\", this.onSourceUpdate, this);\n    source.off(\"unload\", this.onSourceUnload, this);\n    source.off(\"styleChange\", this.onStyleChange, this);\n    source.off(\"updateMipmaps\", this.onUpdateMipmaps, this);\n    this.managedTextures.splice(this.managedTextures.indexOf(source), 1);\n    this.onSourceUnload(source);\n  }\n  _initSampler(style) {\n    const gl = this._gl;\n    const glSampler = this._gl.createSampler();\n    this._glSamplers[style._resourceId] = glSampler;\n    applyStyleParams(\n      style,\n      gl,\n      this._boundTextures[this._activeTextureLocation].mipLevelCount > 1,\n      this._renderer.context.extensions.anisotropicFiltering,\n      \"samplerParameteri\",\n      glSampler,\n      false,\n      true\n    );\n    return this._glSamplers[style._resourceId];\n  }\n  _getGlSampler(sampler) {\n    return this._glSamplers[sampler._resourceId] || this._initSampler(sampler);\n  }\n  getGlSource(source) {\n    return this._glTextures[source.uid] || this._initSource(source);\n  }\n  generateCanvas(texture) {\n    const { pixels, width, height } = this.getPixels(texture);\n    const canvas = DOMAdapter.get().createCanvas();\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n      const imageData = ctx.createImageData(width, height);\n      imageData.data.set(pixels);\n      ctx.putImageData(imageData, 0, 0);\n    }\n    return canvas;\n  }\n  getPixels(texture) {\n    const resolution = texture.source.resolution;\n    const frame = texture.frame;\n    const width = Math.max(Math.round(frame.width * resolution), 1);\n    const height = Math.max(Math.round(frame.height * resolution), 1);\n    const pixels = new Uint8Array(BYTES_PER_PIXEL * width * height);\n    const renderer = this._renderer;\n    const renderTarget = renderer.renderTarget.getRenderTarget(texture);\n    const glRenterTarget = renderer.renderTarget.getGpuRenderTarget(renderTarget);\n    const gl = renderer.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenterTarget.resolveTargetFramebuffer);\n    gl.readPixels(\n      Math.round(frame.x * resolution),\n      Math.round(frame.y * resolution),\n      width,\n      height,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      pixels\n    );\n    if (false) {\n      unpremultiplyAlpha(pixels);\n    }\n    return { pixels: new Uint8ClampedArray(pixels.buffer), width, height };\n  }\n  destroy() {\n    this.managedTextures.slice().forEach((source) => this.onSourceDestroy(source));\n    this.managedTextures = null;\n    this._renderer = null;\n  }\n}\n/** @ignore */\nGlTextureSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"texture\"\n};\n\nexport { GlTextureSystem };\n//# sourceMappingURL=GlTextureSystem.mjs.map\n","import { DOMAdapter } from '../../../../../environment/adapter.mjs';\n\n\"use strict\";\nfunction mapFormatToGlInternalFormat(gl, extensions) {\n  let srgb = {};\n  let bgra8unorm = gl.RGBA;\n  if (!(gl instanceof DOMAdapter.get().getWebGLRenderingContext())) {\n    srgb = {\n      \"rgba8unorm-srgb\": gl.SRGB8_ALPHA8,\n      \"bgra8unorm-srgb\": gl.SRGB8_ALPHA8\n    };\n    bgra8unorm = gl.RGBA8;\n  } else if (extensions.srgb) {\n    srgb = {\n      \"rgba8unorm-srgb\": extensions.srgb.SRGB8_ALPHA8_EXT,\n      \"bgra8unorm-srgb\": extensions.srgb.SRGB8_ALPHA8_EXT\n    };\n  }\n  return {\n    // 8-bit formats\n    r8unorm: gl.R8,\n    r8snorm: gl.R8_SNORM,\n    r8uint: gl.R8UI,\n    r8sint: gl.R8I,\n    // 16-bit formats\n    r16uint: gl.R16UI,\n    r16sint: gl.R16I,\n    r16float: gl.R16F,\n    rg8unorm: gl.RG8,\n    rg8snorm: gl.RG8_SNORM,\n    rg8uint: gl.RG8UI,\n    rg8sint: gl.RG8I,\n    // 32-bit formats\n    r32uint: gl.R32UI,\n    r32sint: gl.R32I,\n    r32float: gl.R32F,\n    rg16uint: gl.RG16UI,\n    rg16sint: gl.RG16I,\n    rg16float: gl.RG16F,\n    rgba8unorm: gl.RGBA,\n    ...srgb,\n    // Packed 32-bit formats\n    rgba8snorm: gl.RGBA8_SNORM,\n    rgba8uint: gl.RGBA8UI,\n    rgba8sint: gl.RGBA8I,\n    bgra8unorm,\n    rgb9e5ufloat: gl.RGB9_E5,\n    rgb10a2unorm: gl.RGB10_A2,\n    rg11b10ufloat: gl.R11F_G11F_B10F,\n    // 64-bit formats\n    rg32uint: gl.RG32UI,\n    rg32sint: gl.RG32I,\n    rg32float: gl.RG32F,\n    rgba16uint: gl.RGBA16UI,\n    rgba16sint: gl.RGBA16I,\n    rgba16float: gl.RGBA16F,\n    // 128-bit formats\n    rgba32uint: gl.RGBA32UI,\n    rgba32sint: gl.RGBA32I,\n    rgba32float: gl.RGBA32F,\n    // Depth/stencil formats\n    stencil8: gl.STENCIL_INDEX8,\n    depth16unorm: gl.DEPTH_COMPONENT16,\n    depth24plus: gl.DEPTH_COMPONENT24,\n    \"depth24plus-stencil8\": gl.DEPTH24_STENCIL8,\n    depth32float: gl.DEPTH_COMPONENT32F,\n    \"depth32float-stencil8\": gl.DEPTH32F_STENCIL8,\n    // Compressed formats\n    ...extensions.s3tc ? {\n      \"bc1-rgba-unorm\": extensions.s3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT,\n      \"bc2-rgba-unorm\": extensions.s3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT,\n      \"bc3-rgba-unorm\": extensions.s3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT\n    } : {},\n    ...extensions.s3tc_sRGB ? {\n      \"bc1-rgba-unorm-srgb\": extensions.s3tc_sRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT,\n      \"bc2-rgba-unorm-srgb\": extensions.s3tc_sRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,\n      \"bc3-rgba-unorm-srgb\": extensions.s3tc_sRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT\n    } : {},\n    ...extensions.rgtc ? {\n      \"bc4-r-unorm\": extensions.rgtc.COMPRESSED_RED_RGTC1_EXT,\n      \"bc4-r-snorm\": extensions.rgtc.COMPRESSED_SIGNED_RED_RGTC1_EXT,\n      \"bc5-rg-unorm\": extensions.rgtc.COMPRESSED_RED_GREEN_RGTC2_EXT,\n      \"bc5-rg-snorm\": extensions.rgtc.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT\n    } : {},\n    ...extensions.bptc ? {\n      \"bc6h-rgb-float\": extensions.bptc.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT,\n      \"bc6h-rgb-ufloat\": extensions.bptc.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT,\n      \"bc7-rgba-unorm\": extensions.bptc.COMPRESSED_RGBA_BPTC_UNORM_EXT,\n      \"bc7-rgba-unorm-srgb\": extensions.bptc.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT\n    } : {},\n    ...extensions.etc ? {\n      \"etc2-rgb8unorm\": extensions.etc.COMPRESSED_RGB8_ETC2,\n      \"etc2-rgb8unorm-srgb\": extensions.etc.COMPRESSED_SRGB8_ETC2,\n      \"etc2-rgb8a1unorm\": extensions.etc.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n      \"etc2-rgb8a1unorm-srgb\": extensions.etc.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n      \"etc2-rgba8unorm\": extensions.etc.COMPRESSED_RGBA8_ETC2_EAC,\n      \"etc2-rgba8unorm-srgb\": extensions.etc.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC,\n      \"eac-r11unorm\": extensions.etc.COMPRESSED_R11_EAC,\n      // 'eac-r11snorm'\n      \"eac-rg11unorm\": extensions.etc.COMPRESSED_SIGNED_RG11_EAC\n      // 'eac-rg11snorm'\n    } : {},\n    ...extensions.astc ? {\n      \"astc-4x4-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_4x4_KHR,\n      \"astc-4x4-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR,\n      \"astc-5x4-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_5x4_KHR,\n      \"astc-5x4-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR,\n      \"astc-5x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_5x5_KHR,\n      \"astc-5x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR,\n      \"astc-6x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_6x5_KHR,\n      \"astc-6x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR,\n      \"astc-6x6-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_6x6_KHR,\n      \"astc-6x6-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR,\n      \"astc-8x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_8x5_KHR,\n      \"astc-8x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR,\n      \"astc-8x6-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_8x6_KHR,\n      \"astc-8x6-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR,\n      \"astc-8x8-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_8x8_KHR,\n      \"astc-8x8-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR,\n      \"astc-10x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x5_KHR,\n      \"astc-10x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR,\n      \"astc-10x6-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x6_KHR,\n      \"astc-10x6-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR,\n      \"astc-10x8-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x8_KHR,\n      \"astc-10x8-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR,\n      \"astc-10x10-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x10_KHR,\n      \"astc-10x10-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR,\n      \"astc-12x10-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_12x10_KHR,\n      \"astc-12x10-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR,\n      \"astc-12x12-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_12x12_KHR,\n      \"astc-12x12-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR\n    } : {}\n  };\n}\n\nexport { mapFormatToGlInternalFormat };\n//# sourceMappingURL=mapFormatToGlInternalFormat.mjs.map\n","\"use strict\";\nfunction mapFormatToGlType(gl) {\n  return {\n    // 8-bit formats\n    r8unorm: gl.UNSIGNED_BYTE,\n    r8snorm: gl.BYTE,\n    r8uint: gl.UNSIGNED_BYTE,\n    r8sint: gl.BYTE,\n    // 16-bit formats\n    r16uint: gl.UNSIGNED_SHORT,\n    r16sint: gl.SHORT,\n    r16float: gl.HALF_FLOAT,\n    rg8unorm: gl.UNSIGNED_BYTE,\n    rg8snorm: gl.BYTE,\n    rg8uint: gl.UNSIGNED_BYTE,\n    rg8sint: gl.BYTE,\n    // 32-bit formats\n    r32uint: gl.UNSIGNED_INT,\n    r32sint: gl.INT,\n    r32float: gl.FLOAT,\n    rg16uint: gl.UNSIGNED_SHORT,\n    rg16sint: gl.SHORT,\n    rg16float: gl.HALF_FLOAT,\n    rgba8unorm: gl.UNSIGNED_BYTE,\n    \"rgba8unorm-srgb\": gl.UNSIGNED_BYTE,\n    // Packed 32-bit formats\n    rgba8snorm: gl.BYTE,\n    rgba8uint: gl.UNSIGNED_BYTE,\n    rgba8sint: gl.BYTE,\n    bgra8unorm: gl.UNSIGNED_BYTE,\n    \"bgra8unorm-srgb\": gl.UNSIGNED_BYTE,\n    rgb9e5ufloat: gl.UNSIGNED_INT_5_9_9_9_REV,\n    rgb10a2unorm: gl.UNSIGNED_INT_2_10_10_10_REV,\n    rg11b10ufloat: gl.UNSIGNED_INT_10F_11F_11F_REV,\n    // 64-bit formats\n    rg32uint: gl.UNSIGNED_INT,\n    rg32sint: gl.INT,\n    rg32float: gl.FLOAT,\n    rgba16uint: gl.UNSIGNED_SHORT,\n    rgba16sint: gl.SHORT,\n    rgba16float: gl.HALF_FLOAT,\n    // 128-bit formats\n    rgba32uint: gl.UNSIGNED_INT,\n    rgba32sint: gl.INT,\n    rgba32float: gl.FLOAT,\n    // Depth/stencil formats\n    stencil8: gl.UNSIGNED_BYTE,\n    depth16unorm: gl.UNSIGNED_SHORT,\n    depth24plus: gl.UNSIGNED_INT,\n    \"depth24plus-stencil8\": gl.UNSIGNED_INT_24_8,\n    depth32float: gl.FLOAT,\n    \"depth32float-stencil8\": gl.FLOAT_32_UNSIGNED_INT_24_8_REV\n  };\n}\n\nexport { mapFormatToGlType };\n//# sourceMappingURL=mapFormatToGlType.mjs.map\n","\"use strict\";\nfunction mapFormatToGlFormat(gl) {\n  return {\n    // 8-bit formats\n    r8unorm: gl.RED,\n    r8snorm: gl.RED,\n    r8uint: gl.RED,\n    r8sint: gl.RED,\n    // 16-bit formats\n    r16uint: gl.RED,\n    r16sint: gl.RED,\n    r16float: gl.RED,\n    rg8unorm: gl.RG,\n    rg8snorm: gl.RG,\n    rg8uint: gl.RG,\n    rg8sint: gl.RG,\n    // 32-bit formats\n    r32uint: gl.RED,\n    r32sint: gl.RED,\n    r32float: gl.RED,\n    rg16uint: gl.RG,\n    rg16sint: gl.RG,\n    rg16float: gl.RG,\n    rgba8unorm: gl.RGBA,\n    \"rgba8unorm-srgb\": gl.RGBA,\n    // Packed 32-bit formats\n    rgba8snorm: gl.RGBA,\n    rgba8uint: gl.RGBA,\n    rgba8sint: gl.RGBA,\n    bgra8unorm: gl.RGBA,\n    \"bgra8unorm-srgb\": gl.RGBA,\n    rgb9e5ufloat: gl.RGB,\n    rgb10a2unorm: gl.RGBA,\n    rg11b10ufloat: gl.RGB,\n    // 64-bit formats\n    rg32uint: gl.RG,\n    rg32sint: gl.RG,\n    rg32float: gl.RG,\n    rgba16uint: gl.RGBA,\n    rgba16sint: gl.RGBA,\n    rgba16float: gl.RGBA,\n    // 128-bit formats\n    rgba32uint: gl.RGBA,\n    rgba32sint: gl.RGBA,\n    rgba32float: gl.RGBA,\n    // Depth/stencil formats\n    stencil8: gl.STENCIL_INDEX8,\n    depth16unorm: gl.DEPTH_COMPONENT,\n    depth24plus: gl.DEPTH_COMPONENT,\n    \"depth24plus-stencil8\": gl.DEPTH_STENCIL,\n    depth32float: gl.DEPTH_COMPONENT,\n    \"depth32float-stencil8\": gl.DEPTH_STENCIL\n  };\n}\n\nexport { mapFormatToGlFormat };\n//# sourceMappingURL=mapFormatToGlFormat.mjs.map\n","import { extensions, ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { GlGraphicsAdaptor } from '../../../scene/graphics/gl/GlGraphicsAdaptor.mjs';\nimport { GlMeshAdaptor } from '../../../scene/mesh/gl/GlMeshAdaptor.mjs';\nimport { GlBatchAdaptor } from '../../batcher/gl/GlBatchAdaptor.mjs';\nimport { AbstractRenderer } from '../shared/system/AbstractRenderer.mjs';\nimport { SharedSystems, SharedRenderPipes } from '../shared/system/SharedSystems.mjs';\nimport { RendererType } from '../types.mjs';\nimport { GlBufferSystem } from './buffer/GlBufferSystem.mjs';\nimport { GlContextSystem } from './context/GlContextSystem.mjs';\nimport { GlGeometrySystem } from './geometry/GlGeometrySystem.mjs';\nimport { GlBackBufferSystem } from './GlBackBufferSystem.mjs';\nimport { GlColorMaskSystem } from './GlColorMaskSystem.mjs';\nimport { GlEncoderSystem } from './GlEncoderSystem.mjs';\nimport { GlStencilSystem } from './GlStencilSystem.mjs';\nimport { GlUboSystem } from './GlUboSystem.mjs';\nimport { GlRenderTargetSystem } from './renderTarget/GlRenderTargetSystem.mjs';\nimport { GlShaderSystem } from './shader/GlShaderSystem.mjs';\nimport { GlUniformGroupSystem } from './shader/GlUniformGroupSystem.mjs';\nimport { GlStateSystem } from './state/GlStateSystem.mjs';\nimport { GlTextureSystem } from './texture/GlTextureSystem.mjs';\n\n\"use strict\";\nconst DefaultWebGLSystems = [\n  ...SharedSystems,\n  GlUboSystem,\n  GlBackBufferSystem,\n  GlContextSystem,\n  GlBufferSystem,\n  GlTextureSystem,\n  GlRenderTargetSystem,\n  GlGeometrySystem,\n  GlUniformGroupSystem,\n  GlShaderSystem,\n  GlEncoderSystem,\n  GlStateSystem,\n  GlStencilSystem,\n  GlColorMaskSystem\n];\nconst DefaultWebGLPipes = [...SharedRenderPipes];\nconst DefaultWebGLAdapters = [GlBatchAdaptor, GlMeshAdaptor, GlGraphicsAdaptor];\nconst systems = [];\nconst renderPipes = [];\nconst renderPipeAdaptors = [];\nextensions.handleByNamedList(ExtensionType.WebGLSystem, systems);\nextensions.handleByNamedList(ExtensionType.WebGLPipes, renderPipes);\nextensions.handleByNamedList(ExtensionType.WebGLPipesAdaptor, renderPipeAdaptors);\nextensions.add(...DefaultWebGLSystems, ...DefaultWebGLPipes, ...DefaultWebGLAdapters);\nclass WebGLRenderer extends AbstractRenderer {\n  constructor() {\n    const systemConfig = {\n      name: \"webgl\",\n      type: RendererType.WEBGL,\n      systems,\n      renderPipes,\n      renderPipeAdaptors\n    };\n    super(systemConfig);\n  }\n}\n\nexport { WebGLRenderer };\n//# sourceMappingURL=WebGLRenderer.mjs.map\n"],"names":["GlGraphicsAdaptor","init","uniforms","UniformGroup","uColor","value","Float32Array","type","uTransformMatrix","Matrix","uRound","maxTextures","glProgram","name","bits","colorBit","generateTextureBatchBit","localUniformBit","roundPixelsBit","this","shader","Shader","resources","localUniforms","batchSamplers","getBatchSamplersUniformGroup","execute","graphicsPipe","renderable","context","customShader","renderer","contextSystem","graphicsContext","batcher","instructions","getContextRenderData","groups","globalUniforms","bindGroup","state","set","bind","geometry","batches","i","instructionSize","batch","size","j","textures","count","texture","draw","topology","start","destroy","extension","WebGLPipesAdaptor","GlMeshAdaptor","textureBit","_shader","uTexture","Texture","EMPTY","source","textureUniforms","uTextureMatrix","meshPipe","mesh","warn","uSampler","style","textureMatrix","mapCoord","localUniformsBindGroup","encoder","_geometry","GlBatchAdaptor","constructor","_didUpload","_tempState","State","for2d","batcherPipe","runners","contextChange","add","batchPipe","updateUniformGroup","uniformGroup","blendMode","BUFFER_TYPE","BUFFER_TYPE2","GlBuffer","buffer","_lastBindBaseLocation","_lastBindCallId","updateID","byteLength","GlBufferSystem","_gpuBuffers","Object","create","_boundBufferBases","_minBaseLocation","_nextBindBaseIndex","_bindCallId","_renderer","renderableGC","addManagedHash","_gl","gl","_maxBindings","MAX_UNIFORM_BUFFER_BINDINGS","getParameter","getGlBuffer","uid","createGLBuffer","glBuffer","bindBuffer","bindBufferBase","index","UNIFORM_BUFFER","nextBindBase","hasTransformFeedback","freeLocationForBufferBase","freeIndex","getLastBindBaseLocation","loop","nextIndex","curBuf","bindBufferRange","offset","updateBuffer","_updateID","data","drawType","descriptor","usage","STATIC","STATIC_DRAW","DYNAMIC_DRAW","bufferSubData","_updateSize","BYTES_PER_ELEMENT","bufferData","destroyAll","id","deleteBuffer","onBufferDestroy","contextLost","ARRAY_BUFFER","INDEX","ELEMENT_ARRAY_BUFFER","UNIFORM","createBuffer","on","WebGLSystem","_GlContextSystem","supports","uint32Indices","uniformBufferObject","vertexArrayObject","srgbTextures","nonPowOf2wrapping","msaa","nonPowOf2mipmaps","extensions","handleContextLost","handleContextRestored","isLost","isContextLost","options","defaultOptions","multiView","canvas","get","createCanvas","width","height","view","initFromContext","alpha","background","premultipliedAlpha","antialias","backBuffer","useBackBuffer","createContext","preferWebGLVersion","stencil","preserveDrawingBuffer","powerPreference","ensureCanvasSize","targetCanvas","Math","max","webGLVersion","getWebGLRenderingContext","getExtensions","validateContext","emit","element","addEventListener","getContext","Error","common","anisotropicFiltering","getExtension","floatTextureLinear","s3tc","s3tc_sRGB","etc","etc1","pvrtc","atc","astc","bptc","rgtc","loseContext","drawBuffers","depthTexture","uint32ElementIndex","floatTexture","textureHalfFloat","textureHalfFloatLinear","vertexAttribDivisorANGLE","srgb","colorBufferFloat","provokeExt","provokingVertexWEBGL","FIRST_VERTEX_CONVENTION_WEBGL","event","preventDefault","_contextLossForced","setTimeout","restoreContext","removeEventListener","useProgram","forceContextLoss","attributes","getContextAttributes","isWebGl2","GlContextSystem","GL_FORMATS","GL_FORMATS2","GL_TARGETS","GL_TARGETS2","GL_TYPES","GL_TYPES2","infoMap","uint8x2","UNSIGNED_BYTE","uint8x4","sint8x2","BYTE","sint8x4","unorm8x2","unorm8x4","snorm8x2","snorm8x4","uint16x2","UNSIGNED_SHORT","uint16x4","sint16x2","SHORT","sint16x4","unorm16x2","unorm16x4","snorm16x2","snorm16x4","float16x2","HALF_FLOAT","float16x4","float32","FLOAT","float32x2","float32x3","float32x4","uint32","UNSIGNED_INT","uint32x2","uint32x3","uint32x4","sint32","INT","sint32x2","sint32x3","sint32x4","topologyToGlMap","GlGeometrySystem","_geometryVaoHash","_activeGeometry","_activeVao","hasVao","hasInstance","nativeVaoExtension","createVertexArray","createVertexArrayOES","bindVertexArray","vao","bindVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","nativeInstancedExtension","drawArraysInstanced","a","b","c","d","drawArraysInstancedANGLE","drawElementsInstanced","e","drawElementsInstancedANGLE","vertexAttribDivisor","program","getVao","updateBuffers","reset","unbind","bufferSystem","buffers","length","checkCompatibility","geometryAttributes","shaderAttributes","_attributeData","getSignature","attribs","strings","push","location","join","_key","initGeometryVao","_incRefCount","_getProgramData","signature","onGeometryDestroy","vaoObjectHash","ensureAttributes","activateVao","indexBuffer","lastBuffer","attribute","programAttrib","enableVertexAttribArray","attributeInfo","getAttributeInfoFromFormat","format","substring","vertexAttribIPointer","stride","vertexAttribPointer","normalised","instance","divisor","instanceCount","glTopology","byteSize","glType","drawElements","getSize","drawArrays","bigTriangleGeometry","Geometry","aPosition","_GlBackBufferSystem","_useBackBufferThisRender","_antialias","_state","bigTriangleProgram","GlProgram","vertex","fragment","_bigTriangleShader","WHITE","renderStart","renderTarget","getRenderTarget","target","isRoot","renderTarget2","_targetTexture","colorTexture","_getBackBufferTexture","renderEnd","_presentBackBuffer","finishRenderPass","_backBufferTexture","targetSourceTexture","TextureSource","resolution","_resolution","resize","priority","GlBackBufferSystem","GlColorMaskSystem","_colorMaskCache","setMask","colorMask","GlEncoderSystem","commandFinished","Promise","resolve","setGeometry","skipSync","_activeProgram","GlStencilSystem","_stencilCache","enabled","stencilReference","stencilMode","NONE","_renderTargetStencilState","onRenderTargetChange","_comparisonFuncMapping","always","ALWAYS","never","NEVER","equal","EQUAL","NOTEQUAL","less","LESS","LEQUAL","greater","GREATER","GEQUAL","_stencilOpsMapping","keep","KEEP","zero","ZERO","replace","REPLACE","invert","INVERT","INCR","DECR","INCR_WRAP","DECR_WRAP","_activeRenderTarget","stencilState","DISABLED","setStencilMode","mode","GpuStencilModesToPixi","enable","STENCIL_TEST","stencilFunc","stencilBack","compare","stencilOp","passOp","disable","WGSL_TO_STD40_SIZE","f32","i32","createUboElementsSTD40","uniformData","uboElements","map","uboElement","boundary","curOffset","ceil","generateArraySyncSTD40","offsetToAdd","rowSize","elementSize","remainder","indexOf","createUboSyncFunctionSTD40","createUboSyncFunction","uboSyncFunctions","GlUboSystem","UboSystem","super","createUboElements","generateUboSync","GlRenderTarget","msaaRenderBuffer","GlRenderTargetAdaptor","_clearColorCache","_viewPortCache","Rectangle","renderTargetSystem","_renderTargetSystem","copyToTexture","sourceRenderSurfaceTexture","destinationTexture","originSrc","originDest","glRenderTarget","getGpuRenderTarget","bindFramebuffer","FRAMEBUFFER","resolveTargetFramebuffer","copyTexSubImage2D","TEXTURE_2D","x","y","startRenderPass","clear","clearColor","viewport","gpuRenderTarget","viewPortY","pixelHeight","colorTextures","forEach","framebuffer","viewPortCache","depthStencilRenderBuffer","depth","_initStencil","READ_FRAMEBUFFER","blitFramebuffer","COLOR_BUFFER_BIT","NEAREST","initGpuRenderTarget","resource","_initColor","destroyGpuRenderTarget","deleteFramebuffer","deleteRenderbuffer","renderBuffer","_renderTarget","ALL","COLOR","defaultClearColor","clearColorCache","clearColorArray","resizeGpuRenderTarget","_resizeColor","_resizeStencil","createFramebuffer","pixelWidth","bindSource","glTexture","getGlSource","framebufferTexture2D","COLOR_ATTACHMENT0","viewFramebuffer","_","createRenderbuffer","source2","glInternalFormat","internalFormat","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","framebufferRenderbuffer","DEPTH_STENCIL_ATTACHMENT","DEPTH24_STENCIL8","renderbufferStorage","DEPTH_STENCIL","prerender","CanvasSource","test","postrender","contextCanvas","canvasSource","context2D","drawImage","GlRenderTargetSystem","RenderTargetSystem","adaptor","GlProgramData","uniformGroups","uniformDirtyGroups","uniformBlockBindings","compileShader","src","createShader","shaderSource","booleanArray","array","Array","defaultValue","Int32Array","Uint32Array","GL_TABLE","GL_TO_GLSL_TYPES","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT_VEC2","INT_VEC3","INT_VEC4","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_2D","SAMPLER_CUBE","INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_CUBE","SAMPLER_2D_ARRAY","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D_ARRAY","GLSL_TO_VERTEX_TYPES","float","vec2","vec3","vec4","int","ivec2","ivec3","ivec4","uint","uvec2","uvec3","uvec4","bool","bvec2","bvec3","bvec4","mapType","typeNames","keys","tn","mapGlToVertexFormat","typeValue","logPrettyShaderError","shaderSrc","getShaderSource","split","line","shaderLog","getShaderInfoLog","splitShader","dedupe","lineNumbers","parseFloat","filter","n","logArgs","number","fragmentSourceToLog","console","error","groupCollapsed","groupEnd","defaultSyncData","textureCount","blockIndex","GlShaderSystem","_programDataHash","_shaderSyncFunctions","_setProgram","syncFunction","_generateShaderSync","transformFeedbackVaryings","bindUniformBlock","programData","isBufferResource","_bufferResource","ubo","boundLocation","uniformBlockIndex","_uniformBlockData","uniformBlockBinding","_createProgramData","key","glVertShader","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","webGLProgram","createProgram","attachShader","names","bufferMode","SEPARATE_ATTRIBS","INTERLEAVED_ATTRIBS","linkProgram","getProgramParameter","LINK_STATUS","vertexShader","fragmentShader","getShaderParameter","COMPILE_STATUS","getProgramInfoLog","logProgramError","sortAttributes","totalAttributes","ACTIVE_ATTRIBUTES","attribData","getActiveAttrib","startsWith","sort","bindAttribLocation","getAttribLocation","extractAttributesFromGlProgram","_uniformData","totalUniforms","ACTIVE_UNIFORMS","getActiveUniform","isArray","match","getUniformData","ACTIVE_UNIFORM_BLOCKS","uniformBlocks","totalUniformsBlocks","getActiveUniformBlockName","getUniformBlockIndex","getActiveUniformBlockParameter","UNIFORM_BLOCK_DATA_SIZE","getUboData","deleteShader","getUniformLocation","generateProgram","shaderSystem","funcFragments","headerFragments","addedTextreSystem","group","resName","_uniformBindMap","Number","BufferResource","uniformName","uniform1i","functionSource","Function","generateShaderSyncCode","UNIFORM_TO_SINGLE_SETTERS","u32","UNIFORM_TO_ARRAY_SETTERS","GlUniformGroupSystem","_cache","_uniformGroupSyncHash","syncData","isStatic","_dirtyId","_getUniformSyncFunction","syncFunc","_signature","_createUniformSyncFunction","uniformGroupSyncHash","_getSignature","_generateUniformsSync","uniform","uniformStructures","parsed","uniformParsers","parser","template","generateUniformsSync","preFix","_GlStateSystem","stateId","polygonOffset","_blendEq","setBlend","setOffset","setCullFace","setDepthTest","setFrontFace","setDepthMask","checks","defaultState","blendModesMap","blendMap","normal","ONE","ONE_MINUS_SRC_ALPHA","multiply","DST_COLOR","screen","ONE_MINUS_SRC_COLOR","none","SRC_ALPHA","erase","ext","min","MIN_EXT","MAX_EXT","MIN","MAX","mapWebGLBlendModesToPixi","diff","call","forceState","_updateCheck","_checkBlendMode","BLEND","_checkPolygonOffset","POLYGON_OFFSET_FILL","DEPTH_TEST","depthMask","CULL_FACE","frontFace","setBlendMode","blendFunc","blendFuncSeparate","blendEquationSeparate","FUNC_ADD","setPolygonOffset","scale","pixelStorei","UNPACK_FLIP_Y_WEBGL","func","splice","system","GlStateSystem","GlTexture","RGBA","samplerType","glUploadBufferImageResource","upload","texSubImage2D","texImage2D","compressedFormatMap","glUploadCompressedTextureResource","UNPACK_ALIGNMENT","mipWidth","mipHeight","compressed","levelBuffer","compressedTexImage2D","glUploadImageResource","alphaMode","UNPACK_PREMULTIPLY_ALPHA_WEBGL","glWidth","glHeight","textureWidth","textureHeight","resourceWidth","resourceHeight","glUploadVideoResource","isValid","scaleModeToGlFilter","linear","nearest","mipmapScaleModeToGlFilter","wrapModeToGlAddress","repeat","compareModeToGlCompare","applyStyleParams","mipmaps","anisotropicExt","glFunctionName","firstParam","forceClamp","firstCreation","castParam","addressModeU","addressModeV","addressModeW","wrapModeS","wrapModeT","wrapModeR","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","magFilter","TEXTURE_MAG_FILTER","mipmapFilter","glFilterMode","minFilter","TEXTURE_MIN_FILTER","maxAnisotropy","level","MAX_TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_COMPARE_FUNC","GlTextureSystem","managedTextures","_glTextures","_glSamplers","_boundTextures","_activeTextureLocation","_boundSamplers","_uploads","image","video","_useSeparateSamplers","_mapFormatToInternalFormat","bgra8unorm","SRGB8_ALPHA8_EXT","SRGB8_ALPHA8","RGBA8","r8unorm","R8","r8snorm","R8_SNORM","r8uint","R8UI","r8sint","R8I","r16uint","R16UI","r16sint","R16I","r16float","R16F","rg8unorm","RG8","rg8snorm","RG8_SNORM","rg8uint","RG8UI","rg8sint","RG8I","r32uint","R32UI","r32sint","R32I","r32float","R32F","rg16uint","RG16UI","rg16sint","RG16I","rg16float","RG16F","rgba8unorm","rgba8snorm","RGBA8_SNORM","rgba8uint","RGBA8UI","rgba8sint","RGBA8I","rgb9e5ufloat","RGB9_E5","rgb10a2unorm","RGB10_A2","rg11b10ufloat","R11F_G11F_B10F","rg32uint","RG32UI","rg32sint","RG32I","rg32float","RG32F","rgba16uint","RGBA16UI","rgba16sint","RGBA16I","rgba16float","RGBA16F","rgba32uint","RGBA32UI","rgba32sint","RGBA32I","rgba32float","RGBA32F","stencil8","STENCIL_INDEX8","depth16unorm","DEPTH_COMPONENT16","depth24plus","DEPTH_COMPONENT24","depth32float","DEPTH_COMPONENT32F","DEPTH32F_STENCIL8","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_R11_EAC","COMPRESSED_SIGNED_RG11_EAC","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","mapFormatToGlInternalFormat","_mapFormatToType","UNSIGNED_INT_5_9_9_9_REV","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_24_8","FLOAT_32_UNSIGNED_INT_24_8_REV","mapFormatToGlType","_mapFormatToFormat","RED","RG","RGB","DEPTH_COMPONENT","mapFormatToGlFormat","initSource","_bindSampler","_touched","textureGC","_activateLocation","bindTexture","bindSampler","sampler","_getGlSampler","boundTextures","activeTexture","TEXTURE0","_initSource","createTexture","autoGenerateMipmaps","isPowerOfTwo","biggestDimension","mipLevelCount","floor","log2","includes","onSourceUpdate","onStyleChange","onSourceDestroy","onSourceUnload","onUpdateMipmaps","updateStyle","deleteTexture","uploadMethodId","generateMipmap","off","_initSampler","glSampler","createSampler","_resourceId","generateCanvas","pixels","getPixels","ctx","imageData","createImageData","putImageData","frame","round","Uint8Array","glRenterTarget","readPixels","Uint8ClampedArray","slice","DefaultWebGLSystems","SharedSystems","DefaultWebGLPipes","DefaultWebGLAdapters","systems","renderPipes","renderPipeAdaptors","handleByNamedList","WebGLPipes","WebGLRenderer","AbstractRenderer","WEBGL"],"sourceRoot":""}